node {
  name: "global_step/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 0
      }
    }
  }
}
node {
  name: "global_step"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "global_step/Assign"
  op: "Assign"
  input: "global_step"
  input: "global_step/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "global_step/read"
  op: "Identity"
  input: "global_step"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "global_step/IsVariableInitialized"
  op: "IsVariableInitialized"
  input: "global_step"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "global_step/cond/Switch"
  op: "Switch"
  input: "global_step/IsVariableInitialized"
  input: "global_step/IsVariableInitialized"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "global_step/cond/switch_t"
  op: "Identity"
  input: "global_step/cond/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "global_step/cond/switch_f"
  op: "Identity"
  input: "global_step/cond/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "global_step/cond/pred_id"
  op: "Identity"
  input: "global_step/IsVariableInitialized"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "global_step/cond/read"
  op: "Identity"
  input: "global_step/cond/read/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "global_step/cond/read/Switch"
  op: "RefSwitch"
  input: "global_step"
  input: "global_step/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "global_step/cond/Switch_1"
  op: "Switch"
  input: "global_step/Initializer/zeros"
  input: "global_step/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "global_step/cond/Merge"
  op: "Merge"
  input: "global_step/cond/Switch_1"
  input: "global_step/cond/read"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "global_step/add/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 0
      }
    }
  }
}
node {
  name: "global_step/add"
  op: "Add"
  input: "global_step/cond/Merge"
  input: "global_step/add/y"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "tensors/component_0"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "buffer_size"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 320
      }
    }
  }
}
node {
  name: "seed"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 3
      }
    }
  }
}
node {
  name: "seed2/Const"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 3
      }
    }
  }
}
node {
  name: "seed2/Equal/y"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 0
      }
    }
  }
}
node {
  name: "seed2/Equal"
  op: "Equal"
  input: "seed"
  input: "seed2/Equal/y"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "seed2/Equal_1/y"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 0
      }
    }
  }
}
node {
  name: "seed2/Equal_1"
  op: "Equal"
  input: "seed2/Const"
  input: "seed2/Equal_1/y"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "seed2/LogicalAnd"
  op: "LogicalAnd"
  input: "seed2/Equal"
  input: "seed2/Equal_1"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "seed2/Const_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 2147483647
      }
    }
  }
}
node {
  name: "seed2"
  op: "Select"
  input: "seed2/LogicalAnd"
  input: "seed2/Const_1"
  input: "seed2/Const"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "count"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: -1
      }
    }
  }
}
node {
  name: "batch_size"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 32
      }
    }
  }
}
node {
  name: "drop_remainder"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_BOOL
        tensor_shape {
        }
        bool_val: false
      }
    }
  }
}
node {
  name: "OneShotIterator"
  op: "OneShotIterator"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dataset_factory"
    value {
      func {
        name: "_make_dataset_KR9E5YonATk"
      }
    }
  }
  attr {
    key: "output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 28
          }
          dim {
            size: 28
          }
          dim {
            size: 1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "output_types"
    value {
      list {
        type: DT_FLOAT
        type: DT_INT32
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "IteratorToStringHandle"
  op: "IteratorToStringHandle"
  input: "OneShotIterator"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "IteratorGetNext"
  op: "IteratorGetNext"
  input: "OneShotIterator"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 28
          }
          dim {
            size: 28
          }
          dim {
            size: 1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 28
          }
          dim {
            size: 28
          }
          dim {
            size: 1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "output_types"
    value {
      list {
        type: DT_FLOAT
        type: DT_INT32
      }
    }
  }
}
node {
  name: "adanet/iteration_0/step/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 0
      }
    }
  }
}
node {
  name: "adanet/iteration_0/step"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "adanet/iteration_0/step/Assign"
  op: "Assign"
  input: "adanet/iteration_0/step"
  input: "adanet/iteration_0/step/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "adanet/iteration_0/step/read"
  op: "Identity"
  input: "adanet/iteration_0/step"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/input_layer/images/Shape"
  op: "Shape"
  input: "IteratorGetNext"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/input_layer/images/strided_slice/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/input_layer/images/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/input_layer/images/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/input_layer/images/strided_slice"
  op: "StridedSlice"
  input: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/input_layer/images/Shape"
  input: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/input_layer/images/strided_slice/stack"
  input: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/input_layer/images/strided_slice/stack_1"
  input: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/input_layer/images/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/input_layer/images/Reshape/shape/1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 784
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/input_layer/images/Reshape/shape"
  op: "Pack"
  input: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/input_layer/images/strided_slice"
  input: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/input_layer/images/Reshape/shape/1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/input_layer/images/Reshape"
  op: "Reshape"
  input: "IteratorGetNext"
  input: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/input_layer/images/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 784
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/input_layer/concat/concat_dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/input_layer/concat"
  op: "Identity"
  input: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/input_layer/images/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 784
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/dense/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/subnetwork_t0_1_layer_dnn/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\020\003\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/dense/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/subnetwork_t0_1_layer_dnn/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.08574929088354111
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/dense/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/subnetwork_t0_1_layer_dnn/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.08574929088354111
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/dense/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/dense/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/subnetwork_t0_1_layer_dnn/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 784
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 3
    }
  }
  attr {
    key: "seed2"
    value {
      i: 3
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/dense/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/dense/kernel/Initializer/random_uniform/max"
  input: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/dense/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/subnetwork_t0_1_layer_dnn/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/dense/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/dense/kernel/Initializer/random_uniform/RandomUniform"
  input: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/dense/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/subnetwork_t0_1_layer_dnn/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 784
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/dense/kernel/Initializer/random_uniform"
  op: "Add"
  input: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/dense/kernel/Initializer/random_uniform/mul"
  input: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/dense/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/subnetwork_t0_1_layer_dnn/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 784
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/dense/kernel"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/subnetwork_t0_1_layer_dnn/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 784
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 784
        }
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/dense/kernel/Assign"
  op: "Assign"
  input: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/dense/kernel"
  input: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/dense/kernel/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/subnetwork_t0_1_layer_dnn/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 784
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/dense/kernel/read"
  op: "Identity"
  input: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/dense/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/subnetwork_t0_1_layer_dnn/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 784
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/dense/bias/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/subnetwork_t0_1_layer_dnn/dense/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/dense/bias"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/subnetwork_t0_1_layer_dnn/dense/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/dense/bias/Assign"
  op: "Assign"
  input: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/dense/bias"
  input: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/dense/bias/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/subnetwork_t0_1_layer_dnn/dense/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/dense/bias/read"
  op: "Identity"
  input: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/dense/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/subnetwork_t0_1_layer_dnn/dense/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/dense/MatMul"
  op: "MatMul"
  input: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/input_layer/concat"
  input: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/dense/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/dense/BiasAdd"
  op: "BiasAdd"
  input: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/dense/MatMul"
  input: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/dense/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/dense/Relu"
  op: "Relu"
  input: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/dense/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/dropout/Identity"
  op: "Identity"
  input: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/dense/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/dense_1/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/subnetwork_t0_1_layer_dnn/dense_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: " \000\000\000\n\000\000\000"
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/dense_1/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/subnetwork_t0_1_layer_dnn/dense_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.37796446681022644
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/dense_1/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/subnetwork_t0_1_layer_dnn/dense_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.37796446681022644
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/dense_1/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/dense_1/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/subnetwork_t0_1_layer_dnn/dense_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 3
    }
  }
  attr {
    key: "seed2"
    value {
      i: 3
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/dense_1/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/dense_1/kernel/Initializer/random_uniform/max"
  input: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/dense_1/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/subnetwork_t0_1_layer_dnn/dense_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/dense_1/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/dense_1/kernel/Initializer/random_uniform/RandomUniform"
  input: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/dense_1/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/subnetwork_t0_1_layer_dnn/dense_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/dense_1/kernel/Initializer/random_uniform"
  op: "Add"
  input: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/dense_1/kernel/Initializer/random_uniform/mul"
  input: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/dense_1/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/subnetwork_t0_1_layer_dnn/dense_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/dense_1/kernel"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/subnetwork_t0_1_layer_dnn/dense_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
        dim {
          size: 10
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/dense_1/kernel/Assign"
  op: "Assign"
  input: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/dense_1/kernel"
  input: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/dense_1/kernel/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/subnetwork_t0_1_layer_dnn/dense_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/dense_1/kernel/read"
  op: "Identity"
  input: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/dense_1/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/subnetwork_t0_1_layer_dnn/dense_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/dense_1/bias/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/subnetwork_t0_1_layer_dnn/dense_1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 10
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/dense_1/bias"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/subnetwork_t0_1_layer_dnn/dense_1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 10
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/dense_1/bias/Assign"
  op: "Assign"
  input: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/dense_1/bias"
  input: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/dense_1/bias/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/subnetwork_t0_1_layer_dnn/dense_1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/dense_1/bias/read"
  op: "Identity"
  input: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/dense_1/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/subnetwork_t0_1_layer_dnn/dense_1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/dense_1/MatMul"
  op: "MatMul"
  input: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/dropout/Identity"
  input: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/dense_1/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/dense_1/BiasAdd"
  op: "BiasAdd"
  input: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/dense_1/MatMul"
  input: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/dense_1/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/ToFloat/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/ToFloat"
  op: "Cast"
  input: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/ToFloat/x"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/Sqrt"
  op: "Sqrt"
  input: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/ToFloat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/head/logits/Shape"
  op: "Shape"
  input: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/dense_1/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/head/logits/assert_rank_at_least/rank"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/head/logits/assert_rank_at_least/assert_type/statically_determined_correct_type"
  op: "NoOp"
}
node {
  name: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/head/logits/assert_rank_at_least/static_checks_determined_all_ok"
  op: "NoOp"
}
node {
  name: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/head/predictions/class_ids/dimension"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/head/predictions/class_ids"
  op: "ArgMax"
  input: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/dense_1/BiasAdd"
  input: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/head/predictions/class_ids/dimension"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "output_type"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/head/predictions/ExpandDims/dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/head/predictions/ExpandDims"
  op: "ExpandDims"
  input: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/head/predictions/class_ids"
  input: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/head/predictions/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/head/predictions/str_classes"
  op: "AsString"
  input: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/head/predictions/ExpandDims"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "fill"
    value {
      s: ""
    }
  }
  attr {
    key: "precision"
    value {
      i: -1
    }
  }
  attr {
    key: "scientific"
    value {
      b: false
    }
  }
  attr {
    key: "shortest"
    value {
      b: false
    }
  }
  attr {
    key: "width"
    value {
      i: -1
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/head/predictions/probabilities"
  op: "Softmax"
  input: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/dense_1/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/head/labels/ExpandDims/dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/head/labels/ExpandDims"
  op: "ExpandDims"
  input: "IteratorGetNext:1"
  input: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/head/labels/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/head/labels/Shape"
  op: "Shape"
  input: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/head/labels/ExpandDims"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/head/labels/Shape_1"
  op: "Shape"
  input: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/dense_1/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/head/labels/assert_rank_at_least/rank"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/head/labels/assert_rank_at_least/Shape"
  op: "Shape"
  input: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/head/labels/ExpandDims"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/head/labels/assert_rank_at_least/assert_type/statically_determined_correct_type"
  op: "NoOp"
}
node {
  name: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/head/labels/assert_rank_at_least/static_checks_determined_all_ok"
  op: "NoOp"
}
node {
  name: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/head/labels/strided_slice/stack"
  op: "Const"
  input: "^adanet/iteration_0/subnetwork_t0_1_layer_dnn/head/labels/assert_rank_at_least/static_checks_determined_all_ok"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/head/labels/strided_slice/stack_1"
  op: "Const"
  input: "^adanet/iteration_0/subnetwork_t0_1_layer_dnn/head/labels/assert_rank_at_least/static_checks_determined_all_ok"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/head/labels/strided_slice/stack_2"
  op: "Const"
  input: "^adanet/iteration_0/subnetwork_t0_1_layer_dnn/head/labels/assert_rank_at_least/static_checks_determined_all_ok"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/head/labels/strided_slice"
  op: "StridedSlice"
  input: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/head/labels/Shape_1"
  input: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/head/labels/strided_slice/stack"
  input: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/head/labels/strided_slice/stack_1"
  input: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/head/labels/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/head/labels/concat/values_1"
  op: "Const"
  input: "^adanet/iteration_0/subnetwork_t0_1_layer_dnn/head/labels/assert_rank_at_least/static_checks_determined_all_ok"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/head/labels/concat/axis"
  op: "Const"
  input: "^adanet/iteration_0/subnetwork_t0_1_layer_dnn/head/labels/assert_rank_at_least/static_checks_determined_all_ok"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/head/labels/concat"
  op: "ConcatV2"
  input: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/head/labels/strided_slice"
  input: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/head/labels/concat/values_1"
  input: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/head/labels/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/head/labels/assert_equal/Equal"
  op: "Equal"
  input: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/head/labels/concat"
  input: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/head/labels/Shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/head/labels/assert_equal/Const"
  op: "Const"
  input: "^adanet/iteration_0/subnetwork_t0_1_layer_dnn/head/labels/assert_rank_at_least/static_checks_determined_all_ok"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/head/labels/assert_equal/All"
  op: "All"
  input: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/head/labels/assert_equal/Equal"
  input: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/head/labels/assert_equal/Const"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/head/labels/assert_equal/Assert/Const"
  op: "Const"
  input: "^adanet/iteration_0/subnetwork_t0_1_layer_dnn/head/labels/assert_rank_at_least/static_checks_determined_all_ok"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "expected_labels_shape: "
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/head/labels/assert_equal/Assert/Const_1"
  op: "Const"
  input: "^adanet/iteration_0/subnetwork_t0_1_layer_dnn/head/labels/assert_rank_at_least/static_checks_determined_all_ok"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "labels_shape: "
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/head/labels/assert_equal/Assert/Assert/data_0"
  op: "Const"
  input: "^adanet/iteration_0/subnetwork_t0_1_layer_dnn/head/labels/assert_rank_at_least/static_checks_determined_all_ok"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "expected_labels_shape: "
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/head/labels/assert_equal/Assert/Assert/data_2"
  op: "Const"
  input: "^adanet/iteration_0/subnetwork_t0_1_layer_dnn/head/labels/assert_rank_at_least/static_checks_determined_all_ok"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "labels_shape: "
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/head/labels/assert_equal/Assert/Assert"
  op: "Assert"
  input: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/head/labels/assert_equal/All"
  input: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/head/labels/assert_equal/Assert/Assert/data_0"
  input: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/head/labels/concat"
  input: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/head/labels/assert_equal/Assert/Assert/data_2"
  input: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/head/labels/Shape"
  attr {
    key: "T"
    value {
      list {
        type: DT_STRING
        type: DT_INT32
        type: DT_STRING
        type: DT_INT32
      }
    }
  }
  attr {
    key: "summarize"
    value {
      i: 3
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/head/labels"
  op: "Identity"
  input: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/head/labels/ExpandDims"
  input: "^adanet/iteration_0/subnetwork_t0_1_layer_dnn/head/labels/assert_equal/Assert/Assert"
  input: "^adanet/iteration_0/subnetwork_t0_1_layer_dnn/head/labels/assert_rank_at_least/static_checks_determined_all_ok"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/head/assert_range/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 9
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/head/assert_range/assert_less_equal/LessEqual"
  op: "LessEqual"
  input: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/head/labels"
  input: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/head/assert_range/Const"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/head/assert_range/assert_less_equal/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/head/assert_range/assert_less_equal/All"
  op: "All"
  input: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/head/assert_range/assert_less_equal/LessEqual"
  input: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/head/assert_range/assert_less_equal/Const"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/head/assert_range/assert_less_equal/Assert/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "Labels must <= n_classes - 1"
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/head/assert_range/assert_less_equal/Assert/Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "Condition x <= y did not hold element-wise:x (adanet/iteration_0/subnetwork_t0_1_layer_dnn/head/labels:0) = "
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/head/assert_range/assert_less_equal/Assert/Const_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "y (adanet/iteration_0/subnetwork_t0_1_layer_dnn/head/assert_range/Const:0) = "
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/head/assert_range/assert_less_equal/Assert/Assert/data_0"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "Labels must <= n_classes - 1"
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/head/assert_range/assert_less_equal/Assert/Assert/data_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "Condition x <= y did not hold element-wise:x (adanet/iteration_0/subnetwork_t0_1_layer_dnn/head/labels:0) = "
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/head/assert_range/assert_less_equal/Assert/Assert/data_3"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "y (adanet/iteration_0/subnetwork_t0_1_layer_dnn/head/assert_range/Const:0) = "
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/head/assert_range/assert_less_equal/Assert/Assert"
  op: "Assert"
  input: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/head/assert_range/assert_less_equal/All"
  input: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/head/assert_range/assert_less_equal/Assert/Assert/data_0"
  input: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/head/assert_range/assert_less_equal/Assert/Assert/data_1"
  input: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/head/labels"
  input: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/head/assert_range/assert_less_equal/Assert/Assert/data_3"
  input: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/head/assert_range/Const"
  attr {
    key: "T"
    value {
      list {
        type: DT_STRING
        type: DT_STRING
        type: DT_INT32
        type: DT_STRING
        type: DT_INT32
      }
    }
  }
  attr {
    key: "summarize"
    value {
      i: 3
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/head/assert_range/assert_non_negative/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/head/assert_range/assert_non_negative/assert_less_equal/LessEqual"
  op: "LessEqual"
  input: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/head/assert_range/assert_non_negative/Const"
  input: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/head/labels"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/head/assert_range/assert_non_negative/assert_less_equal/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/head/assert_range/assert_non_negative/assert_less_equal/All"
  op: "All"
  input: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/head/assert_range/assert_non_negative/assert_less_equal/LessEqual"
  input: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/head/assert_range/assert_non_negative/assert_less_equal/Const"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/head/assert_range/assert_non_negative/assert_less_equal/Assert/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "Labels must >= 0"
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/head/assert_range/assert_non_negative/assert_less_equal/Assert/Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "Condition x >= 0 did not hold element-wise:"
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/head/assert_range/assert_non_negative/assert_less_equal/Assert/Const_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "x (adanet/iteration_0/subnetwork_t0_1_layer_dnn/head/labels:0) = "
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/head/assert_range/assert_non_negative/assert_less_equal/Assert/Assert/data_0"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "Labels must >= 0"
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/head/assert_range/assert_non_negative/assert_less_equal/Assert/Assert/data_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "Condition x >= 0 did not hold element-wise:"
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/head/assert_range/assert_non_negative/assert_less_equal/Assert/Assert/data_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "x (adanet/iteration_0/subnetwork_t0_1_layer_dnn/head/labels:0) = "
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/head/assert_range/assert_non_negative/assert_less_equal/Assert/Assert"
  op: "Assert"
  input: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/head/assert_range/assert_non_negative/assert_less_equal/All"
  input: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/head/assert_range/assert_non_negative/assert_less_equal/Assert/Assert/data_0"
  input: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/head/assert_range/assert_non_negative/assert_less_equal/Assert/Assert/data_1"
  input: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/head/assert_range/assert_non_negative/assert_less_equal/Assert/Assert/data_2"
  input: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/head/labels"
  attr {
    key: "T"
    value {
      list {
        type: DT_STRING
        type: DT_STRING
        type: DT_STRING
        type: DT_INT32
      }
    }
  }
  attr {
    key: "summarize"
    value {
      i: 3
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/head/assert_range/Identity"
  op: "Identity"
  input: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/head/labels"
  input: "^adanet/iteration_0/subnetwork_t0_1_layer_dnn/head/assert_range/assert_less_equal/Assert/Assert"
  input: "^adanet/iteration_0/subnetwork_t0_1_layer_dnn/head/assert_range/assert_non_negative/assert_less_equal/Assert/Assert"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/head/sparse_softmax_cross_entropy_loss/remove_squeezable_dimensions/Squeeze"
  op: "Squeeze"
  input: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/head/assert_range/Identity"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: -1
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/head/sparse_softmax_cross_entropy_loss/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/head/sparse_softmax_cross_entropy_loss/xentropy/Shape"
  op: "Shape"
  input: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/head/sparse_softmax_cross_entropy_loss/remove_squeezable_dimensions/Squeeze"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/head/sparse_softmax_cross_entropy_loss/xentropy/xentropy"
  op: "SparseSoftmaxCrossEntropyWithLogits"
  input: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/dense_1/BiasAdd"
  input: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/head/sparse_softmax_cross_entropy_loss/remove_squeezable_dimensions/Squeeze"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tlabels"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/head/sparse_softmax_cross_entropy_loss/assert_broadcastable/weights/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/head/sparse_softmax_cross_entropy_loss/assert_broadcastable/weights/rank"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/head/sparse_softmax_cross_entropy_loss/assert_broadcastable/values/shape"
  op: "Shape"
  input: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/head/sparse_softmax_cross_entropy_loss/xentropy/xentropy"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/head/sparse_softmax_cross_entropy_loss/assert_broadcastable/values/rank"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/head/sparse_softmax_cross_entropy_loss/assert_broadcastable/static_scalar_check_success"
  op: "NoOp"
}
node {
  name: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/head/sparse_softmax_cross_entropy_loss/Mul"
  op: "Mul"
  input: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/head/sparse_softmax_cross_entropy_loss/xentropy/xentropy"
  input: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/head/sparse_softmax_cross_entropy_loss/Const"
  input: "^adanet/iteration_0/subnetwork_t0_1_layer_dnn/head/sparse_softmax_cross_entropy_loss/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/head/ExpandDims/dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/head/ExpandDims"
  op: "ExpandDims"
  input: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/head/sparse_softmax_cross_entropy_loss/Mul"
  input: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/head/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/head/weighted_loss/assert_broadcastable/weights"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/head/weighted_loss/assert_broadcastable/weights/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/head/weighted_loss/assert_broadcastable/weights/rank"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/head/weighted_loss/assert_broadcastable/values/shape"
  op: "Shape"
  input: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/head/ExpandDims"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/head/weighted_loss/assert_broadcastable/values/rank"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/head/weighted_loss/assert_broadcastable/static_scalar_check_success"
  op: "NoOp"
}
node {
  name: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/head/weighted_loss/ToFloat/x"
  op: "Const"
  input: "^adanet/iteration_0/subnetwork_t0_1_layer_dnn/head/weighted_loss/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/head/weighted_loss/Mul"
  op: "Mul"
  input: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/head/ExpandDims"
  input: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/head/weighted_loss/ToFloat/x"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/head/weighted_loss/Const"
  op: "Const"
  input: "^adanet/iteration_0/subnetwork_t0_1_layer_dnn/head/weighted_loss/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/head/weighted_loss/Sum"
  op: "Sum"
  input: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/head/weighted_loss/Mul"
  input: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/head/weighted_loss/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/head/weighted_loss/num_elements"
  op: "Size"
  input: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/head/ExpandDims"
  input: "^adanet/iteration_0/subnetwork_t0_1_layer_dnn/head/weighted_loss/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/head/weighted_loss/num_elements/Cast"
  op: "Cast"
  input: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/head/weighted_loss/num_elements"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/head/weighted_loss/Const_1"
  op: "Const"
  input: "^adanet/iteration_0/subnetwork_t0_1_layer_dnn/head/weighted_loss/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/head/weighted_loss/Sum_1"
  op: "Sum"
  input: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/head/weighted_loss/Sum"
  input: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/head/weighted_loss/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/head/weighted_loss/value"
  op: "DivNoNan"
  input: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/head/weighted_loss/Sum_1"
  input: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/head/weighted_loss/num_elements/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/metrics/average_loss/total/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/subnetwork_t0_1_layer_dnn/metrics/average_loss/total"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/metrics/average_loss/total"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/subnetwork_t0_1_layer_dnn/metrics/average_loss/total"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/metrics/average_loss/total/Assign"
  op: "Assign"
  input: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/metrics/average_loss/total"
  input: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/metrics/average_loss/total/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/subnetwork_t0_1_layer_dnn/metrics/average_loss/total"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/metrics/average_loss/total/read"
  op: "Identity"
  input: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/metrics/average_loss/total"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/subnetwork_t0_1_layer_dnn/metrics/average_loss/total"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/metrics/average_loss/count/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/subnetwork_t0_1_layer_dnn/metrics/average_loss/count"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/metrics/average_loss/count"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/subnetwork_t0_1_layer_dnn/metrics/average_loss/count"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/metrics/average_loss/count/Assign"
  op: "Assign"
  input: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/metrics/average_loss/count"
  input: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/metrics/average_loss/count/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/subnetwork_t0_1_layer_dnn/metrics/average_loss/count"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/metrics/average_loss/count/read"
  op: "Identity"
  input: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/metrics/average_loss/count"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/subnetwork_t0_1_layer_dnn/metrics/average_loss/count"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/metrics/average_loss/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/metrics/average_loss/broadcast_weights/assert_broadcastable/weights/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/metrics/average_loss/broadcast_weights/assert_broadcastable/weights/rank"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/metrics/average_loss/broadcast_weights/assert_broadcastable/values/shape"
  op: "Shape"
  input: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/head/ExpandDims"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/metrics/average_loss/broadcast_weights/assert_broadcastable/values/rank"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/metrics/average_loss/broadcast_weights/assert_broadcastable/static_scalar_check_success"
  op: "NoOp"
}
node {
  name: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/metrics/average_loss/broadcast_weights/ones_like/Shape"
  op: "Shape"
  input: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/head/ExpandDims"
  input: "^adanet/iteration_0/subnetwork_t0_1_layer_dnn/metrics/average_loss/broadcast_weights/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/metrics/average_loss/broadcast_weights/ones_like/Const"
  op: "Const"
  input: "^adanet/iteration_0/subnetwork_t0_1_layer_dnn/metrics/average_loss/broadcast_weights/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/metrics/average_loss/broadcast_weights/ones_like"
  op: "Fill"
  input: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/metrics/average_loss/broadcast_weights/ones_like/Shape"
  input: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/metrics/average_loss/broadcast_weights/ones_like/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/metrics/average_loss/broadcast_weights"
  op: "Mul"
  input: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/metrics/average_loss/Const"
  input: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/metrics/average_loss/broadcast_weights/ones_like"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/metrics/average_loss/Mul"
  op: "Mul"
  input: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/head/ExpandDims"
  input: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/metrics/average_loss/broadcast_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/metrics/average_loss/Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/metrics/average_loss/Sum"
  op: "Sum"
  input: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/metrics/average_loss/broadcast_weights"
  input: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/metrics/average_loss/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/metrics/average_loss/Const_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/metrics/average_loss/Sum_1"
  op: "Sum"
  input: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/metrics/average_loss/Mul"
  input: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/metrics/average_loss/Const_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/metrics/average_loss/AssignAdd"
  op: "AssignAdd"
  input: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/metrics/average_loss/total"
  input: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/metrics/average_loss/Sum_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/subnetwork_t0_1_layer_dnn/metrics/average_loss/total"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/metrics/average_loss/AssignAdd_1"
  op: "AssignAdd"
  input: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/metrics/average_loss/count"
  input: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/metrics/average_loss/Sum"
  input: "^adanet/iteration_0/subnetwork_t0_1_layer_dnn/metrics/average_loss/Mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/subnetwork_t0_1_layer_dnn/metrics/average_loss/count"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/metrics/average_loss/Maximum/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/metrics/average_loss/Maximum"
  op: "Maximum"
  input: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/metrics/average_loss/count/read"
  input: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/metrics/average_loss/Maximum/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/metrics/average_loss/value"
  op: "DivNoNan"
  input: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/metrics/average_loss/total/read"
  input: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/metrics/average_loss/Maximum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/metrics/average_loss/Maximum_1/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/metrics/average_loss/Maximum_1"
  op: "Maximum"
  input: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/metrics/average_loss/AssignAdd_1"
  input: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/metrics/average_loss/Maximum_1/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/metrics/average_loss/update_op"
  op: "DivNoNan"
  input: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/metrics/average_loss/AssignAdd"
  input: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/metrics/average_loss/Maximum_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/metrics/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/metrics/Cast"
  op: "Cast"
  input: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/head/predictions/ExpandDims"
  attr {
    key: "DstT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/metrics/Equal"
  op: "Equal"
  input: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/metrics/Cast"
  input: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/head/assert_range/Identity"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/metrics/ToFloat"
  op: "Cast"
  input: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/metrics/Equal"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/metrics/accuracy/total/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/subnetwork_t0_1_layer_dnn/metrics/accuracy/total"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/metrics/accuracy/total"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/subnetwork_t0_1_layer_dnn/metrics/accuracy/total"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/metrics/accuracy/total/Assign"
  op: "Assign"
  input: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/metrics/accuracy/total"
  input: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/metrics/accuracy/total/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/subnetwork_t0_1_layer_dnn/metrics/accuracy/total"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/metrics/accuracy/total/read"
  op: "Identity"
  input: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/metrics/accuracy/total"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/subnetwork_t0_1_layer_dnn/metrics/accuracy/total"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/metrics/accuracy/count/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/subnetwork_t0_1_layer_dnn/metrics/accuracy/count"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/metrics/accuracy/count"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/subnetwork_t0_1_layer_dnn/metrics/accuracy/count"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/metrics/accuracy/count/Assign"
  op: "Assign"
  input: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/metrics/accuracy/count"
  input: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/metrics/accuracy/count/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/subnetwork_t0_1_layer_dnn/metrics/accuracy/count"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/metrics/accuracy/count/read"
  op: "Identity"
  input: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/metrics/accuracy/count"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/subnetwork_t0_1_layer_dnn/metrics/accuracy/count"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/metrics/accuracy/broadcast_weights/assert_broadcastable/weights/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/metrics/accuracy/broadcast_weights/assert_broadcastable/weights/rank"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/metrics/accuracy/broadcast_weights/assert_broadcastable/values/shape"
  op: "Shape"
  input: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/metrics/ToFloat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/metrics/accuracy/broadcast_weights/assert_broadcastable/values/rank"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/metrics/accuracy/broadcast_weights/assert_broadcastable/static_scalar_check_success"
  op: "NoOp"
}
node {
  name: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/metrics/accuracy/broadcast_weights/ones_like/Shape"
  op: "Shape"
  input: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/metrics/ToFloat"
  input: "^adanet/iteration_0/subnetwork_t0_1_layer_dnn/metrics/accuracy/broadcast_weights/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/metrics/accuracy/broadcast_weights/ones_like/Const"
  op: "Const"
  input: "^adanet/iteration_0/subnetwork_t0_1_layer_dnn/metrics/accuracy/broadcast_weights/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/metrics/accuracy/broadcast_weights/ones_like"
  op: "Fill"
  input: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/metrics/accuracy/broadcast_weights/ones_like/Shape"
  input: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/metrics/accuracy/broadcast_weights/ones_like/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/metrics/accuracy/broadcast_weights"
  op: "Mul"
  input: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/metrics/Const"
  input: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/metrics/accuracy/broadcast_weights/ones_like"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/metrics/accuracy/Mul"
  op: "Mul"
  input: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/metrics/ToFloat"
  input: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/metrics/accuracy/broadcast_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/metrics/accuracy/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/metrics/accuracy/Sum"
  op: "Sum"
  input: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/metrics/accuracy/broadcast_weights"
  input: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/metrics/accuracy/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/metrics/accuracy/Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/metrics/accuracy/Sum_1"
  op: "Sum"
  input: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/metrics/accuracy/Mul"
  input: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/metrics/accuracy/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/metrics/accuracy/AssignAdd"
  op: "AssignAdd"
  input: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/metrics/accuracy/total"
  input: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/metrics/accuracy/Sum_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/subnetwork_t0_1_layer_dnn/metrics/accuracy/total"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/metrics/accuracy/AssignAdd_1"
  op: "AssignAdd"
  input: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/metrics/accuracy/count"
  input: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/metrics/accuracy/Sum"
  input: "^adanet/iteration_0/subnetwork_t0_1_layer_dnn/metrics/accuracy/Mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/subnetwork_t0_1_layer_dnn/metrics/accuracy/count"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/metrics/accuracy/Maximum/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/metrics/accuracy/Maximum"
  op: "Maximum"
  input: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/metrics/accuracy/count/read"
  input: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/metrics/accuracy/Maximum/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/metrics/accuracy/value"
  op: "DivNoNan"
  input: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/metrics/accuracy/total/read"
  input: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/metrics/accuracy/Maximum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/metrics/accuracy/Maximum_1/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/metrics/accuracy/Maximum_1"
  op: "Maximum"
  input: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/metrics/accuracy/AssignAdd_1"
  input: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/metrics/accuracy/Maximum_1/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/metrics/accuracy/update_op"
  op: "DivNoNan"
  input: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/metrics/accuracy/AssignAdd"
  input: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/metrics/accuracy/Maximum_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/mean/total/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/subnetwork_t0_1_layer_dnn/mean/total"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/mean/total"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/subnetwork_t0_1_layer_dnn/mean/total"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/mean/total/Assign"
  op: "Assign"
  input: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/mean/total"
  input: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/mean/total/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/subnetwork_t0_1_layer_dnn/mean/total"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/mean/total/read"
  op: "Identity"
  input: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/mean/total"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/subnetwork_t0_1_layer_dnn/mean/total"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/mean/count/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/subnetwork_t0_1_layer_dnn/mean/count"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/mean/count"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/subnetwork_t0_1_layer_dnn/mean/count"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/mean/count/Assign"
  op: "Assign"
  input: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/mean/count"
  input: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/mean/count/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/subnetwork_t0_1_layer_dnn/mean/count"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/mean/count/read"
  op: "Identity"
  input: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/mean/count"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/subnetwork_t0_1_layer_dnn/mean/count"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/mean/Size"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/mean/ToFloat"
  op: "Cast"
  input: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/mean/Size"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/mean/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/mean/Sum"
  op: "Sum"
  input: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/head/weighted_loss/value"
  input: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/mean/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/mean/AssignAdd"
  op: "AssignAdd"
  input: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/mean/total"
  input: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/mean/Sum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/subnetwork_t0_1_layer_dnn/mean/total"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/mean/AssignAdd_1"
  op: "AssignAdd"
  input: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/mean/count"
  input: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/mean/ToFloat"
  input: "^adanet/iteration_0/subnetwork_t0_1_layer_dnn/head/weighted_loss/value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/subnetwork_t0_1_layer_dnn/mean/count"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/mean/Maximum/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/mean/Maximum"
  op: "Maximum"
  input: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/mean/count/read"
  input: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/mean/Maximum/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/mean/value"
  op: "DivNoNan"
  input: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/mean/total/read"
  input: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/mean/Maximum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/mean/Maximum_1/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/mean/Maximum_1"
  op: "Maximum"
  input: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/mean/AssignAdd_1"
  input: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/mean/Maximum_1/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/mean/update_op"
  op: "DivNoNan"
  input: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/mean/AssignAdd"
  input: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/mean/Maximum_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/Reshape"
  op: "Reshape"
  input: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/head/weighted_loss/value"
  input: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/weighted_subnetwork_0/Shape"
  op: "Shape"
  input: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/dropout/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/weighted_subnetwork_0/strided_slice/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/weighted_subnetwork_0/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/weighted_subnetwork_0/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/weighted_subnetwork_0/strided_slice"
  op: "StridedSlice"
  input: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/weighted_subnetwork_0/Shape"
  input: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/weighted_subnetwork_0/strided_slice/stack"
  input: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/weighted_subnetwork_0/strided_slice/stack_1"
  input: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/weighted_subnetwork_0/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/weighted_subnetwork_0/logits/mixture_weight/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/weighted_subnetwork_0/logits/mixture_weight"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/weighted_subnetwork_0/logits/mixture_weight"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/weighted_subnetwork_0/logits/mixture_weight"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/weighted_subnetwork_0/logits/mixture_weight/Assign"
  op: "Assign"
  input: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/weighted_subnetwork_0/logits/mixture_weight"
  input: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/weighted_subnetwork_0/logits/mixture_weight/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/weighted_subnetwork_0/logits/mixture_weight"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/weighted_subnetwork_0/logits/mixture_weight/read"
  op: "Identity"
  input: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/weighted_subnetwork_0/logits/mixture_weight"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/weighted_subnetwork_0/logits/mixture_weight"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/weighted_subnetwork_0/logits/Mul"
  op: "Mul"
  input: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/dense_1/BiasAdd"
  input: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/weighted_subnetwork_0/logits/mixture_weight/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/bias/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 10
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/bias"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 10
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/bias/Assign"
  op: "Assign"
  input: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/bias"
  input: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/bias/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/bias/read"
  op: "Identity"
  input: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/logits/Add"
  op: "Add"
  input: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/bias/read"
  input: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/weighted_subnetwork_0/logits/Mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/norm/Abs"
  op: "Abs"
  input: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/weighted_subnetwork_0/logits/mixture_weight/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/norm/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/norm/Sum"
  op: "Sum"
  input: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/norm/Abs"
  input: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/norm/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/norm/Squeeze"
  op: "Squeeze"
  input: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/norm/Sum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/add/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/add"
  op: "Add"
  input: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/add/x"
  input: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/norm/Squeeze"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/zero"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/add_1/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/add_1"
  op: "Add"
  input: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/add_1/x"
  input: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/zero"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/Const_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/truediv"
  op: "RealDiv"
  input: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/norm/Squeeze"
  input: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/Const_3"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/head/logits/Shape"
  op: "Shape"
  input: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/logits/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/head/logits/assert_rank_at_least/rank"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/head/logits/assert_rank_at_least/assert_type/statically_determined_correct_type"
  op: "NoOp"
}
node {
  name: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/head/logits/assert_rank_at_least/static_checks_determined_all_ok"
  op: "NoOp"
}
node {
  name: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/head/predictions/class_ids/dimension"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/head/predictions/class_ids"
  op: "ArgMax"
  input: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/logits/Add"
  input: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/head/predictions/class_ids/dimension"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "output_type"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/head/predictions/ExpandDims/dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/head/predictions/ExpandDims"
  op: "ExpandDims"
  input: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/head/predictions/class_ids"
  input: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/head/predictions/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/head/predictions/str_classes"
  op: "AsString"
  input: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/head/predictions/ExpandDims"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "fill"
    value {
      s: ""
    }
  }
  attr {
    key: "precision"
    value {
      i: -1
    }
  }
  attr {
    key: "scientific"
    value {
      b: false
    }
  }
  attr {
    key: "shortest"
    value {
      b: false
    }
  }
  attr {
    key: "width"
    value {
      i: -1
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/head/predictions/probabilities"
  op: "Softmax"
  input: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/logits/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/head/labels/ExpandDims/dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/head/labels/ExpandDims"
  op: "ExpandDims"
  input: "IteratorGetNext:1"
  input: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/head/labels/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/head/labels/Shape"
  op: "Shape"
  input: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/head/labels/ExpandDims"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/head/labels/Shape_1"
  op: "Shape"
  input: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/logits/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/head/labels/assert_rank_at_least/rank"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/head/labels/assert_rank_at_least/Shape"
  op: "Shape"
  input: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/head/labels/ExpandDims"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/head/labels/assert_rank_at_least/assert_type/statically_determined_correct_type"
  op: "NoOp"
}
node {
  name: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/head/labels/assert_rank_at_least/static_checks_determined_all_ok"
  op: "NoOp"
}
node {
  name: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/head/labels/strided_slice/stack"
  op: "Const"
  input: "^adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/head/labels/assert_rank_at_least/static_checks_determined_all_ok"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/head/labels/strided_slice/stack_1"
  op: "Const"
  input: "^adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/head/labels/assert_rank_at_least/static_checks_determined_all_ok"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/head/labels/strided_slice/stack_2"
  op: "Const"
  input: "^adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/head/labels/assert_rank_at_least/static_checks_determined_all_ok"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/head/labels/strided_slice"
  op: "StridedSlice"
  input: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/head/labels/Shape_1"
  input: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/head/labels/strided_slice/stack"
  input: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/head/labels/strided_slice/stack_1"
  input: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/head/labels/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/head/labels/concat/values_1"
  op: "Const"
  input: "^adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/head/labels/assert_rank_at_least/static_checks_determined_all_ok"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/head/labels/concat/axis"
  op: "Const"
  input: "^adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/head/labels/assert_rank_at_least/static_checks_determined_all_ok"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/head/labels/concat"
  op: "ConcatV2"
  input: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/head/labels/strided_slice"
  input: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/head/labels/concat/values_1"
  input: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/head/labels/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/head/labels/assert_equal/Equal"
  op: "Equal"
  input: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/head/labels/concat"
  input: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/head/labels/Shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/head/labels/assert_equal/Const"
  op: "Const"
  input: "^adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/head/labels/assert_rank_at_least/static_checks_determined_all_ok"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/head/labels/assert_equal/All"
  op: "All"
  input: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/head/labels/assert_equal/Equal"
  input: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/head/labels/assert_equal/Const"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/head/labels/assert_equal/Assert/Const"
  op: "Const"
  input: "^adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/head/labels/assert_rank_at_least/static_checks_determined_all_ok"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "expected_labels_shape: "
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/head/labels/assert_equal/Assert/Const_1"
  op: "Const"
  input: "^adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/head/labels/assert_rank_at_least/static_checks_determined_all_ok"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "labels_shape: "
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/head/labels/assert_equal/Assert/Assert/data_0"
  op: "Const"
  input: "^adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/head/labels/assert_rank_at_least/static_checks_determined_all_ok"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "expected_labels_shape: "
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/head/labels/assert_equal/Assert/Assert/data_2"
  op: "Const"
  input: "^adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/head/labels/assert_rank_at_least/static_checks_determined_all_ok"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "labels_shape: "
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/head/labels/assert_equal/Assert/Assert"
  op: "Assert"
  input: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/head/labels/assert_equal/All"
  input: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/head/labels/assert_equal/Assert/Assert/data_0"
  input: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/head/labels/concat"
  input: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/head/labels/assert_equal/Assert/Assert/data_2"
  input: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/head/labels/Shape"
  attr {
    key: "T"
    value {
      list {
        type: DT_STRING
        type: DT_INT32
        type: DT_STRING
        type: DT_INT32
      }
    }
  }
  attr {
    key: "summarize"
    value {
      i: 3
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/head/labels"
  op: "Identity"
  input: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/head/labels/ExpandDims"
  input: "^adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/head/labels/assert_equal/Assert/Assert"
  input: "^adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/head/labels/assert_rank_at_least/static_checks_determined_all_ok"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/head/assert_range/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 9
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/head/assert_range/assert_less_equal/LessEqual"
  op: "LessEqual"
  input: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/head/labels"
  input: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/head/assert_range/Const"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/head/assert_range/assert_less_equal/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/head/assert_range/assert_less_equal/All"
  op: "All"
  input: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/head/assert_range/assert_less_equal/LessEqual"
  input: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/head/assert_range/assert_less_equal/Const"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/head/assert_range/assert_less_equal/Assert/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "Labels must <= n_classes - 1"
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/head/assert_range/assert_less_equal/Assert/Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "Condition x <= y did not hold element-wise:x (adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/head/labels:0) = "
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/head/assert_range/assert_less_equal/Assert/Const_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "y (adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/head/assert_range/Const:0) = "
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/head/assert_range/assert_less_equal/Assert/Assert/data_0"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "Labels must <= n_classes - 1"
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/head/assert_range/assert_less_equal/Assert/Assert/data_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "Condition x <= y did not hold element-wise:x (adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/head/labels:0) = "
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/head/assert_range/assert_less_equal/Assert/Assert/data_3"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "y (adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/head/assert_range/Const:0) = "
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/head/assert_range/assert_less_equal/Assert/Assert"
  op: "Assert"
  input: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/head/assert_range/assert_less_equal/All"
  input: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/head/assert_range/assert_less_equal/Assert/Assert/data_0"
  input: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/head/assert_range/assert_less_equal/Assert/Assert/data_1"
  input: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/head/labels"
  input: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/head/assert_range/assert_less_equal/Assert/Assert/data_3"
  input: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/head/assert_range/Const"
  attr {
    key: "T"
    value {
      list {
        type: DT_STRING
        type: DT_STRING
        type: DT_INT32
        type: DT_STRING
        type: DT_INT32
      }
    }
  }
  attr {
    key: "summarize"
    value {
      i: 3
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/head/assert_range/assert_non_negative/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/head/assert_range/assert_non_negative/assert_less_equal/LessEqual"
  op: "LessEqual"
  input: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/head/assert_range/assert_non_negative/Const"
  input: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/head/labels"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/head/assert_range/assert_non_negative/assert_less_equal/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/head/assert_range/assert_non_negative/assert_less_equal/All"
  op: "All"
  input: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/head/assert_range/assert_non_negative/assert_less_equal/LessEqual"
  input: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/head/assert_range/assert_non_negative/assert_less_equal/Const"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/head/assert_range/assert_non_negative/assert_less_equal/Assert/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "Labels must >= 0"
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/head/assert_range/assert_non_negative/assert_less_equal/Assert/Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "Condition x >= 0 did not hold element-wise:"
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/head/assert_range/assert_non_negative/assert_less_equal/Assert/Const_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "x (adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/head/labels:0) = "
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/head/assert_range/assert_non_negative/assert_less_equal/Assert/Assert/data_0"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "Labels must >= 0"
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/head/assert_range/assert_non_negative/assert_less_equal/Assert/Assert/data_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "Condition x >= 0 did not hold element-wise:"
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/head/assert_range/assert_non_negative/assert_less_equal/Assert/Assert/data_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "x (adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/head/labels:0) = "
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/head/assert_range/assert_non_negative/assert_less_equal/Assert/Assert"
  op: "Assert"
  input: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/head/assert_range/assert_non_negative/assert_less_equal/All"
  input: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/head/assert_range/assert_non_negative/assert_less_equal/Assert/Assert/data_0"
  input: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/head/assert_range/assert_non_negative/assert_less_equal/Assert/Assert/data_1"
  input: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/head/assert_range/assert_non_negative/assert_less_equal/Assert/Assert/data_2"
  input: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/head/labels"
  attr {
    key: "T"
    value {
      list {
        type: DT_STRING
        type: DT_STRING
        type: DT_STRING
        type: DT_INT32
      }
    }
  }
  attr {
    key: "summarize"
    value {
      i: 3
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/head/assert_range/Identity"
  op: "Identity"
  input: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/head/labels"
  input: "^adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/head/assert_range/assert_less_equal/Assert/Assert"
  input: "^adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/head/assert_range/assert_non_negative/assert_less_equal/Assert/Assert"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/head/sparse_softmax_cross_entropy_loss/remove_squeezable_dimensions/Squeeze"
  op: "Squeeze"
  input: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/head/assert_range/Identity"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: -1
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/head/sparse_softmax_cross_entropy_loss/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/head/sparse_softmax_cross_entropy_loss/xentropy/Shape"
  op: "Shape"
  input: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/head/sparse_softmax_cross_entropy_loss/remove_squeezable_dimensions/Squeeze"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/head/sparse_softmax_cross_entropy_loss/xentropy/xentropy"
  op: "SparseSoftmaxCrossEntropyWithLogits"
  input: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/logits/Add"
  input: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/head/sparse_softmax_cross_entropy_loss/remove_squeezable_dimensions/Squeeze"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tlabels"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/head/sparse_softmax_cross_entropy_loss/assert_broadcastable/weights/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/head/sparse_softmax_cross_entropy_loss/assert_broadcastable/weights/rank"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/head/sparse_softmax_cross_entropy_loss/assert_broadcastable/values/shape"
  op: "Shape"
  input: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/head/sparse_softmax_cross_entropy_loss/xentropy/xentropy"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/head/sparse_softmax_cross_entropy_loss/assert_broadcastable/values/rank"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/head/sparse_softmax_cross_entropy_loss/assert_broadcastable/static_scalar_check_success"
  op: "NoOp"
}
node {
  name: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/head/sparse_softmax_cross_entropy_loss/Mul"
  op: "Mul"
  input: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/head/sparse_softmax_cross_entropy_loss/xentropy/xentropy"
  input: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/head/sparse_softmax_cross_entropy_loss/Const"
  input: "^adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/head/sparse_softmax_cross_entropy_loss/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/head/ExpandDims/dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/head/ExpandDims"
  op: "ExpandDims"
  input: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/head/sparse_softmax_cross_entropy_loss/Mul"
  input: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/head/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/head/weighted_loss/assert_broadcastable/weights"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/head/weighted_loss/assert_broadcastable/weights/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/head/weighted_loss/assert_broadcastable/weights/rank"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/head/weighted_loss/assert_broadcastable/values/shape"
  op: "Shape"
  input: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/head/ExpandDims"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/head/weighted_loss/assert_broadcastable/values/rank"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/head/weighted_loss/assert_broadcastable/static_scalar_check_success"
  op: "NoOp"
}
node {
  name: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/head/weighted_loss/ToFloat/x"
  op: "Const"
  input: "^adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/head/weighted_loss/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/head/weighted_loss/Mul"
  op: "Mul"
  input: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/head/ExpandDims"
  input: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/head/weighted_loss/ToFloat/x"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/head/weighted_loss/Const"
  op: "Const"
  input: "^adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/head/weighted_loss/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/head/weighted_loss/Sum"
  op: "Sum"
  input: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/head/weighted_loss/Mul"
  input: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/head/weighted_loss/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/head/weighted_loss/num_elements"
  op: "Size"
  input: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/head/ExpandDims"
  input: "^adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/head/weighted_loss/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/head/weighted_loss/num_elements/Cast"
  op: "Cast"
  input: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/head/weighted_loss/num_elements"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/head/weighted_loss/Const_1"
  op: "Const"
  input: "^adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/head/weighted_loss/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/head/weighted_loss/Sum_1"
  op: "Sum"
  input: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/head/weighted_loss/Sum"
  input: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/head/weighted_loss/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/head/weighted_loss/value"
  op: "DivNoNan"
  input: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/head/weighted_loss/Sum_1"
  input: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/head/weighted_loss/num_elements/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/metrics/average_loss/total/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/metrics/average_loss/total"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/metrics/average_loss/total"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/metrics/average_loss/total"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/metrics/average_loss/total/Assign"
  op: "Assign"
  input: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/metrics/average_loss/total"
  input: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/metrics/average_loss/total/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/metrics/average_loss/total"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/metrics/average_loss/total/read"
  op: "Identity"
  input: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/metrics/average_loss/total"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/metrics/average_loss/total"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/metrics/average_loss/count/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/metrics/average_loss/count"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/metrics/average_loss/count"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/metrics/average_loss/count"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/metrics/average_loss/count/Assign"
  op: "Assign"
  input: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/metrics/average_loss/count"
  input: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/metrics/average_loss/count/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/metrics/average_loss/count"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/metrics/average_loss/count/read"
  op: "Identity"
  input: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/metrics/average_loss/count"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/metrics/average_loss/count"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/metrics/average_loss/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/metrics/average_loss/broadcast_weights/assert_broadcastable/weights/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/metrics/average_loss/broadcast_weights/assert_broadcastable/weights/rank"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/metrics/average_loss/broadcast_weights/assert_broadcastable/values/shape"
  op: "Shape"
  input: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/head/ExpandDims"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/metrics/average_loss/broadcast_weights/assert_broadcastable/values/rank"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/metrics/average_loss/broadcast_weights/assert_broadcastable/static_scalar_check_success"
  op: "NoOp"
}
node {
  name: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/metrics/average_loss/broadcast_weights/ones_like/Shape"
  op: "Shape"
  input: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/head/ExpandDims"
  input: "^adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/metrics/average_loss/broadcast_weights/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/metrics/average_loss/broadcast_weights/ones_like/Const"
  op: "Const"
  input: "^adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/metrics/average_loss/broadcast_weights/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/metrics/average_loss/broadcast_weights/ones_like"
  op: "Fill"
  input: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/metrics/average_loss/broadcast_weights/ones_like/Shape"
  input: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/metrics/average_loss/broadcast_weights/ones_like/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/metrics/average_loss/broadcast_weights"
  op: "Mul"
  input: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/metrics/average_loss/Const"
  input: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/metrics/average_loss/broadcast_weights/ones_like"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/metrics/average_loss/Mul"
  op: "Mul"
  input: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/head/ExpandDims"
  input: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/metrics/average_loss/broadcast_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/metrics/average_loss/Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/metrics/average_loss/Sum"
  op: "Sum"
  input: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/metrics/average_loss/broadcast_weights"
  input: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/metrics/average_loss/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/metrics/average_loss/Const_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/metrics/average_loss/Sum_1"
  op: "Sum"
  input: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/metrics/average_loss/Mul"
  input: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/metrics/average_loss/Const_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/metrics/average_loss/AssignAdd"
  op: "AssignAdd"
  input: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/metrics/average_loss/total"
  input: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/metrics/average_loss/Sum_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/metrics/average_loss/total"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/metrics/average_loss/AssignAdd_1"
  op: "AssignAdd"
  input: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/metrics/average_loss/count"
  input: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/metrics/average_loss/Sum"
  input: "^adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/metrics/average_loss/Mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/metrics/average_loss/count"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/metrics/average_loss/Maximum/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/metrics/average_loss/Maximum"
  op: "Maximum"
  input: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/metrics/average_loss/count/read"
  input: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/metrics/average_loss/Maximum/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/metrics/average_loss/value"
  op: "DivNoNan"
  input: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/metrics/average_loss/total/read"
  input: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/metrics/average_loss/Maximum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/metrics/average_loss/Maximum_1/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/metrics/average_loss/Maximum_1"
  op: "Maximum"
  input: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/metrics/average_loss/AssignAdd_1"
  input: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/metrics/average_loss/Maximum_1/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/metrics/average_loss/update_op"
  op: "DivNoNan"
  input: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/metrics/average_loss/AssignAdd"
  input: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/metrics/average_loss/Maximum_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/metrics/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/metrics/Cast"
  op: "Cast"
  input: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/head/predictions/ExpandDims"
  attr {
    key: "DstT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/metrics/Equal"
  op: "Equal"
  input: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/metrics/Cast"
  input: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/head/assert_range/Identity"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/metrics/ToFloat"
  op: "Cast"
  input: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/metrics/Equal"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/metrics/accuracy/total/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/metrics/accuracy/total"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/metrics/accuracy/total"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/metrics/accuracy/total"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/metrics/accuracy/total/Assign"
  op: "Assign"
  input: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/metrics/accuracy/total"
  input: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/metrics/accuracy/total/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/metrics/accuracy/total"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/metrics/accuracy/total/read"
  op: "Identity"
  input: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/metrics/accuracy/total"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/metrics/accuracy/total"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/metrics/accuracy/count/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/metrics/accuracy/count"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/metrics/accuracy/count"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/metrics/accuracy/count"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/metrics/accuracy/count/Assign"
  op: "Assign"
  input: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/metrics/accuracy/count"
  input: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/metrics/accuracy/count/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/metrics/accuracy/count"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/metrics/accuracy/count/read"
  op: "Identity"
  input: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/metrics/accuracy/count"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/metrics/accuracy/count"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/metrics/accuracy/broadcast_weights/assert_broadcastable/weights/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/metrics/accuracy/broadcast_weights/assert_broadcastable/weights/rank"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/metrics/accuracy/broadcast_weights/assert_broadcastable/values/shape"
  op: "Shape"
  input: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/metrics/ToFloat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/metrics/accuracy/broadcast_weights/assert_broadcastable/values/rank"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/metrics/accuracy/broadcast_weights/assert_broadcastable/static_scalar_check_success"
  op: "NoOp"
}
node {
  name: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/metrics/accuracy/broadcast_weights/ones_like/Shape"
  op: "Shape"
  input: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/metrics/ToFloat"
  input: "^adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/metrics/accuracy/broadcast_weights/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/metrics/accuracy/broadcast_weights/ones_like/Const"
  op: "Const"
  input: "^adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/metrics/accuracy/broadcast_weights/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/metrics/accuracy/broadcast_weights/ones_like"
  op: "Fill"
  input: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/metrics/accuracy/broadcast_weights/ones_like/Shape"
  input: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/metrics/accuracy/broadcast_weights/ones_like/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/metrics/accuracy/broadcast_weights"
  op: "Mul"
  input: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/metrics/Const"
  input: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/metrics/accuracy/broadcast_weights/ones_like"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/metrics/accuracy/Mul"
  op: "Mul"
  input: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/metrics/ToFloat"
  input: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/metrics/accuracy/broadcast_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/metrics/accuracy/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/metrics/accuracy/Sum"
  op: "Sum"
  input: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/metrics/accuracy/broadcast_weights"
  input: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/metrics/accuracy/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/metrics/accuracy/Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/metrics/accuracy/Sum_1"
  op: "Sum"
  input: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/metrics/accuracy/Mul"
  input: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/metrics/accuracy/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/metrics/accuracy/AssignAdd"
  op: "AssignAdd"
  input: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/metrics/accuracy/total"
  input: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/metrics/accuracy/Sum_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/metrics/accuracy/total"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/metrics/accuracy/AssignAdd_1"
  op: "AssignAdd"
  input: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/metrics/accuracy/count"
  input: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/metrics/accuracy/Sum"
  input: "^adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/metrics/accuracy/Mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/metrics/accuracy/count"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/metrics/accuracy/Maximum/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/metrics/accuracy/Maximum"
  op: "Maximum"
  input: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/metrics/accuracy/count/read"
  input: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/metrics/accuracy/Maximum/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/metrics/accuracy/value"
  op: "DivNoNan"
  input: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/metrics/accuracy/total/read"
  input: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/metrics/accuracy/Maximum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/metrics/accuracy/Maximum_1/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/metrics/accuracy/Maximum_1"
  op: "Maximum"
  input: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/metrics/accuracy/AssignAdd_1"
  input: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/metrics/accuracy/Maximum_1/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/metrics/accuracy/update_op"
  op: "DivNoNan"
  input: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/metrics/accuracy/AssignAdd"
  input: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/metrics/accuracy/Maximum_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/add_2"
  op: "Add"
  input: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/head/weighted_loss/value"
  input: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/mean/total/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/mean/total"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/mean/total"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/mean/total"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/mean/total/Assign"
  op: "Assign"
  input: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/mean/total"
  input: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/mean/total/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/mean/total"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/mean/total/read"
  op: "Identity"
  input: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/mean/total"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/mean/total"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/mean/count/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/mean/count"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/mean/count"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/mean/count"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/mean/count/Assign"
  op: "Assign"
  input: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/mean/count"
  input: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/mean/count/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/mean/count"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/mean/count/read"
  op: "Identity"
  input: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/mean/count"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/mean/count"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/mean/Size"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/mean/ToFloat"
  op: "Cast"
  input: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/mean/Size"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/mean/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/mean/Sum"
  op: "Sum"
  input: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/head/weighted_loss/value"
  input: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/mean/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/mean/AssignAdd"
  op: "AssignAdd"
  input: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/mean/total"
  input: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/mean/Sum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/mean/total"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/mean/AssignAdd_1"
  op: "AssignAdd"
  input: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/mean/count"
  input: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/mean/ToFloat"
  input: "^adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/head/weighted_loss/value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/mean/count"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/mean/Maximum/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/mean/Maximum"
  op: "Maximum"
  input: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/mean/count/read"
  input: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/mean/Maximum/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/mean/value"
  op: "DivNoNan"
  input: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/mean/total/read"
  input: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/mean/Maximum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/mean/Maximum_1/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/mean/Maximum_1"
  op: "Maximum"
  input: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/mean/AssignAdd_1"
  input: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/mean/Maximum_1/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/mean/update_op"
  op: "DivNoNan"
  input: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/mean/AssignAdd"
  input: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/mean/Maximum_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/Reshape"
  op: "Reshape"
  input: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/head/weighted_loss/value"
  input: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/candidate_t0_1_layer_dnn_grow_complexity_regularized/adanet_loss/initial_value"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "adanet/iteration_0/candidate_t0_1_layer_dnn_grow_complexity_regularized/adanet_loss"
  op: "VariableV2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "adanet/iteration_0/candidate_t0_1_layer_dnn_grow_complexity_regularized/adanet_loss/Assign"
  op: "Assign"
  input: "adanet/iteration_0/candidate_t0_1_layer_dnn_grow_complexity_regularized/adanet_loss"
  input: "adanet/iteration_0/candidate_t0_1_layer_dnn_grow_complexity_regularized/adanet_loss/initial_value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/candidate_t0_1_layer_dnn_grow_complexity_regularized/adanet_loss"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "adanet/iteration_0/candidate_t0_1_layer_dnn_grow_complexity_regularized/adanet_loss/read"
  op: "Identity"
  input: "adanet/iteration_0/candidate_t0_1_layer_dnn_grow_complexity_regularized/adanet_loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/candidate_t0_1_layer_dnn_grow_complexity_regularized/adanet_loss"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/candidate_t0_1_layer_dnn_grow_complexity_regularized/add/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 1
      }
    }
  }
}
node {
  name: "adanet/iteration_0/candidate_t0_1_layer_dnn_grow_complexity_regularized/add"
  op: "Add"
  input: "adanet/iteration_0/step/read"
  input: "adanet/iteration_0/candidate_t0_1_layer_dnn_grow_complexity_regularized/add/y"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/candidate_t0_1_layer_dnn_grow_complexity_regularized/is_training/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 2500
      }
    }
  }
}
node {
  name: "adanet/iteration_0/candidate_t0_1_layer_dnn_grow_complexity_regularized/is_training"
  op: "Less"
  input: "adanet/iteration_0/candidate_t0_1_layer_dnn_grow_complexity_regularized/add"
  input: "adanet/iteration_0/candidate_t0_1_layer_dnn_grow_complexity_regularized/is_training/y"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/candidate_t0_1_layer_dnn_grow_complexity_regularized/AssignMovingAvg/decay"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/candidate_t0_1_layer_dnn_grow_complexity_regularized/adanet_loss"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.10000000149011612
      }
    }
  }
}
node {
  name: "adanet/iteration_0/candidate_t0_1_layer_dnn_grow_complexity_regularized/AssignMovingAvg/adanet/iteration_0/candidate_t0_1_layer_dnn_grow_complexity_regularized/adanet_loss/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/candidate_t0_1_layer_dnn_grow_complexity_regularized/adanet_loss"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "adanet/iteration_0/candidate_t0_1_layer_dnn_grow_complexity_regularized/adanet/iteration_0/candidate_t0_1_layer_dnn_grow_complexity_regularized/adanet_loss/biased"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/candidate_t0_1_layer_dnn_grow_complexity_regularized/adanet_loss"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "adanet/iteration_0/candidate_t0_1_layer_dnn_grow_complexity_regularized/adanet/iteration_0/candidate_t0_1_layer_dnn_grow_complexity_regularized/adanet_loss/biased/Assign"
  op: "Assign"
  input: "adanet/iteration_0/candidate_t0_1_layer_dnn_grow_complexity_regularized/adanet/iteration_0/candidate_t0_1_layer_dnn_grow_complexity_regularized/adanet_loss/biased"
  input: "adanet/iteration_0/candidate_t0_1_layer_dnn_grow_complexity_regularized/AssignMovingAvg/adanet/iteration_0/candidate_t0_1_layer_dnn_grow_complexity_regularized/adanet_loss/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/candidate_t0_1_layer_dnn_grow_complexity_regularized/adanet_loss"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "adanet/iteration_0/candidate_t0_1_layer_dnn_grow_complexity_regularized/adanet/iteration_0/candidate_t0_1_layer_dnn_grow_complexity_regularized/adanet_loss/biased/read"
  op: "Identity"
  input: "adanet/iteration_0/candidate_t0_1_layer_dnn_grow_complexity_regularized/adanet/iteration_0/candidate_t0_1_layer_dnn_grow_complexity_regularized/adanet_loss/biased"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/candidate_t0_1_layer_dnn_grow_complexity_regularized/adanet_loss"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/candidate_t0_1_layer_dnn_grow_complexity_regularized/adanet/iteration_0/candidate_t0_1_layer_dnn_grow_complexity_regularized/adanet_loss/local_step/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/candidate_t0_1_layer_dnn_grow_complexity_regularized/adanet_loss"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "adanet/iteration_0/candidate_t0_1_layer_dnn_grow_complexity_regularized/adanet/iteration_0/candidate_t0_1_layer_dnn_grow_complexity_regularized/adanet_loss/local_step"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/candidate_t0_1_layer_dnn_grow_complexity_regularized/adanet_loss"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "adanet/iteration_0/candidate_t0_1_layer_dnn_grow_complexity_regularized/adanet/iteration_0/candidate_t0_1_layer_dnn_grow_complexity_regularized/adanet_loss/local_step/Assign"
  op: "Assign"
  input: "adanet/iteration_0/candidate_t0_1_layer_dnn_grow_complexity_regularized/adanet/iteration_0/candidate_t0_1_layer_dnn_grow_complexity_regularized/adanet_loss/local_step"
  input: "adanet/iteration_0/candidate_t0_1_layer_dnn_grow_complexity_regularized/adanet/iteration_0/candidate_t0_1_layer_dnn_grow_complexity_regularized/adanet_loss/local_step/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/candidate_t0_1_layer_dnn_grow_complexity_regularized/adanet_loss"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "adanet/iteration_0/candidate_t0_1_layer_dnn_grow_complexity_regularized/adanet/iteration_0/candidate_t0_1_layer_dnn_grow_complexity_regularized/adanet_loss/local_step/read"
  op: "Identity"
  input: "adanet/iteration_0/candidate_t0_1_layer_dnn_grow_complexity_regularized/adanet/iteration_0/candidate_t0_1_layer_dnn_grow_complexity_regularized/adanet_loss/local_step"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/candidate_t0_1_layer_dnn_grow_complexity_regularized/adanet_loss"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/candidate_t0_1_layer_dnn_grow_complexity_regularized/AssignMovingAvg/adanet/iteration_0/candidate_t0_1_layer_dnn_grow_complexity_regularized/adanet_loss/sub"
  op: "Sub"
  input: "adanet/iteration_0/candidate_t0_1_layer_dnn_grow_complexity_regularized/adanet/iteration_0/candidate_t0_1_layer_dnn_grow_complexity_regularized/adanet_loss/biased/read"
  input: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/add_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/candidate_t0_1_layer_dnn_grow_complexity_regularized/adanet_loss"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/candidate_t0_1_layer_dnn_grow_complexity_regularized/AssignMovingAvg/adanet/iteration_0/candidate_t0_1_layer_dnn_grow_complexity_regularized/adanet_loss/mul"
  op: "Mul"
  input: "adanet/iteration_0/candidate_t0_1_layer_dnn_grow_complexity_regularized/AssignMovingAvg/adanet/iteration_0/candidate_t0_1_layer_dnn_grow_complexity_regularized/adanet_loss/sub"
  input: "adanet/iteration_0/candidate_t0_1_layer_dnn_grow_complexity_regularized/AssignMovingAvg/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/candidate_t0_1_layer_dnn_grow_complexity_regularized/adanet_loss"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/candidate_t0_1_layer_dnn_grow_complexity_regularized/AssignMovingAvg/adanet/iteration_0/candidate_t0_1_layer_dnn_grow_complexity_regularized/adanet_loss/adanet/iteration_0/candidate_t0_1_layer_dnn_grow_complexity_regularized/adanet/iteration_0/candidate_t0_1_layer_dnn_grow_complexity_regularized/adanet_loss"
  op: "AssignSub"
  input: "adanet/iteration_0/candidate_t0_1_layer_dnn_grow_complexity_regularized/adanet/iteration_0/candidate_t0_1_layer_dnn_grow_complexity_regularized/adanet_loss/biased"
  input: "adanet/iteration_0/candidate_t0_1_layer_dnn_grow_complexity_regularized/AssignMovingAvg/adanet/iteration_0/candidate_t0_1_layer_dnn_grow_complexity_regularized/adanet_loss/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/candidate_t0_1_layer_dnn_grow_complexity_regularized/adanet_loss"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "adanet/iteration_0/candidate_t0_1_layer_dnn_grow_complexity_regularized/AssignMovingAvg/adanet/iteration_0/candidate_t0_1_layer_dnn_grow_complexity_regularized/adanet_loss/AssignAdd/value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/candidate_t0_1_layer_dnn_grow_complexity_regularized/adanet_loss"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "adanet/iteration_0/candidate_t0_1_layer_dnn_grow_complexity_regularized/AssignMovingAvg/adanet/iteration_0/candidate_t0_1_layer_dnn_grow_complexity_regularized/adanet_loss/AssignAdd"
  op: "AssignAdd"
  input: "adanet/iteration_0/candidate_t0_1_layer_dnn_grow_complexity_regularized/adanet/iteration_0/candidate_t0_1_layer_dnn_grow_complexity_regularized/adanet_loss/local_step"
  input: "adanet/iteration_0/candidate_t0_1_layer_dnn_grow_complexity_regularized/AssignMovingAvg/adanet/iteration_0/candidate_t0_1_layer_dnn_grow_complexity_regularized/adanet_loss/AssignAdd/value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/candidate_t0_1_layer_dnn_grow_complexity_regularized/adanet_loss"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "adanet/iteration_0/candidate_t0_1_layer_dnn_grow_complexity_regularized/AssignMovingAvg/adanet/iteration_0/candidate_t0_1_layer_dnn_grow_complexity_regularized/adanet_loss/read"
  op: "Identity"
  input: "adanet/iteration_0/candidate_t0_1_layer_dnn_grow_complexity_regularized/adanet/iteration_0/candidate_t0_1_layer_dnn_grow_complexity_regularized/adanet_loss/biased"
  input: "^adanet/iteration_0/candidate_t0_1_layer_dnn_grow_complexity_regularized/AssignMovingAvg/adanet/iteration_0/candidate_t0_1_layer_dnn_grow_complexity_regularized/adanet_loss/AssignAdd"
  input: "^adanet/iteration_0/candidate_t0_1_layer_dnn_grow_complexity_regularized/AssignMovingAvg/adanet/iteration_0/candidate_t0_1_layer_dnn_grow_complexity_regularized/adanet_loss/adanet/iteration_0/candidate_t0_1_layer_dnn_grow_complexity_regularized/adanet/iteration_0/candidate_t0_1_layer_dnn_grow_complexity_regularized/adanet_loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/candidate_t0_1_layer_dnn_grow_complexity_regularized/adanet_loss"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/candidate_t0_1_layer_dnn_grow_complexity_regularized/AssignMovingAvg/adanet/iteration_0/candidate_t0_1_layer_dnn_grow_complexity_regularized/adanet_loss/sub_1/x"
  op: "Const"
  input: "^adanet/iteration_0/candidate_t0_1_layer_dnn_grow_complexity_regularized/AssignMovingAvg/adanet/iteration_0/candidate_t0_1_layer_dnn_grow_complexity_regularized/adanet_loss/AssignAdd"
  input: "^adanet/iteration_0/candidate_t0_1_layer_dnn_grow_complexity_regularized/AssignMovingAvg/adanet/iteration_0/candidate_t0_1_layer_dnn_grow_complexity_regularized/adanet_loss/adanet/iteration_0/candidate_t0_1_layer_dnn_grow_complexity_regularized/adanet/iteration_0/candidate_t0_1_layer_dnn_grow_complexity_regularized/adanet_loss"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/candidate_t0_1_layer_dnn_grow_complexity_regularized/adanet_loss"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "adanet/iteration_0/candidate_t0_1_layer_dnn_grow_complexity_regularized/AssignMovingAvg/adanet/iteration_0/candidate_t0_1_layer_dnn_grow_complexity_regularized/adanet_loss/sub_1"
  op: "Sub"
  input: "adanet/iteration_0/candidate_t0_1_layer_dnn_grow_complexity_regularized/AssignMovingAvg/adanet/iteration_0/candidate_t0_1_layer_dnn_grow_complexity_regularized/adanet_loss/sub_1/x"
  input: "adanet/iteration_0/candidate_t0_1_layer_dnn_grow_complexity_regularized/AssignMovingAvg/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/candidate_t0_1_layer_dnn_grow_complexity_regularized/adanet_loss"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/candidate_t0_1_layer_dnn_grow_complexity_regularized/AssignMovingAvg/adanet/iteration_0/candidate_t0_1_layer_dnn_grow_complexity_regularized/adanet_loss/read_1"
  op: "Identity"
  input: "adanet/iteration_0/candidate_t0_1_layer_dnn_grow_complexity_regularized/adanet/iteration_0/candidate_t0_1_layer_dnn_grow_complexity_regularized/adanet_loss/local_step"
  input: "^adanet/iteration_0/candidate_t0_1_layer_dnn_grow_complexity_regularized/AssignMovingAvg/adanet/iteration_0/candidate_t0_1_layer_dnn_grow_complexity_regularized/adanet_loss/AssignAdd"
  input: "^adanet/iteration_0/candidate_t0_1_layer_dnn_grow_complexity_regularized/AssignMovingAvg/adanet/iteration_0/candidate_t0_1_layer_dnn_grow_complexity_regularized/adanet_loss/adanet/iteration_0/candidate_t0_1_layer_dnn_grow_complexity_regularized/adanet/iteration_0/candidate_t0_1_layer_dnn_grow_complexity_regularized/adanet_loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/candidate_t0_1_layer_dnn_grow_complexity_regularized/adanet_loss"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/candidate_t0_1_layer_dnn_grow_complexity_regularized/AssignMovingAvg/adanet/iteration_0/candidate_t0_1_layer_dnn_grow_complexity_regularized/adanet_loss/Pow"
  op: "Pow"
  input: "adanet/iteration_0/candidate_t0_1_layer_dnn_grow_complexity_regularized/AssignMovingAvg/adanet/iteration_0/candidate_t0_1_layer_dnn_grow_complexity_regularized/adanet_loss/sub_1"
  input: "adanet/iteration_0/candidate_t0_1_layer_dnn_grow_complexity_regularized/AssignMovingAvg/adanet/iteration_0/candidate_t0_1_layer_dnn_grow_complexity_regularized/adanet_loss/read_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/candidate_t0_1_layer_dnn_grow_complexity_regularized/adanet_loss"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/candidate_t0_1_layer_dnn_grow_complexity_regularized/AssignMovingAvg/adanet/iteration_0/candidate_t0_1_layer_dnn_grow_complexity_regularized/adanet_loss/sub_2/x"
  op: "Const"
  input: "^adanet/iteration_0/candidate_t0_1_layer_dnn_grow_complexity_regularized/AssignMovingAvg/adanet/iteration_0/candidate_t0_1_layer_dnn_grow_complexity_regularized/adanet_loss/AssignAdd"
  input: "^adanet/iteration_0/candidate_t0_1_layer_dnn_grow_complexity_regularized/AssignMovingAvg/adanet/iteration_0/candidate_t0_1_layer_dnn_grow_complexity_regularized/adanet_loss/adanet/iteration_0/candidate_t0_1_layer_dnn_grow_complexity_regularized/adanet/iteration_0/candidate_t0_1_layer_dnn_grow_complexity_regularized/adanet_loss"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/candidate_t0_1_layer_dnn_grow_complexity_regularized/adanet_loss"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "adanet/iteration_0/candidate_t0_1_layer_dnn_grow_complexity_regularized/AssignMovingAvg/adanet/iteration_0/candidate_t0_1_layer_dnn_grow_complexity_regularized/adanet_loss/sub_2"
  op: "Sub"
  input: "adanet/iteration_0/candidate_t0_1_layer_dnn_grow_complexity_regularized/AssignMovingAvg/adanet/iteration_0/candidate_t0_1_layer_dnn_grow_complexity_regularized/adanet_loss/sub_2/x"
  input: "adanet/iteration_0/candidate_t0_1_layer_dnn_grow_complexity_regularized/AssignMovingAvg/adanet/iteration_0/candidate_t0_1_layer_dnn_grow_complexity_regularized/adanet_loss/Pow"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/candidate_t0_1_layer_dnn_grow_complexity_regularized/adanet_loss"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/candidate_t0_1_layer_dnn_grow_complexity_regularized/AssignMovingAvg/adanet/iteration_0/candidate_t0_1_layer_dnn_grow_complexity_regularized/adanet_loss/truediv"
  op: "RealDiv"
  input: "adanet/iteration_0/candidate_t0_1_layer_dnn_grow_complexity_regularized/AssignMovingAvg/adanet/iteration_0/candidate_t0_1_layer_dnn_grow_complexity_regularized/adanet_loss/read"
  input: "adanet/iteration_0/candidate_t0_1_layer_dnn_grow_complexity_regularized/AssignMovingAvg/adanet/iteration_0/candidate_t0_1_layer_dnn_grow_complexity_regularized/adanet_loss/sub_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/candidate_t0_1_layer_dnn_grow_complexity_regularized/adanet_loss"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/candidate_t0_1_layer_dnn_grow_complexity_regularized/AssignMovingAvg/adanet/iteration_0/candidate_t0_1_layer_dnn_grow_complexity_regularized/adanet_loss/sub_3"
  op: "Sub"
  input: "adanet/iteration_0/candidate_t0_1_layer_dnn_grow_complexity_regularized/adanet_loss/read"
  input: "adanet/iteration_0/candidate_t0_1_layer_dnn_grow_complexity_regularized/AssignMovingAvg/adanet/iteration_0/candidate_t0_1_layer_dnn_grow_complexity_regularized/adanet_loss/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/candidate_t0_1_layer_dnn_grow_complexity_regularized/adanet_loss"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/candidate_t0_1_layer_dnn_grow_complexity_regularized/AssignMovingAvg"
  op: "AssignSub"
  input: "adanet/iteration_0/candidate_t0_1_layer_dnn_grow_complexity_regularized/adanet_loss"
  input: "adanet/iteration_0/candidate_t0_1_layer_dnn_grow_complexity_regularized/AssignMovingAvg/adanet/iteration_0/candidate_t0_1_layer_dnn_grow_complexity_regularized/adanet_loss/sub_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/candidate_t0_1_layer_dnn_grow_complexity_regularized/adanet_loss"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "adanet/iteration_0/candidate_t0_1_layer_dnn_grow_complexity_regularized/read"
  op: "Identity"
  input: "adanet/iteration_0/candidate_t0_1_layer_dnn_grow_complexity_regularized/adanet_loss"
  input: "^adanet/iteration_0/candidate_t0_1_layer_dnn_grow_complexity_regularized/AssignMovingAvg"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/candidate_t0_1_layer_dnn_grow_complexity_regularized/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "adanet/iteration_0/mean/total/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/mean/total"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "adanet/iteration_0/mean/total"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/mean/total"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "adanet/iteration_0/mean/total/Assign"
  op: "Assign"
  input: "adanet/iteration_0/mean/total"
  input: "adanet/iteration_0/mean/total/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/mean/total"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "adanet/iteration_0/mean/total/read"
  op: "Identity"
  input: "adanet/iteration_0/mean/total"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/mean/total"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/mean/count/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/mean/count"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "adanet/iteration_0/mean/count"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/mean/count"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "adanet/iteration_0/mean/count/Assign"
  op: "Assign"
  input: "adanet/iteration_0/mean/count"
  input: "adanet/iteration_0/mean/count/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/mean/count"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "adanet/iteration_0/mean/count/read"
  op: "Identity"
  input: "adanet/iteration_0/mean/count"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/mean/count"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/mean/Size"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "adanet/iteration_0/mean/ToFloat"
  op: "Cast"
  input: "adanet/iteration_0/mean/Size"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/mean/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/mean/Sum"
  op: "Sum"
  input: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/add_2"
  input: "adanet/iteration_0/mean/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "adanet/iteration_0/mean/AssignAdd"
  op: "AssignAdd"
  input: "adanet/iteration_0/mean/total"
  input: "adanet/iteration_0/mean/Sum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/mean/total"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "adanet/iteration_0/mean/AssignAdd_1"
  op: "AssignAdd"
  input: "adanet/iteration_0/mean/count"
  input: "adanet/iteration_0/mean/ToFloat"
  input: "^adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/add_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/mean/count"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "adanet/iteration_0/mean/Maximum/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "adanet/iteration_0/mean/Maximum"
  op: "Maximum"
  input: "adanet/iteration_0/mean/count/read"
  input: "adanet/iteration_0/mean/Maximum/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/mean/value"
  op: "DivNoNan"
  input: "adanet/iteration_0/mean/total/read"
  input: "adanet/iteration_0/mean/Maximum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/mean/Maximum_1/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "adanet/iteration_0/mean/Maximum_1"
  op: "Maximum"
  input: "adanet/iteration_0/mean/AssignAdd_1"
  input: "adanet/iteration_0/mean/Maximum_1/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/mean/update_op"
  op: "DivNoNan"
  input: "adanet/iteration_0/mean/AssignAdd"
  input: "adanet/iteration_0/mean/Maximum_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/best_candidate_index/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "adanet/iteration_0/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "adanet/iteration_0/Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "adanet/iteration_0/Const_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "adanet/iteration_0/train_op/is_over/LogicalNot"
  op: "LogicalNot"
  input: "adanet/iteration_0/candidate_t0_1_layer_dnn_grow_complexity_regularized/is_training"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/train_op/is_over/LogicalAnd/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_BOOL
        tensor_shape {
        }
        bool_val: true
      }
    }
  }
}
node {
  name: "adanet/iteration_0/train_op/is_over/LogicalAnd"
  op: "LogicalAnd"
  input: "adanet/iteration_0/train_op/is_over/LogicalAnd/x"
  input: "adanet/iteration_0/train_op/is_over/LogicalNot"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/train_op/is_over/is_over_var_template/is_over_var/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/train_op/is_over/is_over_var_template/is_over_var"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_BOOL
        tensor_shape {
        }
        bool_val: false
      }
    }
  }
}
node {
  name: "adanet/iteration_0/train_op/is_over/is_over_var_template/is_over_var"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/train_op/is_over/is_over_var_template/is_over_var"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "adanet/iteration_0/train_op/is_over/is_over_var_template/is_over_var/Assign"
  op: "Assign"
  input: "adanet/iteration_0/train_op/is_over/is_over_var_template/is_over_var"
  input: "adanet/iteration_0/train_op/is_over/is_over_var_template/is_over_var/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/train_op/is_over/is_over_var_template/is_over_var"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "adanet/iteration_0/train_op/is_over/is_over_var_template/is_over_var/read"
  op: "Identity"
  input: "adanet/iteration_0/train_op/is_over/is_over_var_template/is_over_var"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/train_op/is_over/is_over_var_template/is_over_var"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/train_op/is_over/cond/Switch"
  op: "Switch"
  input: "adanet/iteration_0/train_op/is_over/LogicalAnd"
  input: "adanet/iteration_0/train_op/is_over/LogicalAnd"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/train_op/is_over/cond/switch_t"
  op: "Identity"
  input: "adanet/iteration_0/train_op/is_over/cond/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/train_op/is_over/cond/switch_f"
  op: "Identity"
  input: "adanet/iteration_0/train_op/is_over/cond/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/train_op/is_over/cond/pred_id"
  op: "Identity"
  input: "adanet/iteration_0/train_op/is_over/LogicalAnd"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/train_op/is_over/cond/assign_is_over/value"
  op: "Const"
  input: "^adanet/iteration_0/train_op/is_over/cond/switch_t"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_BOOL
        tensor_shape {
        }
        bool_val: true
      }
    }
  }
}
node {
  name: "adanet/iteration_0/train_op/is_over/cond/assign_is_over"
  op: "Assign"
  input: "adanet/iteration_0/train_op/is_over/cond/assign_is_over/Switch:1"
  input: "adanet/iteration_0/train_op/is_over/cond/assign_is_over/value"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/train_op/is_over/is_over_var_template/is_over_var"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "adanet/iteration_0/train_op/is_over/cond/assign_is_over/Switch"
  op: "RefSwitch"
  input: "adanet/iteration_0/train_op/is_over/is_over_var_template/is_over_var"
  input: "adanet/iteration_0/train_op/is_over/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/train_op/is_over/is_over_var_template/is_over_var"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/train_op/is_over/cond/noassign_is_over"
  op: "NoOp"
  input: "^adanet/iteration_0/train_op/is_over/cond/switch_f"
}
node {
  name: "adanet/iteration_0/train_op/is_over/cond/control_dependency"
  op: "Identity"
  input: "adanet/iteration_0/train_op/is_over/cond/switch_f"
  input: "^adanet/iteration_0/train_op/is_over/cond/noassign_is_over"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/train_op/is_over/cond/switch_f"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/train_op/is_over/cond/Merge"
  op: "Merge"
  input: "adanet/iteration_0/train_op/is_over/cond/control_dependency"
  input: "adanet/iteration_0/train_op/is_over/cond/assign_is_over"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/train_op/AssignAdd/value"
  op: "Const"
  input: "^adanet/iteration_0/train_op/is_over/cond/Merge"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 1
      }
    }
  }
}
node {
  name: "adanet/iteration_0/train_op/AssignAdd"
  op: "AssignAdd"
  input: "global_step"
  input: "adanet/iteration_0/train_op/AssignAdd/value"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "adanet/iteration_0/train_op/AssignAdd_1/value"
  op: "Const"
  input: "^adanet/iteration_0/train_op/is_over/cond/Merge"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 1
      }
    }
  }
}
node {
  name: "adanet/iteration_0/train_op/AssignAdd_1"
  op: "AssignAdd"
  input: "adanet/iteration_0/step"
  input: "adanet/iteration_0/train_op/AssignAdd_1/value"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "adanet/iteration_0/train_op/group_deps"
  op: "NoOp"
  input: "^adanet/iteration_0/train_op/AssignAdd"
  input: "^adanet/iteration_0/train_op/AssignAdd_1"
  input: "^adanet/iteration_0/train_op/is_over/cond/Merge"
}
node {
  name: "adanet/iteration_1/step/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_1/step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 0
      }
    }
  }
}
node {
  name: "adanet/iteration_1/step"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_1/step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "adanet/iteration_1/step/Assign"
  op: "Assign"
  input: "adanet/iteration_1/step"
  input: "adanet/iteration_1/step/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_1/step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "adanet/iteration_1/step/read"
  op: "Identity"
  input: "adanet/iteration_1/step"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_1/step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_1/candidate_t0_1_layer_dnn_grow_complexity_regularized/adanet_loss/initial_value"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "adanet/iteration_1/candidate_t0_1_layer_dnn_grow_complexity_regularized/adanet_loss"
  op: "VariableV2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "adanet/iteration_1/candidate_t0_1_layer_dnn_grow_complexity_regularized/adanet_loss/Assign"
  op: "Assign"
  input: "adanet/iteration_1/candidate_t0_1_layer_dnn_grow_complexity_regularized/adanet_loss"
  input: "adanet/iteration_1/candidate_t0_1_layer_dnn_grow_complexity_regularized/adanet_loss/initial_value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_1/candidate_t0_1_layer_dnn_grow_complexity_regularized/adanet_loss"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "adanet/iteration_1/candidate_t0_1_layer_dnn_grow_complexity_regularized/adanet_loss/read"
  op: "Identity"
  input: "adanet/iteration_1/candidate_t0_1_layer_dnn_grow_complexity_regularized/adanet_loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_1/candidate_t0_1_layer_dnn_grow_complexity_regularized/adanet_loss"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_1/candidate_t0_1_layer_dnn_grow_complexity_regularized/is_training"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_BOOL
        tensor_shape {
        }
        bool_val: false
      }
    }
  }
}
node {
  name: "adanet/iteration_1/candidate_t0_1_layer_dnn_grow_complexity_regularized/AssignMovingAvg/decay"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_1/candidate_t0_1_layer_dnn_grow_complexity_regularized/adanet_loss"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.10000000149011612
      }
    }
  }
}
node {
  name: "adanet/iteration_1/candidate_t0_1_layer_dnn_grow_complexity_regularized/AssignMovingAvg/adanet/iteration_1/candidate_t0_1_layer_dnn_grow_complexity_regularized/adanet_loss/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_1/candidate_t0_1_layer_dnn_grow_complexity_regularized/adanet_loss"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "adanet/iteration_1/candidate_t0_1_layer_dnn_grow_complexity_regularized/adanet/iteration_1/candidate_t0_1_layer_dnn_grow_complexity_regularized/adanet_loss/biased"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_1/candidate_t0_1_layer_dnn_grow_complexity_regularized/adanet_loss"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "adanet/iteration_1/candidate_t0_1_layer_dnn_grow_complexity_regularized/adanet/iteration_1/candidate_t0_1_layer_dnn_grow_complexity_regularized/adanet_loss/biased/Assign"
  op: "Assign"
  input: "adanet/iteration_1/candidate_t0_1_layer_dnn_grow_complexity_regularized/adanet/iteration_1/candidate_t0_1_layer_dnn_grow_complexity_regularized/adanet_loss/biased"
  input: "adanet/iteration_1/candidate_t0_1_layer_dnn_grow_complexity_regularized/AssignMovingAvg/adanet/iteration_1/candidate_t0_1_layer_dnn_grow_complexity_regularized/adanet_loss/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_1/candidate_t0_1_layer_dnn_grow_complexity_regularized/adanet_loss"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "adanet/iteration_1/candidate_t0_1_layer_dnn_grow_complexity_regularized/adanet/iteration_1/candidate_t0_1_layer_dnn_grow_complexity_regularized/adanet_loss/biased/read"
  op: "Identity"
  input: "adanet/iteration_1/candidate_t0_1_layer_dnn_grow_complexity_regularized/adanet/iteration_1/candidate_t0_1_layer_dnn_grow_complexity_regularized/adanet_loss/biased"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_1/candidate_t0_1_layer_dnn_grow_complexity_regularized/adanet_loss"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_1/candidate_t0_1_layer_dnn_grow_complexity_regularized/adanet/iteration_1/candidate_t0_1_layer_dnn_grow_complexity_regularized/adanet_loss/local_step/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_1/candidate_t0_1_layer_dnn_grow_complexity_regularized/adanet_loss"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "adanet/iteration_1/candidate_t0_1_layer_dnn_grow_complexity_regularized/adanet/iteration_1/candidate_t0_1_layer_dnn_grow_complexity_regularized/adanet_loss/local_step"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_1/candidate_t0_1_layer_dnn_grow_complexity_regularized/adanet_loss"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "adanet/iteration_1/candidate_t0_1_layer_dnn_grow_complexity_regularized/adanet/iteration_1/candidate_t0_1_layer_dnn_grow_complexity_regularized/adanet_loss/local_step/Assign"
  op: "Assign"
  input: "adanet/iteration_1/candidate_t0_1_layer_dnn_grow_complexity_regularized/adanet/iteration_1/candidate_t0_1_layer_dnn_grow_complexity_regularized/adanet_loss/local_step"
  input: "adanet/iteration_1/candidate_t0_1_layer_dnn_grow_complexity_regularized/adanet/iteration_1/candidate_t0_1_layer_dnn_grow_complexity_regularized/adanet_loss/local_step/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_1/candidate_t0_1_layer_dnn_grow_complexity_regularized/adanet_loss"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "adanet/iteration_1/candidate_t0_1_layer_dnn_grow_complexity_regularized/adanet/iteration_1/candidate_t0_1_layer_dnn_grow_complexity_regularized/adanet_loss/local_step/read"
  op: "Identity"
  input: "adanet/iteration_1/candidate_t0_1_layer_dnn_grow_complexity_regularized/adanet/iteration_1/candidate_t0_1_layer_dnn_grow_complexity_regularized/adanet_loss/local_step"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_1/candidate_t0_1_layer_dnn_grow_complexity_regularized/adanet_loss"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_1/candidate_t0_1_layer_dnn_grow_complexity_regularized/AssignMovingAvg/adanet/iteration_1/candidate_t0_1_layer_dnn_grow_complexity_regularized/adanet_loss/sub"
  op: "Sub"
  input: "adanet/iteration_1/candidate_t0_1_layer_dnn_grow_complexity_regularized/adanet/iteration_1/candidate_t0_1_layer_dnn_grow_complexity_regularized/adanet_loss/biased/read"
  input: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/add_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_1/candidate_t0_1_layer_dnn_grow_complexity_regularized/adanet_loss"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_1/candidate_t0_1_layer_dnn_grow_complexity_regularized/AssignMovingAvg/adanet/iteration_1/candidate_t0_1_layer_dnn_grow_complexity_regularized/adanet_loss/mul"
  op: "Mul"
  input: "adanet/iteration_1/candidate_t0_1_layer_dnn_grow_complexity_regularized/AssignMovingAvg/adanet/iteration_1/candidate_t0_1_layer_dnn_grow_complexity_regularized/adanet_loss/sub"
  input: "adanet/iteration_1/candidate_t0_1_layer_dnn_grow_complexity_regularized/AssignMovingAvg/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_1/candidate_t0_1_layer_dnn_grow_complexity_regularized/adanet_loss"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_1/candidate_t0_1_layer_dnn_grow_complexity_regularized/AssignMovingAvg/adanet/iteration_1/candidate_t0_1_layer_dnn_grow_complexity_regularized/adanet_loss/adanet/iteration_1/candidate_t0_1_layer_dnn_grow_complexity_regularized/adanet/iteration_1/candidate_t0_1_layer_dnn_grow_complexity_regularized/adanet_loss"
  op: "AssignSub"
  input: "adanet/iteration_1/candidate_t0_1_layer_dnn_grow_complexity_regularized/adanet/iteration_1/candidate_t0_1_layer_dnn_grow_complexity_regularized/adanet_loss/biased"
  input: "adanet/iteration_1/candidate_t0_1_layer_dnn_grow_complexity_regularized/AssignMovingAvg/adanet/iteration_1/candidate_t0_1_layer_dnn_grow_complexity_regularized/adanet_loss/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_1/candidate_t0_1_layer_dnn_grow_complexity_regularized/adanet_loss"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "adanet/iteration_1/candidate_t0_1_layer_dnn_grow_complexity_regularized/AssignMovingAvg/adanet/iteration_1/candidate_t0_1_layer_dnn_grow_complexity_regularized/adanet_loss/AssignAdd/value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_1/candidate_t0_1_layer_dnn_grow_complexity_regularized/adanet_loss"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "adanet/iteration_1/candidate_t0_1_layer_dnn_grow_complexity_regularized/AssignMovingAvg/adanet/iteration_1/candidate_t0_1_layer_dnn_grow_complexity_regularized/adanet_loss/AssignAdd"
  op: "AssignAdd"
  input: "adanet/iteration_1/candidate_t0_1_layer_dnn_grow_complexity_regularized/adanet/iteration_1/candidate_t0_1_layer_dnn_grow_complexity_regularized/adanet_loss/local_step"
  input: "adanet/iteration_1/candidate_t0_1_layer_dnn_grow_complexity_regularized/AssignMovingAvg/adanet/iteration_1/candidate_t0_1_layer_dnn_grow_complexity_regularized/adanet_loss/AssignAdd/value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_1/candidate_t0_1_layer_dnn_grow_complexity_regularized/adanet_loss"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "adanet/iteration_1/candidate_t0_1_layer_dnn_grow_complexity_regularized/AssignMovingAvg/adanet/iteration_1/candidate_t0_1_layer_dnn_grow_complexity_regularized/adanet_loss/read"
  op: "Identity"
  input: "adanet/iteration_1/candidate_t0_1_layer_dnn_grow_complexity_regularized/adanet/iteration_1/candidate_t0_1_layer_dnn_grow_complexity_regularized/adanet_loss/biased"
  input: "^adanet/iteration_1/candidate_t0_1_layer_dnn_grow_complexity_regularized/AssignMovingAvg/adanet/iteration_1/candidate_t0_1_layer_dnn_grow_complexity_regularized/adanet_loss/AssignAdd"
  input: "^adanet/iteration_1/candidate_t0_1_layer_dnn_grow_complexity_regularized/AssignMovingAvg/adanet/iteration_1/candidate_t0_1_layer_dnn_grow_complexity_regularized/adanet_loss/adanet/iteration_1/candidate_t0_1_layer_dnn_grow_complexity_regularized/adanet/iteration_1/candidate_t0_1_layer_dnn_grow_complexity_regularized/adanet_loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_1/candidate_t0_1_layer_dnn_grow_complexity_regularized/adanet_loss"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_1/candidate_t0_1_layer_dnn_grow_complexity_regularized/AssignMovingAvg/adanet/iteration_1/candidate_t0_1_layer_dnn_grow_complexity_regularized/adanet_loss/sub_1/x"
  op: "Const"
  input: "^adanet/iteration_1/candidate_t0_1_layer_dnn_grow_complexity_regularized/AssignMovingAvg/adanet/iteration_1/candidate_t0_1_layer_dnn_grow_complexity_regularized/adanet_loss/AssignAdd"
  input: "^adanet/iteration_1/candidate_t0_1_layer_dnn_grow_complexity_regularized/AssignMovingAvg/adanet/iteration_1/candidate_t0_1_layer_dnn_grow_complexity_regularized/adanet_loss/adanet/iteration_1/candidate_t0_1_layer_dnn_grow_complexity_regularized/adanet/iteration_1/candidate_t0_1_layer_dnn_grow_complexity_regularized/adanet_loss"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_1/candidate_t0_1_layer_dnn_grow_complexity_regularized/adanet_loss"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "adanet/iteration_1/candidate_t0_1_layer_dnn_grow_complexity_regularized/AssignMovingAvg/adanet/iteration_1/candidate_t0_1_layer_dnn_grow_complexity_regularized/adanet_loss/sub_1"
  op: "Sub"
  input: "adanet/iteration_1/candidate_t0_1_layer_dnn_grow_complexity_regularized/AssignMovingAvg/adanet/iteration_1/candidate_t0_1_layer_dnn_grow_complexity_regularized/adanet_loss/sub_1/x"
  input: "adanet/iteration_1/candidate_t0_1_layer_dnn_grow_complexity_regularized/AssignMovingAvg/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_1/candidate_t0_1_layer_dnn_grow_complexity_regularized/adanet_loss"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_1/candidate_t0_1_layer_dnn_grow_complexity_regularized/AssignMovingAvg/adanet/iteration_1/candidate_t0_1_layer_dnn_grow_complexity_regularized/adanet_loss/read_1"
  op: "Identity"
  input: "adanet/iteration_1/candidate_t0_1_layer_dnn_grow_complexity_regularized/adanet/iteration_1/candidate_t0_1_layer_dnn_grow_complexity_regularized/adanet_loss/local_step"
  input: "^adanet/iteration_1/candidate_t0_1_layer_dnn_grow_complexity_regularized/AssignMovingAvg/adanet/iteration_1/candidate_t0_1_layer_dnn_grow_complexity_regularized/adanet_loss/AssignAdd"
  input: "^adanet/iteration_1/candidate_t0_1_layer_dnn_grow_complexity_regularized/AssignMovingAvg/adanet/iteration_1/candidate_t0_1_layer_dnn_grow_complexity_regularized/adanet_loss/adanet/iteration_1/candidate_t0_1_layer_dnn_grow_complexity_regularized/adanet/iteration_1/candidate_t0_1_layer_dnn_grow_complexity_regularized/adanet_loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_1/candidate_t0_1_layer_dnn_grow_complexity_regularized/adanet_loss"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_1/candidate_t0_1_layer_dnn_grow_complexity_regularized/AssignMovingAvg/adanet/iteration_1/candidate_t0_1_layer_dnn_grow_complexity_regularized/adanet_loss/Pow"
  op: "Pow"
  input: "adanet/iteration_1/candidate_t0_1_layer_dnn_grow_complexity_regularized/AssignMovingAvg/adanet/iteration_1/candidate_t0_1_layer_dnn_grow_complexity_regularized/adanet_loss/sub_1"
  input: "adanet/iteration_1/candidate_t0_1_layer_dnn_grow_complexity_regularized/AssignMovingAvg/adanet/iteration_1/candidate_t0_1_layer_dnn_grow_complexity_regularized/adanet_loss/read_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_1/candidate_t0_1_layer_dnn_grow_complexity_regularized/adanet_loss"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_1/candidate_t0_1_layer_dnn_grow_complexity_regularized/AssignMovingAvg/adanet/iteration_1/candidate_t0_1_layer_dnn_grow_complexity_regularized/adanet_loss/sub_2/x"
  op: "Const"
  input: "^adanet/iteration_1/candidate_t0_1_layer_dnn_grow_complexity_regularized/AssignMovingAvg/adanet/iteration_1/candidate_t0_1_layer_dnn_grow_complexity_regularized/adanet_loss/AssignAdd"
  input: "^adanet/iteration_1/candidate_t0_1_layer_dnn_grow_complexity_regularized/AssignMovingAvg/adanet/iteration_1/candidate_t0_1_layer_dnn_grow_complexity_regularized/adanet_loss/adanet/iteration_1/candidate_t0_1_layer_dnn_grow_complexity_regularized/adanet/iteration_1/candidate_t0_1_layer_dnn_grow_complexity_regularized/adanet_loss"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_1/candidate_t0_1_layer_dnn_grow_complexity_regularized/adanet_loss"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "adanet/iteration_1/candidate_t0_1_layer_dnn_grow_complexity_regularized/AssignMovingAvg/adanet/iteration_1/candidate_t0_1_layer_dnn_grow_complexity_regularized/adanet_loss/sub_2"
  op: "Sub"
  input: "adanet/iteration_1/candidate_t0_1_layer_dnn_grow_complexity_regularized/AssignMovingAvg/adanet/iteration_1/candidate_t0_1_layer_dnn_grow_complexity_regularized/adanet_loss/sub_2/x"
  input: "adanet/iteration_1/candidate_t0_1_layer_dnn_grow_complexity_regularized/AssignMovingAvg/adanet/iteration_1/candidate_t0_1_layer_dnn_grow_complexity_regularized/adanet_loss/Pow"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_1/candidate_t0_1_layer_dnn_grow_complexity_regularized/adanet_loss"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_1/candidate_t0_1_layer_dnn_grow_complexity_regularized/AssignMovingAvg/adanet/iteration_1/candidate_t0_1_layer_dnn_grow_complexity_regularized/adanet_loss/truediv"
  op: "RealDiv"
  input: "adanet/iteration_1/candidate_t0_1_layer_dnn_grow_complexity_regularized/AssignMovingAvg/adanet/iteration_1/candidate_t0_1_layer_dnn_grow_complexity_regularized/adanet_loss/read"
  input: "adanet/iteration_1/candidate_t0_1_layer_dnn_grow_complexity_regularized/AssignMovingAvg/adanet/iteration_1/candidate_t0_1_layer_dnn_grow_complexity_regularized/adanet_loss/sub_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_1/candidate_t0_1_layer_dnn_grow_complexity_regularized/adanet_loss"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_1/candidate_t0_1_layer_dnn_grow_complexity_regularized/AssignMovingAvg/adanet/iteration_1/candidate_t0_1_layer_dnn_grow_complexity_regularized/adanet_loss/sub_3"
  op: "Sub"
  input: "adanet/iteration_1/candidate_t0_1_layer_dnn_grow_complexity_regularized/adanet_loss/read"
  input: "adanet/iteration_1/candidate_t0_1_layer_dnn_grow_complexity_regularized/AssignMovingAvg/adanet/iteration_1/candidate_t0_1_layer_dnn_grow_complexity_regularized/adanet_loss/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_1/candidate_t0_1_layer_dnn_grow_complexity_regularized/adanet_loss"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_1/candidate_t0_1_layer_dnn_grow_complexity_regularized/AssignMovingAvg"
  op: "AssignSub"
  input: "adanet/iteration_1/candidate_t0_1_layer_dnn_grow_complexity_regularized/adanet_loss"
  input: "adanet/iteration_1/candidate_t0_1_layer_dnn_grow_complexity_regularized/AssignMovingAvg/adanet/iteration_1/candidate_t0_1_layer_dnn_grow_complexity_regularized/adanet_loss/sub_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_1/candidate_t0_1_layer_dnn_grow_complexity_regularized/adanet_loss"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "adanet/iteration_1/candidate_t0_1_layer_dnn_grow_complexity_regularized/read"
  op: "Identity"
  input: "adanet/iteration_1/candidate_t0_1_layer_dnn_grow_complexity_regularized/adanet_loss"
  input: "^adanet/iteration_1/candidate_t0_1_layer_dnn_grow_complexity_regularized/AssignMovingAvg"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_1/candidate_t0_1_layer_dnn_grow_complexity_regularized/t0_1_layer_dnn_grow_complexity_regularized/adanet_loss/adanet/adanet_weighted_ensemble/tags"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "adanet_loss/adanet/adanet_weighted_ensemble"
      }
    }
  }
}
node {
  name: "adanet/iteration_1/candidate_t0_1_layer_dnn_grow_complexity_regularized/t0_1_layer_dnn_grow_complexity_regularized/adanet_loss/adanet/adanet_weighted_ensemble"
  op: "ScalarSummary"
  input: "adanet/iteration_1/candidate_t0_1_layer_dnn_grow_complexity_regularized/t0_1_layer_dnn_grow_complexity_regularized/adanet_loss/adanet/adanet_weighted_ensemble/tags"
  input: "adanet/iteration_1/candidate_t0_1_layer_dnn_grow_complexity_regularized/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_1/subnetwork_t1_1_layer_dnn/input_layer/images/Shape"
  op: "Shape"
  input: "IteratorGetNext"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "adanet/iteration_1/subnetwork_t1_1_layer_dnn/input_layer/images/strided_slice/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "adanet/iteration_1/subnetwork_t1_1_layer_dnn/input_layer/images/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "adanet/iteration_1/subnetwork_t1_1_layer_dnn/input_layer/images/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "adanet/iteration_1/subnetwork_t1_1_layer_dnn/input_layer/images/strided_slice"
  op: "StridedSlice"
  input: "adanet/iteration_1/subnetwork_t1_1_layer_dnn/input_layer/images/Shape"
  input: "adanet/iteration_1/subnetwork_t1_1_layer_dnn/input_layer/images/strided_slice/stack"
  input: "adanet/iteration_1/subnetwork_t1_1_layer_dnn/input_layer/images/strided_slice/stack_1"
  input: "adanet/iteration_1/subnetwork_t1_1_layer_dnn/input_layer/images/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "adanet/iteration_1/subnetwork_t1_1_layer_dnn/input_layer/images/Reshape/shape/1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 784
      }
    }
  }
}
node {
  name: "adanet/iteration_1/subnetwork_t1_1_layer_dnn/input_layer/images/Reshape/shape"
  op: "Pack"
  input: "adanet/iteration_1/subnetwork_t1_1_layer_dnn/input_layer/images/strided_slice"
  input: "adanet/iteration_1/subnetwork_t1_1_layer_dnn/input_layer/images/Reshape/shape/1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "adanet/iteration_1/subnetwork_t1_1_layer_dnn/input_layer/images/Reshape"
  op: "Reshape"
  input: "IteratorGetNext"
  input: "adanet/iteration_1/subnetwork_t1_1_layer_dnn/input_layer/images/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 784
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_1/subnetwork_t1_1_layer_dnn/input_layer/concat/concat_dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "adanet/iteration_1/subnetwork_t1_1_layer_dnn/input_layer/concat"
  op: "Identity"
  input: "adanet/iteration_1/subnetwork_t1_1_layer_dnn/input_layer/images/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 784
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_1/subnetwork_t1_1_layer_dnn/dense/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_1/subnetwork_t1_1_layer_dnn/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\020\003\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "adanet/iteration_1/subnetwork_t1_1_layer_dnn/dense/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_1/subnetwork_t1_1_layer_dnn/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.08574929088354111
      }
    }
  }
}
node {
  name: "adanet/iteration_1/subnetwork_t1_1_layer_dnn/dense/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_1/subnetwork_t1_1_layer_dnn/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.08574929088354111
      }
    }
  }
}
node {
  name: "adanet/iteration_1/subnetwork_t1_1_layer_dnn/dense/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "adanet/iteration_1/subnetwork_t1_1_layer_dnn/dense/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_1/subnetwork_t1_1_layer_dnn/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 784
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 3
    }
  }
  attr {
    key: "seed2"
    value {
      i: 3
    }
  }
}
node {
  name: "adanet/iteration_1/subnetwork_t1_1_layer_dnn/dense/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "adanet/iteration_1/subnetwork_t1_1_layer_dnn/dense/kernel/Initializer/random_uniform/max"
  input: "adanet/iteration_1/subnetwork_t1_1_layer_dnn/dense/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_1/subnetwork_t1_1_layer_dnn/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_1/subnetwork_t1_1_layer_dnn/dense/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "adanet/iteration_1/subnetwork_t1_1_layer_dnn/dense/kernel/Initializer/random_uniform/RandomUniform"
  input: "adanet/iteration_1/subnetwork_t1_1_layer_dnn/dense/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_1/subnetwork_t1_1_layer_dnn/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 784
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_1/subnetwork_t1_1_layer_dnn/dense/kernel/Initializer/random_uniform"
  op: "Add"
  input: "adanet/iteration_1/subnetwork_t1_1_layer_dnn/dense/kernel/Initializer/random_uniform/mul"
  input: "adanet/iteration_1/subnetwork_t1_1_layer_dnn/dense/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_1/subnetwork_t1_1_layer_dnn/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 784
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_1/subnetwork_t1_1_layer_dnn/dense/kernel"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_1/subnetwork_t1_1_layer_dnn/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 784
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 784
        }
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "adanet/iteration_1/subnetwork_t1_1_layer_dnn/dense/kernel/Assign"
  op: "Assign"
  input: "adanet/iteration_1/subnetwork_t1_1_layer_dnn/dense/kernel"
  input: "adanet/iteration_1/subnetwork_t1_1_layer_dnn/dense/kernel/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_1/subnetwork_t1_1_layer_dnn/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 784
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "adanet/iteration_1/subnetwork_t1_1_layer_dnn/dense/kernel/read"
  op: "Identity"
  input: "adanet/iteration_1/subnetwork_t1_1_layer_dnn/dense/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_1/subnetwork_t1_1_layer_dnn/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 784
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_1/subnetwork_t1_1_layer_dnn/dense/bias/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_1/subnetwork_t1_1_layer_dnn/dense/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "adanet/iteration_1/subnetwork_t1_1_layer_dnn/dense/bias"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_1/subnetwork_t1_1_layer_dnn/dense/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "adanet/iteration_1/subnetwork_t1_1_layer_dnn/dense/bias/Assign"
  op: "Assign"
  input: "adanet/iteration_1/subnetwork_t1_1_layer_dnn/dense/bias"
  input: "adanet/iteration_1/subnetwork_t1_1_layer_dnn/dense/bias/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_1/subnetwork_t1_1_layer_dnn/dense/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "adanet/iteration_1/subnetwork_t1_1_layer_dnn/dense/bias/read"
  op: "Identity"
  input: "adanet/iteration_1/subnetwork_t1_1_layer_dnn/dense/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_1/subnetwork_t1_1_layer_dnn/dense/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_1/subnetwork_t1_1_layer_dnn/dense/MatMul"
  op: "MatMul"
  input: "adanet/iteration_1/subnetwork_t1_1_layer_dnn/input_layer/concat"
  input: "adanet/iteration_1/subnetwork_t1_1_layer_dnn/dense/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "adanet/iteration_1/subnetwork_t1_1_layer_dnn/dense/BiasAdd"
  op: "BiasAdd"
  input: "adanet/iteration_1/subnetwork_t1_1_layer_dnn/dense/MatMul"
  input: "adanet/iteration_1/subnetwork_t1_1_layer_dnn/dense/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "adanet/iteration_1/subnetwork_t1_1_layer_dnn/dense/Relu"
  op: "Relu"
  input: "adanet/iteration_1/subnetwork_t1_1_layer_dnn/dense/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_1/subnetwork_t1_1_layer_dnn/dense_1/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_1/subnetwork_t1_1_layer_dnn/dense_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: " \000\000\000\n\000\000\000"
      }
    }
  }
}
node {
  name: "adanet/iteration_1/subnetwork_t1_1_layer_dnn/dense_1/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_1/subnetwork_t1_1_layer_dnn/dense_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.37796446681022644
      }
    }
  }
}
node {
  name: "adanet/iteration_1/subnetwork_t1_1_layer_dnn/dense_1/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_1/subnetwork_t1_1_layer_dnn/dense_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.37796446681022644
      }
    }
  }
}
node {
  name: "adanet/iteration_1/subnetwork_t1_1_layer_dnn/dense_1/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "adanet/iteration_1/subnetwork_t1_1_layer_dnn/dense_1/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_1/subnetwork_t1_1_layer_dnn/dense_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 3
    }
  }
  attr {
    key: "seed2"
    value {
      i: 3
    }
  }
}
node {
  name: "adanet/iteration_1/subnetwork_t1_1_layer_dnn/dense_1/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "adanet/iteration_1/subnetwork_t1_1_layer_dnn/dense_1/kernel/Initializer/random_uniform/max"
  input: "adanet/iteration_1/subnetwork_t1_1_layer_dnn/dense_1/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_1/subnetwork_t1_1_layer_dnn/dense_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_1/subnetwork_t1_1_layer_dnn/dense_1/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "adanet/iteration_1/subnetwork_t1_1_layer_dnn/dense_1/kernel/Initializer/random_uniform/RandomUniform"
  input: "adanet/iteration_1/subnetwork_t1_1_layer_dnn/dense_1/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_1/subnetwork_t1_1_layer_dnn/dense_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_1/subnetwork_t1_1_layer_dnn/dense_1/kernel/Initializer/random_uniform"
  op: "Add"
  input: "adanet/iteration_1/subnetwork_t1_1_layer_dnn/dense_1/kernel/Initializer/random_uniform/mul"
  input: "adanet/iteration_1/subnetwork_t1_1_layer_dnn/dense_1/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_1/subnetwork_t1_1_layer_dnn/dense_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_1/subnetwork_t1_1_layer_dnn/dense_1/kernel"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_1/subnetwork_t1_1_layer_dnn/dense_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
        dim {
          size: 10
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "adanet/iteration_1/subnetwork_t1_1_layer_dnn/dense_1/kernel/Assign"
  op: "Assign"
  input: "adanet/iteration_1/subnetwork_t1_1_layer_dnn/dense_1/kernel"
  input: "adanet/iteration_1/subnetwork_t1_1_layer_dnn/dense_1/kernel/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_1/subnetwork_t1_1_layer_dnn/dense_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "adanet/iteration_1/subnetwork_t1_1_layer_dnn/dense_1/kernel/read"
  op: "Identity"
  input: "adanet/iteration_1/subnetwork_t1_1_layer_dnn/dense_1/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_1/subnetwork_t1_1_layer_dnn/dense_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_1/subnetwork_t1_1_layer_dnn/dense_1/bias/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_1/subnetwork_t1_1_layer_dnn/dense_1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 10
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "adanet/iteration_1/subnetwork_t1_1_layer_dnn/dense_1/bias"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_1/subnetwork_t1_1_layer_dnn/dense_1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 10
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "adanet/iteration_1/subnetwork_t1_1_layer_dnn/dense_1/bias/Assign"
  op: "Assign"
  input: "adanet/iteration_1/subnetwork_t1_1_layer_dnn/dense_1/bias"
  input: "adanet/iteration_1/subnetwork_t1_1_layer_dnn/dense_1/bias/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_1/subnetwork_t1_1_layer_dnn/dense_1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "adanet/iteration_1/subnetwork_t1_1_layer_dnn/dense_1/bias/read"
  op: "Identity"
  input: "adanet/iteration_1/subnetwork_t1_1_layer_dnn/dense_1/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_1/subnetwork_t1_1_layer_dnn/dense_1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_1/subnetwork_t1_1_layer_dnn/dense_1/MatMul"
  op: "MatMul"
  input: "adanet/iteration_1/subnetwork_t1_1_layer_dnn/dense/Relu"
  input: "adanet/iteration_1/subnetwork_t1_1_layer_dnn/dense_1/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "adanet/iteration_1/subnetwork_t1_1_layer_dnn/dense_1/BiasAdd"
  op: "BiasAdd"
  input: "adanet/iteration_1/subnetwork_t1_1_layer_dnn/dense_1/MatMul"
  input: "adanet/iteration_1/subnetwork_t1_1_layer_dnn/dense_1/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "adanet/iteration_1/subnetwork_t1_1_layer_dnn/ToFloat/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "adanet/iteration_1/subnetwork_t1_1_layer_dnn/ToFloat"
  op: "Cast"
  input: "adanet/iteration_1/subnetwork_t1_1_layer_dnn/ToFloat/x"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_1/subnetwork_t1_1_layer_dnn/Sqrt"
  op: "Sqrt"
  input: "adanet/iteration_1/subnetwork_t1_1_layer_dnn/ToFloat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "t1_1_layer_dnn/complexity/tags"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "complexity"
      }
    }
  }
}
node {
  name: "t1_1_layer_dnn/complexity"
  op: "ScalarSummary"
  input: "t1_1_layer_dnn/complexity/tags"
  input: "adanet/iteration_1/subnetwork_t1_1_layer_dnn/Sqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "t1_1_layer_dnn/num_layers/tags"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "num_layers"
      }
    }
  }
}
node {
  name: "t1_1_layer_dnn/num_layers/values"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "t1_1_layer_dnn/num_layers"
  op: "ScalarSummary"
  input: "t1_1_layer_dnn/num_layers/tags"
  input: "t1_1_layer_dnn/num_layers/values"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_1/subnetwork_t1_1_layer_dnn/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "adanet/iteration_1/subnetwork_t1_1_layer_dnn/head/logits/Shape"
  op: "Shape"
  input: "adanet/iteration_1/subnetwork_t1_1_layer_dnn/dense_1/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "adanet/iteration_1/subnetwork_t1_1_layer_dnn/head/logits/assert_rank_at_least/rank"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "adanet/iteration_1/subnetwork_t1_1_layer_dnn/head/logits/assert_rank_at_least/assert_type/statically_determined_correct_type"
  op: "NoOp"
}
node {
  name: "adanet/iteration_1/subnetwork_t1_1_layer_dnn/head/logits/assert_rank_at_least/static_checks_determined_all_ok"
  op: "NoOp"
}
node {
  name: "adanet/iteration_1/subnetwork_t1_1_layer_dnn/head/predictions/class_ids/dimension"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "adanet/iteration_1/subnetwork_t1_1_layer_dnn/head/predictions/class_ids"
  op: "ArgMax"
  input: "adanet/iteration_1/subnetwork_t1_1_layer_dnn/dense_1/BiasAdd"
  input: "adanet/iteration_1/subnetwork_t1_1_layer_dnn/head/predictions/class_ids/dimension"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "output_type"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "adanet/iteration_1/subnetwork_t1_1_layer_dnn/head/predictions/ExpandDims/dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "adanet/iteration_1/subnetwork_t1_1_layer_dnn/head/predictions/ExpandDims"
  op: "ExpandDims"
  input: "adanet/iteration_1/subnetwork_t1_1_layer_dnn/head/predictions/class_ids"
  input: "adanet/iteration_1/subnetwork_t1_1_layer_dnn/head/predictions/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_1/subnetwork_t1_1_layer_dnn/head/predictions/str_classes"
  op: "AsString"
  input: "adanet/iteration_1/subnetwork_t1_1_layer_dnn/head/predictions/ExpandDims"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "fill"
    value {
      s: ""
    }
  }
  attr {
    key: "precision"
    value {
      i: -1
    }
  }
  attr {
    key: "scientific"
    value {
      b: false
    }
  }
  attr {
    key: "shortest"
    value {
      b: false
    }
  }
  attr {
    key: "width"
    value {
      i: -1
    }
  }
}
node {
  name: "adanet/iteration_1/subnetwork_t1_1_layer_dnn/head/predictions/probabilities"
  op: "Softmax"
  input: "adanet/iteration_1/subnetwork_t1_1_layer_dnn/dense_1/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_1/subnetwork_t1_1_layer_dnn/head/labels/ExpandDims/dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "adanet/iteration_1/subnetwork_t1_1_layer_dnn/head/labels/ExpandDims"
  op: "ExpandDims"
  input: "IteratorGetNext:1"
  input: "adanet/iteration_1/subnetwork_t1_1_layer_dnn/head/labels/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_1/subnetwork_t1_1_layer_dnn/head/labels/Shape"
  op: "Shape"
  input: "adanet/iteration_1/subnetwork_t1_1_layer_dnn/head/labels/ExpandDims"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "adanet/iteration_1/subnetwork_t1_1_layer_dnn/head/labels/Shape_1"
  op: "Shape"
  input: "adanet/iteration_1/subnetwork_t1_1_layer_dnn/dense_1/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "adanet/iteration_1/subnetwork_t1_1_layer_dnn/head/labels/assert_rank_at_least/rank"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "adanet/iteration_1/subnetwork_t1_1_layer_dnn/head/labels/assert_rank_at_least/Shape"
  op: "Shape"
  input: "adanet/iteration_1/subnetwork_t1_1_layer_dnn/head/labels/ExpandDims"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "adanet/iteration_1/subnetwork_t1_1_layer_dnn/head/labels/assert_rank_at_least/assert_type/statically_determined_correct_type"
  op: "NoOp"
}
node {
  name: "adanet/iteration_1/subnetwork_t1_1_layer_dnn/head/labels/assert_rank_at_least/static_checks_determined_all_ok"
  op: "NoOp"
}
node {
  name: "adanet/iteration_1/subnetwork_t1_1_layer_dnn/head/labels/strided_slice/stack"
  op: "Const"
  input: "^adanet/iteration_1/subnetwork_t1_1_layer_dnn/head/labels/assert_rank_at_least/static_checks_determined_all_ok"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "adanet/iteration_1/subnetwork_t1_1_layer_dnn/head/labels/strided_slice/stack_1"
  op: "Const"
  input: "^adanet/iteration_1/subnetwork_t1_1_layer_dnn/head/labels/assert_rank_at_least/static_checks_determined_all_ok"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "adanet/iteration_1/subnetwork_t1_1_layer_dnn/head/labels/strided_slice/stack_2"
  op: "Const"
  input: "^adanet/iteration_1/subnetwork_t1_1_layer_dnn/head/labels/assert_rank_at_least/static_checks_determined_all_ok"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "adanet/iteration_1/subnetwork_t1_1_layer_dnn/head/labels/strided_slice"
  op: "StridedSlice"
  input: "adanet/iteration_1/subnetwork_t1_1_layer_dnn/head/labels/Shape_1"
  input: "adanet/iteration_1/subnetwork_t1_1_layer_dnn/head/labels/strided_slice/stack"
  input: "adanet/iteration_1/subnetwork_t1_1_layer_dnn/head/labels/strided_slice/stack_1"
  input: "adanet/iteration_1/subnetwork_t1_1_layer_dnn/head/labels/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "adanet/iteration_1/subnetwork_t1_1_layer_dnn/head/labels/concat/values_1"
  op: "Const"
  input: "^adanet/iteration_1/subnetwork_t1_1_layer_dnn/head/labels/assert_rank_at_least/static_checks_determined_all_ok"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "adanet/iteration_1/subnetwork_t1_1_layer_dnn/head/labels/concat/axis"
  op: "Const"
  input: "^adanet/iteration_1/subnetwork_t1_1_layer_dnn/head/labels/assert_rank_at_least/static_checks_determined_all_ok"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "adanet/iteration_1/subnetwork_t1_1_layer_dnn/head/labels/concat"
  op: "ConcatV2"
  input: "adanet/iteration_1/subnetwork_t1_1_layer_dnn/head/labels/strided_slice"
  input: "adanet/iteration_1/subnetwork_t1_1_layer_dnn/head/labels/concat/values_1"
  input: "adanet/iteration_1/subnetwork_t1_1_layer_dnn/head/labels/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_1/subnetwork_t1_1_layer_dnn/head/labels/assert_equal/Equal"
  op: "Equal"
  input: "adanet/iteration_1/subnetwork_t1_1_layer_dnn/head/labels/concat"
  input: "adanet/iteration_1/subnetwork_t1_1_layer_dnn/head/labels/Shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_1/subnetwork_t1_1_layer_dnn/head/labels/assert_equal/Const"
  op: "Const"
  input: "^adanet/iteration_1/subnetwork_t1_1_layer_dnn/head/labels/assert_rank_at_least/static_checks_determined_all_ok"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "adanet/iteration_1/subnetwork_t1_1_layer_dnn/head/labels/assert_equal/All"
  op: "All"
  input: "adanet/iteration_1/subnetwork_t1_1_layer_dnn/head/labels/assert_equal/Equal"
  input: "adanet/iteration_1/subnetwork_t1_1_layer_dnn/head/labels/assert_equal/Const"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "adanet/iteration_1/subnetwork_t1_1_layer_dnn/head/labels/assert_equal/Assert/Const"
  op: "Const"
  input: "^adanet/iteration_1/subnetwork_t1_1_layer_dnn/head/labels/assert_rank_at_least/static_checks_determined_all_ok"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "expected_labels_shape: "
      }
    }
  }
}
node {
  name: "adanet/iteration_1/subnetwork_t1_1_layer_dnn/head/labels/assert_equal/Assert/Const_1"
  op: "Const"
  input: "^adanet/iteration_1/subnetwork_t1_1_layer_dnn/head/labels/assert_rank_at_least/static_checks_determined_all_ok"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "labels_shape: "
      }
    }
  }
}
node {
  name: "adanet/iteration_1/subnetwork_t1_1_layer_dnn/head/labels/assert_equal/Assert/Assert/data_0"
  op: "Const"
  input: "^adanet/iteration_1/subnetwork_t1_1_layer_dnn/head/labels/assert_rank_at_least/static_checks_determined_all_ok"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "expected_labels_shape: "
      }
    }
  }
}
node {
  name: "adanet/iteration_1/subnetwork_t1_1_layer_dnn/head/labels/assert_equal/Assert/Assert/data_2"
  op: "Const"
  input: "^adanet/iteration_1/subnetwork_t1_1_layer_dnn/head/labels/assert_rank_at_least/static_checks_determined_all_ok"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "labels_shape: "
      }
    }
  }
}
node {
  name: "adanet/iteration_1/subnetwork_t1_1_layer_dnn/head/labels/assert_equal/Assert/Assert"
  op: "Assert"
  input: "adanet/iteration_1/subnetwork_t1_1_layer_dnn/head/labels/assert_equal/All"
  input: "adanet/iteration_1/subnetwork_t1_1_layer_dnn/head/labels/assert_equal/Assert/Assert/data_0"
  input: "adanet/iteration_1/subnetwork_t1_1_layer_dnn/head/labels/concat"
  input: "adanet/iteration_1/subnetwork_t1_1_layer_dnn/head/labels/assert_equal/Assert/Assert/data_2"
  input: "adanet/iteration_1/subnetwork_t1_1_layer_dnn/head/labels/Shape"
  attr {
    key: "T"
    value {
      list {
        type: DT_STRING
        type: DT_INT32
        type: DT_STRING
        type: DT_INT32
      }
    }
  }
  attr {
    key: "summarize"
    value {
      i: 3
    }
  }
}
node {
  name: "adanet/iteration_1/subnetwork_t1_1_layer_dnn/head/labels"
  op: "Identity"
  input: "adanet/iteration_1/subnetwork_t1_1_layer_dnn/head/labels/ExpandDims"
  input: "^adanet/iteration_1/subnetwork_t1_1_layer_dnn/head/labels/assert_equal/Assert/Assert"
  input: "^adanet/iteration_1/subnetwork_t1_1_layer_dnn/head/labels/assert_rank_at_least/static_checks_determined_all_ok"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_1/subnetwork_t1_1_layer_dnn/head/assert_range/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 9
      }
    }
  }
}
node {
  name: "adanet/iteration_1/subnetwork_t1_1_layer_dnn/head/assert_range/assert_less_equal/LessEqual"
  op: "LessEqual"
  input: "adanet/iteration_1/subnetwork_t1_1_layer_dnn/head/labels"
  input: "adanet/iteration_1/subnetwork_t1_1_layer_dnn/head/assert_range/Const"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_1/subnetwork_t1_1_layer_dnn/head/assert_range/assert_less_equal/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "adanet/iteration_1/subnetwork_t1_1_layer_dnn/head/assert_range/assert_less_equal/All"
  op: "All"
  input: "adanet/iteration_1/subnetwork_t1_1_layer_dnn/head/assert_range/assert_less_equal/LessEqual"
  input: "adanet/iteration_1/subnetwork_t1_1_layer_dnn/head/assert_range/assert_less_equal/Const"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "adanet/iteration_1/subnetwork_t1_1_layer_dnn/head/assert_range/assert_less_equal/Assert/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "Labels must <= n_classes - 1"
      }
    }
  }
}
node {
  name: "adanet/iteration_1/subnetwork_t1_1_layer_dnn/head/assert_range/assert_less_equal/Assert/Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "Condition x <= y did not hold element-wise:x (adanet/iteration_1/subnetwork_t1_1_layer_dnn/head/labels:0) = "
      }
    }
  }
}
node {
  name: "adanet/iteration_1/subnetwork_t1_1_layer_dnn/head/assert_range/assert_less_equal/Assert/Const_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "y (adanet/iteration_1/subnetwork_t1_1_layer_dnn/head/assert_range/Const:0) = "
      }
    }
  }
}
node {
  name: "adanet/iteration_1/subnetwork_t1_1_layer_dnn/head/assert_range/assert_less_equal/Assert/Assert/data_0"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "Labels must <= n_classes - 1"
      }
    }
  }
}
node {
  name: "adanet/iteration_1/subnetwork_t1_1_layer_dnn/head/assert_range/assert_less_equal/Assert/Assert/data_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "Condition x <= y did not hold element-wise:x (adanet/iteration_1/subnetwork_t1_1_layer_dnn/head/labels:0) = "
      }
    }
  }
}
node {
  name: "adanet/iteration_1/subnetwork_t1_1_layer_dnn/head/assert_range/assert_less_equal/Assert/Assert/data_3"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "y (adanet/iteration_1/subnetwork_t1_1_layer_dnn/head/assert_range/Const:0) = "
      }
    }
  }
}
node {
  name: "adanet/iteration_1/subnetwork_t1_1_layer_dnn/head/assert_range/assert_less_equal/Assert/Assert"
  op: "Assert"
  input: "adanet/iteration_1/subnetwork_t1_1_layer_dnn/head/assert_range/assert_less_equal/All"
  input: "adanet/iteration_1/subnetwork_t1_1_layer_dnn/head/assert_range/assert_less_equal/Assert/Assert/data_0"
  input: "adanet/iteration_1/subnetwork_t1_1_layer_dnn/head/assert_range/assert_less_equal/Assert/Assert/data_1"
  input: "adanet/iteration_1/subnetwork_t1_1_layer_dnn/head/labels"
  input: "adanet/iteration_1/subnetwork_t1_1_layer_dnn/head/assert_range/assert_less_equal/Assert/Assert/data_3"
  input: "adanet/iteration_1/subnetwork_t1_1_layer_dnn/head/assert_range/Const"
  attr {
    key: "T"
    value {
      list {
        type: DT_STRING
        type: DT_STRING
        type: DT_INT32
        type: DT_STRING
        type: DT_INT32
      }
    }
  }
  attr {
    key: "summarize"
    value {
      i: 3
    }
  }
}
node {
  name: "adanet/iteration_1/subnetwork_t1_1_layer_dnn/head/assert_range/assert_non_negative/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "adanet/iteration_1/subnetwork_t1_1_layer_dnn/head/assert_range/assert_non_negative/assert_less_equal/LessEqual"
  op: "LessEqual"
  input: "adanet/iteration_1/subnetwork_t1_1_layer_dnn/head/assert_range/assert_non_negative/Const"
  input: "adanet/iteration_1/subnetwork_t1_1_layer_dnn/head/labels"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_1/subnetwork_t1_1_layer_dnn/head/assert_range/assert_non_negative/assert_less_equal/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "adanet/iteration_1/subnetwork_t1_1_layer_dnn/head/assert_range/assert_non_negative/assert_less_equal/All"
  op: "All"
  input: "adanet/iteration_1/subnetwork_t1_1_layer_dnn/head/assert_range/assert_non_negative/assert_less_equal/LessEqual"
  input: "adanet/iteration_1/subnetwork_t1_1_layer_dnn/head/assert_range/assert_non_negative/assert_less_equal/Const"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "adanet/iteration_1/subnetwork_t1_1_layer_dnn/head/assert_range/assert_non_negative/assert_less_equal/Assert/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "Labels must >= 0"
      }
    }
  }
}
node {
  name: "adanet/iteration_1/subnetwork_t1_1_layer_dnn/head/assert_range/assert_non_negative/assert_less_equal/Assert/Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "Condition x >= 0 did not hold element-wise:"
      }
    }
  }
}
node {
  name: "adanet/iteration_1/subnetwork_t1_1_layer_dnn/head/assert_range/assert_non_negative/assert_less_equal/Assert/Const_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "x (adanet/iteration_1/subnetwork_t1_1_layer_dnn/head/labels:0) = "
      }
    }
  }
}
node {
  name: "adanet/iteration_1/subnetwork_t1_1_layer_dnn/head/assert_range/assert_non_negative/assert_less_equal/Assert/Assert/data_0"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "Labels must >= 0"
      }
    }
  }
}
node {
  name: "adanet/iteration_1/subnetwork_t1_1_layer_dnn/head/assert_range/assert_non_negative/assert_less_equal/Assert/Assert/data_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "Condition x >= 0 did not hold element-wise:"
      }
    }
  }
}
node {
  name: "adanet/iteration_1/subnetwork_t1_1_layer_dnn/head/assert_range/assert_non_negative/assert_less_equal/Assert/Assert/data_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "x (adanet/iteration_1/subnetwork_t1_1_layer_dnn/head/labels:0) = "
      }
    }
  }
}
node {
  name: "adanet/iteration_1/subnetwork_t1_1_layer_dnn/head/assert_range/assert_non_negative/assert_less_equal/Assert/Assert"
  op: "Assert"
  input: "adanet/iteration_1/subnetwork_t1_1_layer_dnn/head/assert_range/assert_non_negative/assert_less_equal/All"
  input: "adanet/iteration_1/subnetwork_t1_1_layer_dnn/head/assert_range/assert_non_negative/assert_less_equal/Assert/Assert/data_0"
  input: "adanet/iteration_1/subnetwork_t1_1_layer_dnn/head/assert_range/assert_non_negative/assert_less_equal/Assert/Assert/data_1"
  input: "adanet/iteration_1/subnetwork_t1_1_layer_dnn/head/assert_range/assert_non_negative/assert_less_equal/Assert/Assert/data_2"
  input: "adanet/iteration_1/subnetwork_t1_1_layer_dnn/head/labels"
  attr {
    key: "T"
    value {
      list {
        type: DT_STRING
        type: DT_STRING
        type: DT_STRING
        type: DT_INT32
      }
    }
  }
  attr {
    key: "summarize"
    value {
      i: 3
    }
  }
}
node {
  name: "adanet/iteration_1/subnetwork_t1_1_layer_dnn/head/assert_range/Identity"
  op: "Identity"
  input: "adanet/iteration_1/subnetwork_t1_1_layer_dnn/head/labels"
  input: "^adanet/iteration_1/subnetwork_t1_1_layer_dnn/head/assert_range/assert_less_equal/Assert/Assert"
  input: "^adanet/iteration_1/subnetwork_t1_1_layer_dnn/head/assert_range/assert_non_negative/assert_less_equal/Assert/Assert"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_1/subnetwork_t1_1_layer_dnn/head/sparse_softmax_cross_entropy_loss/remove_squeezable_dimensions/Squeeze"
  op: "Squeeze"
  input: "adanet/iteration_1/subnetwork_t1_1_layer_dnn/head/assert_range/Identity"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: -1
      }
    }
  }
}
node {
  name: "adanet/iteration_1/subnetwork_t1_1_layer_dnn/head/sparse_softmax_cross_entropy_loss/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "adanet/iteration_1/subnetwork_t1_1_layer_dnn/head/sparse_softmax_cross_entropy_loss/xentropy/Shape"
  op: "Shape"
  input: "adanet/iteration_1/subnetwork_t1_1_layer_dnn/head/sparse_softmax_cross_entropy_loss/remove_squeezable_dimensions/Squeeze"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "adanet/iteration_1/subnetwork_t1_1_layer_dnn/head/sparse_softmax_cross_entropy_loss/xentropy/xentropy"
  op: "SparseSoftmaxCrossEntropyWithLogits"
  input: "adanet/iteration_1/subnetwork_t1_1_layer_dnn/dense_1/BiasAdd"
  input: "adanet/iteration_1/subnetwork_t1_1_layer_dnn/head/sparse_softmax_cross_entropy_loss/remove_squeezable_dimensions/Squeeze"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tlabels"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_1/subnetwork_t1_1_layer_dnn/head/sparse_softmax_cross_entropy_loss/assert_broadcastable/weights/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_1/subnetwork_t1_1_layer_dnn/head/sparse_softmax_cross_entropy_loss/assert_broadcastable/weights/rank"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "adanet/iteration_1/subnetwork_t1_1_layer_dnn/head/sparse_softmax_cross_entropy_loss/assert_broadcastable/values/shape"
  op: "Shape"
  input: "adanet/iteration_1/subnetwork_t1_1_layer_dnn/head/sparse_softmax_cross_entropy_loss/xentropy/xentropy"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "adanet/iteration_1/subnetwork_t1_1_layer_dnn/head/sparse_softmax_cross_entropy_loss/assert_broadcastable/values/rank"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "adanet/iteration_1/subnetwork_t1_1_layer_dnn/head/sparse_softmax_cross_entropy_loss/assert_broadcastable/static_scalar_check_success"
  op: "NoOp"
}
node {
  name: "adanet/iteration_1/subnetwork_t1_1_layer_dnn/head/sparse_softmax_cross_entropy_loss/Mul"
  op: "Mul"
  input: "adanet/iteration_1/subnetwork_t1_1_layer_dnn/head/sparse_softmax_cross_entropy_loss/xentropy/xentropy"
  input: "adanet/iteration_1/subnetwork_t1_1_layer_dnn/head/sparse_softmax_cross_entropy_loss/Const"
  input: "^adanet/iteration_1/subnetwork_t1_1_layer_dnn/head/sparse_softmax_cross_entropy_loss/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_1/subnetwork_t1_1_layer_dnn/head/ExpandDims/dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "adanet/iteration_1/subnetwork_t1_1_layer_dnn/head/ExpandDims"
  op: "ExpandDims"
  input: "adanet/iteration_1/subnetwork_t1_1_layer_dnn/head/sparse_softmax_cross_entropy_loss/Mul"
  input: "adanet/iteration_1/subnetwork_t1_1_layer_dnn/head/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_1/subnetwork_t1_1_layer_dnn/head/weighted_loss/assert_broadcastable/weights"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "adanet/iteration_1/subnetwork_t1_1_layer_dnn/head/weighted_loss/assert_broadcastable/weights/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_1/subnetwork_t1_1_layer_dnn/head/weighted_loss/assert_broadcastable/weights/rank"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "adanet/iteration_1/subnetwork_t1_1_layer_dnn/head/weighted_loss/assert_broadcastable/values/shape"
  op: "Shape"
  input: "adanet/iteration_1/subnetwork_t1_1_layer_dnn/head/ExpandDims"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "adanet/iteration_1/subnetwork_t1_1_layer_dnn/head/weighted_loss/assert_broadcastable/values/rank"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "adanet/iteration_1/subnetwork_t1_1_layer_dnn/head/weighted_loss/assert_broadcastable/static_scalar_check_success"
  op: "NoOp"
}
node {
  name: "adanet/iteration_1/subnetwork_t1_1_layer_dnn/head/weighted_loss/ToFloat/x"
  op: "Const"
  input: "^adanet/iteration_1/subnetwork_t1_1_layer_dnn/head/weighted_loss/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "adanet/iteration_1/subnetwork_t1_1_layer_dnn/head/weighted_loss/Mul"
  op: "Mul"
  input: "adanet/iteration_1/subnetwork_t1_1_layer_dnn/head/ExpandDims"
  input: "adanet/iteration_1/subnetwork_t1_1_layer_dnn/head/weighted_loss/ToFloat/x"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_1/subnetwork_t1_1_layer_dnn/head/weighted_loss/Const"
  op: "Const"
  input: "^adanet/iteration_1/subnetwork_t1_1_layer_dnn/head/weighted_loss/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "adanet/iteration_1/subnetwork_t1_1_layer_dnn/head/weighted_loss/Sum"
  op: "Sum"
  input: "adanet/iteration_1/subnetwork_t1_1_layer_dnn/head/weighted_loss/Mul"
  input: "adanet/iteration_1/subnetwork_t1_1_layer_dnn/head/weighted_loss/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "adanet/iteration_1/subnetwork_t1_1_layer_dnn/head/weighted_loss/num_elements"
  op: "Size"
  input: "adanet/iteration_1/subnetwork_t1_1_layer_dnn/head/ExpandDims"
  input: "^adanet/iteration_1/subnetwork_t1_1_layer_dnn/head/weighted_loss/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "adanet/iteration_1/subnetwork_t1_1_layer_dnn/head/weighted_loss/num_elements/Cast"
  op: "Cast"
  input: "adanet/iteration_1/subnetwork_t1_1_layer_dnn/head/weighted_loss/num_elements"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_1/subnetwork_t1_1_layer_dnn/head/weighted_loss/Const_1"
  op: "Const"
  input: "^adanet/iteration_1/subnetwork_t1_1_layer_dnn/head/weighted_loss/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_1/subnetwork_t1_1_layer_dnn/head/weighted_loss/Sum_1"
  op: "Sum"
  input: "adanet/iteration_1/subnetwork_t1_1_layer_dnn/head/weighted_loss/Sum"
  input: "adanet/iteration_1/subnetwork_t1_1_layer_dnn/head/weighted_loss/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "adanet/iteration_1/subnetwork_t1_1_layer_dnn/head/weighted_loss/value"
  op: "DivNoNan"
  input: "adanet/iteration_1/subnetwork_t1_1_layer_dnn/head/weighted_loss/Sum_1"
  input: "adanet/iteration_1/subnetwork_t1_1_layer_dnn/head/weighted_loss/num_elements/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_1/subnetwork_t1_1_layer_dnn/head/NoOp"
  op: "NoOp"
}
node {
  name: "loss/tags"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "loss"
      }
    }
  }
}
node {
  name: "loss"
  op: "ScalarSummary"
  input: "loss/tags"
  input: "adanet/iteration_1/subnetwork_t1_1_layer_dnn/head/weighted_loss/value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_1/subnetwork_t1_1_layer_dnn/t1_1_layer_dnn/loss/tags"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "loss"
      }
    }
  }
}
node {
  name: "adanet/iteration_1/subnetwork_t1_1_layer_dnn/t1_1_layer_dnn/loss"
  op: "ScalarSummary"
  input: "adanet/iteration_1/subnetwork_t1_1_layer_dnn/t1_1_layer_dnn/loss/tags"
  input: "adanet/iteration_1/subnetwork_t1_1_layer_dnn/head/weighted_loss/value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_1/subnetwork_t1_1_layer_dnn/gradients/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_1/subnetwork_t1_1_layer_dnn/gradients/grad_ys_0"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "adanet/iteration_1/subnetwork_t1_1_layer_dnn/gradients/Fill"
  op: "Fill"
  input: "adanet/iteration_1/subnetwork_t1_1_layer_dnn/gradients/Shape"
  input: "adanet/iteration_1/subnetwork_t1_1_layer_dnn/gradients/grad_ys_0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "adanet/iteration_1/subnetwork_t1_1_layer_dnn/gradients/adanet/iteration_1/subnetwork_t1_1_layer_dnn/head/weighted_loss/value_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_1/subnetwork_t1_1_layer_dnn/gradients/adanet/iteration_1/subnetwork_t1_1_layer_dnn/head/weighted_loss/value_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_1/subnetwork_t1_1_layer_dnn/gradients/adanet/iteration_1/subnetwork_t1_1_layer_dnn/head/weighted_loss/value_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "adanet/iteration_1/subnetwork_t1_1_layer_dnn/gradients/adanet/iteration_1/subnetwork_t1_1_layer_dnn/head/weighted_loss/value_grad/Shape"
  input: "adanet/iteration_1/subnetwork_t1_1_layer_dnn/gradients/adanet/iteration_1/subnetwork_t1_1_layer_dnn/head/weighted_loss/value_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_1/subnetwork_t1_1_layer_dnn/gradients/adanet/iteration_1/subnetwork_t1_1_layer_dnn/head/weighted_loss/value_grad/div_no_nan"
  op: "DivNoNan"
  input: "adanet/iteration_1/subnetwork_t1_1_layer_dnn/gradients/Fill"
  input: "adanet/iteration_1/subnetwork_t1_1_layer_dnn/head/weighted_loss/num_elements/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_1/subnetwork_t1_1_layer_dnn/gradients/adanet/iteration_1/subnetwork_t1_1_layer_dnn/head/weighted_loss/value_grad/Sum"
  op: "Sum"
  input: "adanet/iteration_1/subnetwork_t1_1_layer_dnn/gradients/adanet/iteration_1/subnetwork_t1_1_layer_dnn/head/weighted_loss/value_grad/div_no_nan"
  input: "adanet/iteration_1/subnetwork_t1_1_layer_dnn/gradients/adanet/iteration_1/subnetwork_t1_1_layer_dnn/head/weighted_loss/value_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "adanet/iteration_1/subnetwork_t1_1_layer_dnn/gradients/adanet/iteration_1/subnetwork_t1_1_layer_dnn/head/weighted_loss/value_grad/Reshape"
  op: "Reshape"
  input: "adanet/iteration_1/subnetwork_t1_1_layer_dnn/gradients/adanet/iteration_1/subnetwork_t1_1_layer_dnn/head/weighted_loss/value_grad/Sum"
  input: "adanet/iteration_1/subnetwork_t1_1_layer_dnn/gradients/adanet/iteration_1/subnetwork_t1_1_layer_dnn/head/weighted_loss/value_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_1/subnetwork_t1_1_layer_dnn/gradients/adanet/iteration_1/subnetwork_t1_1_layer_dnn/head/weighted_loss/value_grad/Neg"
  op: "Neg"
  input: "adanet/iteration_1/subnetwork_t1_1_layer_dnn/head/weighted_loss/Sum_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_1/subnetwork_t1_1_layer_dnn/gradients/adanet/iteration_1/subnetwork_t1_1_layer_dnn/head/weighted_loss/value_grad/div_no_nan_1"
  op: "DivNoNan"
  input: "adanet/iteration_1/subnetwork_t1_1_layer_dnn/gradients/adanet/iteration_1/subnetwork_t1_1_layer_dnn/head/weighted_loss/value_grad/Neg"
  input: "adanet/iteration_1/subnetwork_t1_1_layer_dnn/head/weighted_loss/num_elements/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_1/subnetwork_t1_1_layer_dnn/gradients/adanet/iteration_1/subnetwork_t1_1_layer_dnn/head/weighted_loss/value_grad/div_no_nan_2"
  op: "DivNoNan"
  input: "adanet/iteration_1/subnetwork_t1_1_layer_dnn/gradients/adanet/iteration_1/subnetwork_t1_1_layer_dnn/head/weighted_loss/value_grad/div_no_nan_1"
  input: "adanet/iteration_1/subnetwork_t1_1_layer_dnn/head/weighted_loss/num_elements/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_1/subnetwork_t1_1_layer_dnn/gradients/adanet/iteration_1/subnetwork_t1_1_layer_dnn/head/weighted_loss/value_grad/mul"
  op: "Mul"
  input: "adanet/iteration_1/subnetwork_t1_1_layer_dnn/gradients/Fill"
  input: "adanet/iteration_1/subnetwork_t1_1_layer_dnn/gradients/adanet/iteration_1/subnetwork_t1_1_layer_dnn/head/weighted_loss/value_grad/div_no_nan_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_1/subnetwork_t1_1_layer_dnn/gradients/adanet/iteration_1/subnetwork_t1_1_layer_dnn/head/weighted_loss/value_grad/Sum_1"
  op: "Sum"
  input: "adanet/iteration_1/subnetwork_t1_1_layer_dnn/gradients/adanet/iteration_1/subnetwork_t1_1_layer_dnn/head/weighted_loss/value_grad/mul"
  input: "adanet/iteration_1/subnetwork_t1_1_layer_dnn/gradients/adanet/iteration_1/subnetwork_t1_1_layer_dnn/head/weighted_loss/value_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "adanet/iteration_1/subnetwork_t1_1_layer_dnn/gradients/adanet/iteration_1/subnetwork_t1_1_layer_dnn/head/weighted_loss/value_grad/Reshape_1"
  op: "Reshape"
  input: "adanet/iteration_1/subnetwork_t1_1_layer_dnn/gradients/adanet/iteration_1/subnetwork_t1_1_layer_dnn/head/weighted_loss/value_grad/Sum_1"
  input: "adanet/iteration_1/subnetwork_t1_1_layer_dnn/gradients/adanet/iteration_1/subnetwork_t1_1_layer_dnn/head/weighted_loss/value_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_1/subnetwork_t1_1_layer_dnn/gradients/adanet/iteration_1/subnetwork_t1_1_layer_dnn/head/weighted_loss/value_grad/tuple/group_deps"
  op: "NoOp"
  input: "^adanet/iteration_1/subnetwork_t1_1_layer_dnn/gradients/adanet/iteration_1/subnetwork_t1_1_layer_dnn/head/weighted_loss/value_grad/Reshape"
  input: "^adanet/iteration_1/subnetwork_t1_1_layer_dnn/gradients/adanet/iteration_1/subnetwork_t1_1_layer_dnn/head/weighted_loss/value_grad/Reshape_1"
}
node {
  name: "adanet/iteration_1/subnetwork_t1_1_layer_dnn/gradients/adanet/iteration_1/subnetwork_t1_1_layer_dnn/head/weighted_loss/value_grad/tuple/control_dependency"
  op: "Identity"
  input: "adanet/iteration_1/subnetwork_t1_1_layer_dnn/gradients/adanet/iteration_1/subnetwork_t1_1_layer_dnn/head/weighted_loss/value_grad/Reshape"
  input: "^adanet/iteration_1/subnetwork_t1_1_layer_dnn/gradients/adanet/iteration_1/subnetwork_t1_1_layer_dnn/head/weighted_loss/value_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_1/subnetwork_t1_1_layer_dnn/gradients/adanet/iteration_1/subnetwork_t1_1_layer_dnn/head/weighted_loss/value_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_1/subnetwork_t1_1_layer_dnn/gradients/adanet/iteration_1/subnetwork_t1_1_layer_dnn/head/weighted_loss/value_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "adanet/iteration_1/subnetwork_t1_1_layer_dnn/gradients/adanet/iteration_1/subnetwork_t1_1_layer_dnn/head/weighted_loss/value_grad/Reshape_1"
  input: "^adanet/iteration_1/subnetwork_t1_1_layer_dnn/gradients/adanet/iteration_1/subnetwork_t1_1_layer_dnn/head/weighted_loss/value_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_1/subnetwork_t1_1_layer_dnn/gradients/adanet/iteration_1/subnetwork_t1_1_layer_dnn/head/weighted_loss/value_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_1/subnetwork_t1_1_layer_dnn/gradients/adanet/iteration_1/subnetwork_t1_1_layer_dnn/head/weighted_loss/Sum_1_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_1/subnetwork_t1_1_layer_dnn/gradients/adanet/iteration_1/subnetwork_t1_1_layer_dnn/head/weighted_loss/Sum_1_grad/Reshape"
  op: "Reshape"
  input: "adanet/iteration_1/subnetwork_t1_1_layer_dnn/gradients/adanet/iteration_1/subnetwork_t1_1_layer_dnn/head/weighted_loss/value_grad/tuple/control_dependency"
  input: "adanet/iteration_1/subnetwork_t1_1_layer_dnn/gradients/adanet/iteration_1/subnetwork_t1_1_layer_dnn/head/weighted_loss/Sum_1_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_1/subnetwork_t1_1_layer_dnn/gradients/adanet/iteration_1/subnetwork_t1_1_layer_dnn/head/weighted_loss/Sum_1_grad/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_1/subnetwork_t1_1_layer_dnn/gradients/adanet/iteration_1/subnetwork_t1_1_layer_dnn/head/weighted_loss/Sum_1_grad/Tile"
  op: "Tile"
  input: "adanet/iteration_1/subnetwork_t1_1_layer_dnn/gradients/adanet/iteration_1/subnetwork_t1_1_layer_dnn/head/weighted_loss/Sum_1_grad/Reshape"
  input: "adanet/iteration_1/subnetwork_t1_1_layer_dnn/gradients/adanet/iteration_1/subnetwork_t1_1_layer_dnn/head/weighted_loss/Sum_1_grad/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_1/subnetwork_t1_1_layer_dnn/gradients/adanet/iteration_1/subnetwork_t1_1_layer_dnn/head/weighted_loss/Sum_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "adanet/iteration_1/subnetwork_t1_1_layer_dnn/gradients/adanet/iteration_1/subnetwork_t1_1_layer_dnn/head/weighted_loss/Sum_grad/Reshape"
  op: "Reshape"
  input: "adanet/iteration_1/subnetwork_t1_1_layer_dnn/gradients/adanet/iteration_1/subnetwork_t1_1_layer_dnn/head/weighted_loss/Sum_1_grad/Tile"
  input: "adanet/iteration_1/subnetwork_t1_1_layer_dnn/gradients/adanet/iteration_1/subnetwork_t1_1_layer_dnn/head/weighted_loss/Sum_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_1/subnetwork_t1_1_layer_dnn/gradients/adanet/iteration_1/subnetwork_t1_1_layer_dnn/head/weighted_loss/Sum_grad/Shape"
  op: "Shape"
  input: "adanet/iteration_1/subnetwork_t1_1_layer_dnn/head/weighted_loss/Mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "adanet/iteration_1/subnetwork_t1_1_layer_dnn/gradients/adanet/iteration_1/subnetwork_t1_1_layer_dnn/head/weighted_loss/Sum_grad/Tile"
  op: "Tile"
  input: "adanet/iteration_1/subnetwork_t1_1_layer_dnn/gradients/adanet/iteration_1/subnetwork_t1_1_layer_dnn/head/weighted_loss/Sum_grad/Reshape"
  input: "adanet/iteration_1/subnetwork_t1_1_layer_dnn/gradients/adanet/iteration_1/subnetwork_t1_1_layer_dnn/head/weighted_loss/Sum_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_1/subnetwork_t1_1_layer_dnn/gradients/adanet/iteration_1/subnetwork_t1_1_layer_dnn/head/weighted_loss/Mul_grad/Shape"
  op: "Shape"
  input: "adanet/iteration_1/subnetwork_t1_1_layer_dnn/head/ExpandDims"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "adanet/iteration_1/subnetwork_t1_1_layer_dnn/gradients/adanet/iteration_1/subnetwork_t1_1_layer_dnn/head/weighted_loss/Mul_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_1/subnetwork_t1_1_layer_dnn/gradients/adanet/iteration_1/subnetwork_t1_1_layer_dnn/head/weighted_loss/Mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "adanet/iteration_1/subnetwork_t1_1_layer_dnn/gradients/adanet/iteration_1/subnetwork_t1_1_layer_dnn/head/weighted_loss/Mul_grad/Shape"
  input: "adanet/iteration_1/subnetwork_t1_1_layer_dnn/gradients/adanet/iteration_1/subnetwork_t1_1_layer_dnn/head/weighted_loss/Mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_1/subnetwork_t1_1_layer_dnn/gradients/adanet/iteration_1/subnetwork_t1_1_layer_dnn/head/weighted_loss/Mul_grad/Mul"
  op: "Mul"
  input: "adanet/iteration_1/subnetwork_t1_1_layer_dnn/gradients/adanet/iteration_1/subnetwork_t1_1_layer_dnn/head/weighted_loss/Sum_grad/Tile"
  input: "adanet/iteration_1/subnetwork_t1_1_layer_dnn/head/weighted_loss/ToFloat/x"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_1/subnetwork_t1_1_layer_dnn/gradients/adanet/iteration_1/subnetwork_t1_1_layer_dnn/head/weighted_loss/Mul_grad/Sum"
  op: "Sum"
  input: "adanet/iteration_1/subnetwork_t1_1_layer_dnn/gradients/adanet/iteration_1/subnetwork_t1_1_layer_dnn/head/weighted_loss/Mul_grad/Mul"
  input: "adanet/iteration_1/subnetwork_t1_1_layer_dnn/gradients/adanet/iteration_1/subnetwork_t1_1_layer_dnn/head/weighted_loss/Mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "adanet/iteration_1/subnetwork_t1_1_layer_dnn/gradients/adanet/iteration_1/subnetwork_t1_1_layer_dnn/head/weighted_loss/Mul_grad/Reshape"
  op: "Reshape"
  input: "adanet/iteration_1/subnetwork_t1_1_layer_dnn/gradients/adanet/iteration_1/subnetwork_t1_1_layer_dnn/head/weighted_loss/Mul_grad/Sum"
  input: "adanet/iteration_1/subnetwork_t1_1_layer_dnn/gradients/adanet/iteration_1/subnetwork_t1_1_layer_dnn/head/weighted_loss/Mul_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_1/subnetwork_t1_1_layer_dnn/gradients/adanet/iteration_1/subnetwork_t1_1_layer_dnn/head/weighted_loss/Mul_grad/Mul_1"
  op: "Mul"
  input: "adanet/iteration_1/subnetwork_t1_1_layer_dnn/head/ExpandDims"
  input: "adanet/iteration_1/subnetwork_t1_1_layer_dnn/gradients/adanet/iteration_1/subnetwork_t1_1_layer_dnn/head/weighted_loss/Sum_grad/Tile"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_1/subnetwork_t1_1_layer_dnn/gradients/adanet/iteration_1/subnetwork_t1_1_layer_dnn/head/weighted_loss/Mul_grad/Sum_1"
  op: "Sum"
  input: "adanet/iteration_1/subnetwork_t1_1_layer_dnn/gradients/adanet/iteration_1/subnetwork_t1_1_layer_dnn/head/weighted_loss/Mul_grad/Mul_1"
  input: "adanet/iteration_1/subnetwork_t1_1_layer_dnn/gradients/adanet/iteration_1/subnetwork_t1_1_layer_dnn/head/weighted_loss/Mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "adanet/iteration_1/subnetwork_t1_1_layer_dnn/gradients/adanet/iteration_1/subnetwork_t1_1_layer_dnn/head/weighted_loss/Mul_grad/Reshape_1"
  op: "Reshape"
  input: "adanet/iteration_1/subnetwork_t1_1_layer_dnn/gradients/adanet/iteration_1/subnetwork_t1_1_layer_dnn/head/weighted_loss/Mul_grad/Sum_1"
  input: "adanet/iteration_1/subnetwork_t1_1_layer_dnn/gradients/adanet/iteration_1/subnetwork_t1_1_layer_dnn/head/weighted_loss/Mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_1/subnetwork_t1_1_layer_dnn/gradients/adanet/iteration_1/subnetwork_t1_1_layer_dnn/head/weighted_loss/Mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^adanet/iteration_1/subnetwork_t1_1_layer_dnn/gradients/adanet/iteration_1/subnetwork_t1_1_layer_dnn/head/weighted_loss/Mul_grad/Reshape"
  input: "^adanet/iteration_1/subnetwork_t1_1_layer_dnn/gradients/adanet/iteration_1/subnetwork_t1_1_layer_dnn/head/weighted_loss/Mul_grad/Reshape_1"
}
node {
  name: "adanet/iteration_1/subnetwork_t1_1_layer_dnn/gradients/adanet/iteration_1/subnetwork_t1_1_layer_dnn/head/weighted_loss/Mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "adanet/iteration_1/subnetwork_t1_1_layer_dnn/gradients/adanet/iteration_1/subnetwork_t1_1_layer_dnn/head/weighted_loss/Mul_grad/Reshape"
  input: "^adanet/iteration_1/subnetwork_t1_1_layer_dnn/gradients/adanet/iteration_1/subnetwork_t1_1_layer_dnn/head/weighted_loss/Mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_1/subnetwork_t1_1_layer_dnn/gradients/adanet/iteration_1/subnetwork_t1_1_layer_dnn/head/weighted_loss/Mul_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_1/subnetwork_t1_1_layer_dnn/gradients/adanet/iteration_1/subnetwork_t1_1_layer_dnn/head/weighted_loss/Mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "adanet/iteration_1/subnetwork_t1_1_layer_dnn/gradients/adanet/iteration_1/subnetwork_t1_1_layer_dnn/head/weighted_loss/Mul_grad/Reshape_1"
  input: "^adanet/iteration_1/subnetwork_t1_1_layer_dnn/gradients/adanet/iteration_1/subnetwork_t1_1_layer_dnn/head/weighted_loss/Mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_1/subnetwork_t1_1_layer_dnn/gradients/adanet/iteration_1/subnetwork_t1_1_layer_dnn/head/weighted_loss/Mul_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_1/subnetwork_t1_1_layer_dnn/gradients/adanet/iteration_1/subnetwork_t1_1_layer_dnn/head/ExpandDims_grad/Shape"
  op: "Shape"
  input: "adanet/iteration_1/subnetwork_t1_1_layer_dnn/head/sparse_softmax_cross_entropy_loss/Mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "adanet/iteration_1/subnetwork_t1_1_layer_dnn/gradients/adanet/iteration_1/subnetwork_t1_1_layer_dnn/head/ExpandDims_grad/Reshape"
  op: "Reshape"
  input: "adanet/iteration_1/subnetwork_t1_1_layer_dnn/gradients/adanet/iteration_1/subnetwork_t1_1_layer_dnn/head/weighted_loss/Mul_grad/tuple/control_dependency"
  input: "adanet/iteration_1/subnetwork_t1_1_layer_dnn/gradients/adanet/iteration_1/subnetwork_t1_1_layer_dnn/head/ExpandDims_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_1/subnetwork_t1_1_layer_dnn/gradients/adanet/iteration_1/subnetwork_t1_1_layer_dnn/head/sparse_softmax_cross_entropy_loss/Mul_grad/Shape"
  op: "Shape"
  input: "adanet/iteration_1/subnetwork_t1_1_layer_dnn/head/sparse_softmax_cross_entropy_loss/xentropy/xentropy"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "adanet/iteration_1/subnetwork_t1_1_layer_dnn/gradients/adanet/iteration_1/subnetwork_t1_1_layer_dnn/head/sparse_softmax_cross_entropy_loss/Mul_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_1/subnetwork_t1_1_layer_dnn/gradients/adanet/iteration_1/subnetwork_t1_1_layer_dnn/head/sparse_softmax_cross_entropy_loss/Mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "adanet/iteration_1/subnetwork_t1_1_layer_dnn/gradients/adanet/iteration_1/subnetwork_t1_1_layer_dnn/head/sparse_softmax_cross_entropy_loss/Mul_grad/Shape"
  input: "adanet/iteration_1/subnetwork_t1_1_layer_dnn/gradients/adanet/iteration_1/subnetwork_t1_1_layer_dnn/head/sparse_softmax_cross_entropy_loss/Mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_1/subnetwork_t1_1_layer_dnn/gradients/adanet/iteration_1/subnetwork_t1_1_layer_dnn/head/sparse_softmax_cross_entropy_loss/Mul_grad/Mul"
  op: "Mul"
  input: "adanet/iteration_1/subnetwork_t1_1_layer_dnn/gradients/adanet/iteration_1/subnetwork_t1_1_layer_dnn/head/ExpandDims_grad/Reshape"
  input: "adanet/iteration_1/subnetwork_t1_1_layer_dnn/head/sparse_softmax_cross_entropy_loss/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_1/subnetwork_t1_1_layer_dnn/gradients/adanet/iteration_1/subnetwork_t1_1_layer_dnn/head/sparse_softmax_cross_entropy_loss/Mul_grad/Sum"
  op: "Sum"
  input: "adanet/iteration_1/subnetwork_t1_1_layer_dnn/gradients/adanet/iteration_1/subnetwork_t1_1_layer_dnn/head/sparse_softmax_cross_entropy_loss/Mul_grad/Mul"
  input: "adanet/iteration_1/subnetwork_t1_1_layer_dnn/gradients/adanet/iteration_1/subnetwork_t1_1_layer_dnn/head/sparse_softmax_cross_entropy_loss/Mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "adanet/iteration_1/subnetwork_t1_1_layer_dnn/gradients/adanet/iteration_1/subnetwork_t1_1_layer_dnn/head/sparse_softmax_cross_entropy_loss/Mul_grad/Reshape"
  op: "Reshape"
  input: "adanet/iteration_1/subnetwork_t1_1_layer_dnn/gradients/adanet/iteration_1/subnetwork_t1_1_layer_dnn/head/sparse_softmax_cross_entropy_loss/Mul_grad/Sum"
  input: "adanet/iteration_1/subnetwork_t1_1_layer_dnn/gradients/adanet/iteration_1/subnetwork_t1_1_layer_dnn/head/sparse_softmax_cross_entropy_loss/Mul_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_1/subnetwork_t1_1_layer_dnn/gradients/adanet/iteration_1/subnetwork_t1_1_layer_dnn/head/sparse_softmax_cross_entropy_loss/Mul_grad/Mul_1"
  op: "Mul"
  input: "adanet/iteration_1/subnetwork_t1_1_layer_dnn/head/sparse_softmax_cross_entropy_loss/xentropy/xentropy"
  input: "adanet/iteration_1/subnetwork_t1_1_layer_dnn/gradients/adanet/iteration_1/subnetwork_t1_1_layer_dnn/head/ExpandDims_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_1/subnetwork_t1_1_layer_dnn/gradients/adanet/iteration_1/subnetwork_t1_1_layer_dnn/head/sparse_softmax_cross_entropy_loss/Mul_grad/Sum_1"
  op: "Sum"
  input: "adanet/iteration_1/subnetwork_t1_1_layer_dnn/gradients/adanet/iteration_1/subnetwork_t1_1_layer_dnn/head/sparse_softmax_cross_entropy_loss/Mul_grad/Mul_1"
  input: "adanet/iteration_1/subnetwork_t1_1_layer_dnn/gradients/adanet/iteration_1/subnetwork_t1_1_layer_dnn/head/sparse_softmax_cross_entropy_loss/Mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "adanet/iteration_1/subnetwork_t1_1_layer_dnn/gradients/adanet/iteration_1/subnetwork_t1_1_layer_dnn/head/sparse_softmax_cross_entropy_loss/Mul_grad/Reshape_1"
  op: "Reshape"
  input: "adanet/iteration_1/subnetwork_t1_1_layer_dnn/gradients/adanet/iteration_1/subnetwork_t1_1_layer_dnn/head/sparse_softmax_cross_entropy_loss/Mul_grad/Sum_1"
  input: "adanet/iteration_1/subnetwork_t1_1_layer_dnn/gradients/adanet/iteration_1/subnetwork_t1_1_layer_dnn/head/sparse_softmax_cross_entropy_loss/Mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_1/subnetwork_t1_1_layer_dnn/gradients/adanet/iteration_1/subnetwork_t1_1_layer_dnn/head/sparse_softmax_cross_entropy_loss/Mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^adanet/iteration_1/subnetwork_t1_1_layer_dnn/gradients/adanet/iteration_1/subnetwork_t1_1_layer_dnn/head/sparse_softmax_cross_entropy_loss/Mul_grad/Reshape"
  input: "^adanet/iteration_1/subnetwork_t1_1_layer_dnn/gradients/adanet/iteration_1/subnetwork_t1_1_layer_dnn/head/sparse_softmax_cross_entropy_loss/Mul_grad/Reshape_1"
}
node {
  name: "adanet/iteration_1/subnetwork_t1_1_layer_dnn/gradients/adanet/iteration_1/subnetwork_t1_1_layer_dnn/head/sparse_softmax_cross_entropy_loss/Mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "adanet/iteration_1/subnetwork_t1_1_layer_dnn/gradients/adanet/iteration_1/subnetwork_t1_1_layer_dnn/head/sparse_softmax_cross_entropy_loss/Mul_grad/Reshape"
  input: "^adanet/iteration_1/subnetwork_t1_1_layer_dnn/gradients/adanet/iteration_1/subnetwork_t1_1_layer_dnn/head/sparse_softmax_cross_entropy_loss/Mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_1/subnetwork_t1_1_layer_dnn/gradients/adanet/iteration_1/subnetwork_t1_1_layer_dnn/head/sparse_softmax_cross_entropy_loss/Mul_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_1/subnetwork_t1_1_layer_dnn/gradients/adanet/iteration_1/subnetwork_t1_1_layer_dnn/head/sparse_softmax_cross_entropy_loss/Mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "adanet/iteration_1/subnetwork_t1_1_layer_dnn/gradients/adanet/iteration_1/subnetwork_t1_1_layer_dnn/head/sparse_softmax_cross_entropy_loss/Mul_grad/Reshape_1"
  input: "^adanet/iteration_1/subnetwork_t1_1_layer_dnn/gradients/adanet/iteration_1/subnetwork_t1_1_layer_dnn/head/sparse_softmax_cross_entropy_loss/Mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_1/subnetwork_t1_1_layer_dnn/gradients/adanet/iteration_1/subnetwork_t1_1_layer_dnn/head/sparse_softmax_cross_entropy_loss/Mul_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_1/subnetwork_t1_1_layer_dnn/gradients/zeros_like"
  op: "ZerosLike"
  input: "adanet/iteration_1/subnetwork_t1_1_layer_dnn/head/sparse_softmax_cross_entropy_loss/xentropy/xentropy:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_1/subnetwork_t1_1_layer_dnn/gradients/adanet/iteration_1/subnetwork_t1_1_layer_dnn/head/sparse_softmax_cross_entropy_loss/xentropy/xentropy_grad/PreventGradient"
  op: "PreventGradient"
  input: "adanet/iteration_1/subnetwork_t1_1_layer_dnn/head/sparse_softmax_cross_entropy_loss/xentropy/xentropy:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
  attr {
    key: "message"
    value {
      s: "Currently there is no way to take the second derivative of sparse_softmax_cross_entropy_with_logits due to the fused implementation\'s interaction with tf.gradients()"
    }
  }
}
node {
  name: "adanet/iteration_1/subnetwork_t1_1_layer_dnn/gradients/adanet/iteration_1/subnetwork_t1_1_layer_dnn/head/sparse_softmax_cross_entropy_loss/xentropy/xentropy_grad/ExpandDims/dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "adanet/iteration_1/subnetwork_t1_1_layer_dnn/gradients/adanet/iteration_1/subnetwork_t1_1_layer_dnn/head/sparse_softmax_cross_entropy_loss/xentropy/xentropy_grad/ExpandDims"
  op: "ExpandDims"
  input: "adanet/iteration_1/subnetwork_t1_1_layer_dnn/gradients/adanet/iteration_1/subnetwork_t1_1_layer_dnn/head/sparse_softmax_cross_entropy_loss/Mul_grad/tuple/control_dependency"
  input: "adanet/iteration_1/subnetwork_t1_1_layer_dnn/gradients/adanet/iteration_1/subnetwork_t1_1_layer_dnn/head/sparse_softmax_cross_entropy_loss/xentropy/xentropy_grad/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_1/subnetwork_t1_1_layer_dnn/gradients/adanet/iteration_1/subnetwork_t1_1_layer_dnn/head/sparse_softmax_cross_entropy_loss/xentropy/xentropy_grad/mul"
  op: "Mul"
  input: "adanet/iteration_1/subnetwork_t1_1_layer_dnn/gradients/adanet/iteration_1/subnetwork_t1_1_layer_dnn/head/sparse_softmax_cross_entropy_loss/xentropy/xentropy_grad/ExpandDims"
  input: "adanet/iteration_1/subnetwork_t1_1_layer_dnn/gradients/adanet/iteration_1/subnetwork_t1_1_layer_dnn/head/sparse_softmax_cross_entropy_loss/xentropy/xentropy_grad/PreventGradient"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_1/subnetwork_t1_1_layer_dnn/gradients/adanet/iteration_1/subnetwork_t1_1_layer_dnn/dense_1/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "adanet/iteration_1/subnetwork_t1_1_layer_dnn/gradients/adanet/iteration_1/subnetwork_t1_1_layer_dnn/head/sparse_softmax_cross_entropy_loss/xentropy/xentropy_grad/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "adanet/iteration_1/subnetwork_t1_1_layer_dnn/gradients/adanet/iteration_1/subnetwork_t1_1_layer_dnn/dense_1/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^adanet/iteration_1/subnetwork_t1_1_layer_dnn/gradients/adanet/iteration_1/subnetwork_t1_1_layer_dnn/dense_1/BiasAdd_grad/BiasAddGrad"
  input: "^adanet/iteration_1/subnetwork_t1_1_layer_dnn/gradients/adanet/iteration_1/subnetwork_t1_1_layer_dnn/head/sparse_softmax_cross_entropy_loss/xentropy/xentropy_grad/mul"
}
node {
  name: "adanet/iteration_1/subnetwork_t1_1_layer_dnn/gradients/adanet/iteration_1/subnetwork_t1_1_layer_dnn/dense_1/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "adanet/iteration_1/subnetwork_t1_1_layer_dnn/gradients/adanet/iteration_1/subnetwork_t1_1_layer_dnn/head/sparse_softmax_cross_entropy_loss/xentropy/xentropy_grad/mul"
  input: "^adanet/iteration_1/subnetwork_t1_1_layer_dnn/gradients/adanet/iteration_1/subnetwork_t1_1_layer_dnn/dense_1/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_1/subnetwork_t1_1_layer_dnn/gradients/adanet/iteration_1/subnetwork_t1_1_layer_dnn/head/sparse_softmax_cross_entropy_loss/xentropy/xentropy_grad/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_1/subnetwork_t1_1_layer_dnn/gradients/adanet/iteration_1/subnetwork_t1_1_layer_dnn/dense_1/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "adanet/iteration_1/subnetwork_t1_1_layer_dnn/gradients/adanet/iteration_1/subnetwork_t1_1_layer_dnn/dense_1/BiasAdd_grad/BiasAddGrad"
  input: "^adanet/iteration_1/subnetwork_t1_1_layer_dnn/gradients/adanet/iteration_1/subnetwork_t1_1_layer_dnn/dense_1/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_1/subnetwork_t1_1_layer_dnn/gradients/adanet/iteration_1/subnetwork_t1_1_layer_dnn/dense_1/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_1/subnetwork_t1_1_layer_dnn/gradients/adanet/iteration_1/subnetwork_t1_1_layer_dnn/dense_1/MatMul_grad/MatMul"
  op: "MatMul"
  input: "adanet/iteration_1/subnetwork_t1_1_layer_dnn/gradients/adanet/iteration_1/subnetwork_t1_1_layer_dnn/dense_1/BiasAdd_grad/tuple/control_dependency"
  input: "adanet/iteration_1/subnetwork_t1_1_layer_dnn/dense_1/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "adanet/iteration_1/subnetwork_t1_1_layer_dnn/gradients/adanet/iteration_1/subnetwork_t1_1_layer_dnn/dense_1/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "adanet/iteration_1/subnetwork_t1_1_layer_dnn/dense/Relu"
  input: "adanet/iteration_1/subnetwork_t1_1_layer_dnn/gradients/adanet/iteration_1/subnetwork_t1_1_layer_dnn/dense_1/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "adanet/iteration_1/subnetwork_t1_1_layer_dnn/gradients/adanet/iteration_1/subnetwork_t1_1_layer_dnn/dense_1/MatMul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^adanet/iteration_1/subnetwork_t1_1_layer_dnn/gradients/adanet/iteration_1/subnetwork_t1_1_layer_dnn/dense_1/MatMul_grad/MatMul"
  input: "^adanet/iteration_1/subnetwork_t1_1_layer_dnn/gradients/adanet/iteration_1/subnetwork_t1_1_layer_dnn/dense_1/MatMul_grad/MatMul_1"
}
node {
  name: "adanet/iteration_1/subnetwork_t1_1_layer_dnn/gradients/adanet/iteration_1/subnetwork_t1_1_layer_dnn/dense_1/MatMul_grad/tuple/control_dependency"
  op: "Identity"
  input: "adanet/iteration_1/subnetwork_t1_1_layer_dnn/gradients/adanet/iteration_1/subnetwork_t1_1_layer_dnn/dense_1/MatMul_grad/MatMul"
  input: "^adanet/iteration_1/subnetwork_t1_1_layer_dnn/gradients/adanet/iteration_1/subnetwork_t1_1_layer_dnn/dense_1/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_1/subnetwork_t1_1_layer_dnn/gradients/adanet/iteration_1/subnetwork_t1_1_layer_dnn/dense_1/MatMul_grad/MatMul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_1/subnetwork_t1_1_layer_dnn/gradients/adanet/iteration_1/subnetwork_t1_1_layer_dnn/dense_1/MatMul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "adanet/iteration_1/subnetwork_t1_1_layer_dnn/gradients/adanet/iteration_1/subnetwork_t1_1_layer_dnn/dense_1/MatMul_grad/MatMul_1"
  input: "^adanet/iteration_1/subnetwork_t1_1_layer_dnn/gradients/adanet/iteration_1/subnetwork_t1_1_layer_dnn/dense_1/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_1/subnetwork_t1_1_layer_dnn/gradients/adanet/iteration_1/subnetwork_t1_1_layer_dnn/dense_1/MatMul_grad/MatMul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_1/subnetwork_t1_1_layer_dnn/gradients/adanet/iteration_1/subnetwork_t1_1_layer_dnn/dense/Relu_grad/ReluGrad"
  op: "ReluGrad"
  input: "adanet/iteration_1/subnetwork_t1_1_layer_dnn/gradients/adanet/iteration_1/subnetwork_t1_1_layer_dnn/dense_1/MatMul_grad/tuple/control_dependency"
  input: "adanet/iteration_1/subnetwork_t1_1_layer_dnn/dense/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_1/subnetwork_t1_1_layer_dnn/gradients/adanet/iteration_1/subnetwork_t1_1_layer_dnn/dense/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "adanet/iteration_1/subnetwork_t1_1_layer_dnn/gradients/adanet/iteration_1/subnetwork_t1_1_layer_dnn/dense/Relu_grad/ReluGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "adanet/iteration_1/subnetwork_t1_1_layer_dnn/gradients/adanet/iteration_1/subnetwork_t1_1_layer_dnn/dense/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^adanet/iteration_1/subnetwork_t1_1_layer_dnn/gradients/adanet/iteration_1/subnetwork_t1_1_layer_dnn/dense/BiasAdd_grad/BiasAddGrad"
  input: "^adanet/iteration_1/subnetwork_t1_1_layer_dnn/gradients/adanet/iteration_1/subnetwork_t1_1_layer_dnn/dense/Relu_grad/ReluGrad"
}
node {
  name: "adanet/iteration_1/subnetwork_t1_1_layer_dnn/gradients/adanet/iteration_1/subnetwork_t1_1_layer_dnn/dense/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "adanet/iteration_1/subnetwork_t1_1_layer_dnn/gradients/adanet/iteration_1/subnetwork_t1_1_layer_dnn/dense/Relu_grad/ReluGrad"
  input: "^adanet/iteration_1/subnetwork_t1_1_layer_dnn/gradients/adanet/iteration_1/subnetwork_t1_1_layer_dnn/dense/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_1/subnetwork_t1_1_layer_dnn/gradients/adanet/iteration_1/subnetwork_t1_1_layer_dnn/dense/Relu_grad/ReluGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_1/subnetwork_t1_1_layer_dnn/gradients/adanet/iteration_1/subnetwork_t1_1_layer_dnn/dense/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "adanet/iteration_1/subnetwork_t1_1_layer_dnn/gradients/adanet/iteration_1/subnetwork_t1_1_layer_dnn/dense/BiasAdd_grad/BiasAddGrad"
  input: "^adanet/iteration_1/subnetwork_t1_1_layer_dnn/gradients/adanet/iteration_1/subnetwork_t1_1_layer_dnn/dense/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_1/subnetwork_t1_1_layer_dnn/gradients/adanet/iteration_1/subnetwork_t1_1_layer_dnn/dense/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_1/subnetwork_t1_1_layer_dnn/gradients/adanet/iteration_1/subnetwork_t1_1_layer_dnn/dense/MatMul_grad/MatMul"
  op: "MatMul"
  input: "adanet/iteration_1/subnetwork_t1_1_layer_dnn/gradients/adanet/iteration_1/subnetwork_t1_1_layer_dnn/dense/BiasAdd_grad/tuple/control_dependency"
  input: "adanet/iteration_1/subnetwork_t1_1_layer_dnn/dense/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 784
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "adanet/iteration_1/subnetwork_t1_1_layer_dnn/gradients/adanet/iteration_1/subnetwork_t1_1_layer_dnn/dense/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "adanet/iteration_1/subnetwork_t1_1_layer_dnn/input_layer/concat"
  input: "adanet/iteration_1/subnetwork_t1_1_layer_dnn/gradients/adanet/iteration_1/subnetwork_t1_1_layer_dnn/dense/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 784
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "adanet/iteration_1/subnetwork_t1_1_layer_dnn/gradients/adanet/iteration_1/subnetwork_t1_1_layer_dnn/dense/MatMul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^adanet/iteration_1/subnetwork_t1_1_layer_dnn/gradients/adanet/iteration_1/subnetwork_t1_1_layer_dnn/dense/MatMul_grad/MatMul"
  input: "^adanet/iteration_1/subnetwork_t1_1_layer_dnn/gradients/adanet/iteration_1/subnetwork_t1_1_layer_dnn/dense/MatMul_grad/MatMul_1"
}
node {
  name: "adanet/iteration_1/subnetwork_t1_1_layer_dnn/gradients/adanet/iteration_1/subnetwork_t1_1_layer_dnn/dense/MatMul_grad/tuple/control_dependency"
  op: "Identity"
  input: "adanet/iteration_1/subnetwork_t1_1_layer_dnn/gradients/adanet/iteration_1/subnetwork_t1_1_layer_dnn/dense/MatMul_grad/MatMul"
  input: "^adanet/iteration_1/subnetwork_t1_1_layer_dnn/gradients/adanet/iteration_1/subnetwork_t1_1_layer_dnn/dense/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_1/subnetwork_t1_1_layer_dnn/gradients/adanet/iteration_1/subnetwork_t1_1_layer_dnn/dense/MatMul_grad/MatMul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 784
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_1/subnetwork_t1_1_layer_dnn/gradients/adanet/iteration_1/subnetwork_t1_1_layer_dnn/dense/MatMul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "adanet/iteration_1/subnetwork_t1_1_layer_dnn/gradients/adanet/iteration_1/subnetwork_t1_1_layer_dnn/dense/MatMul_grad/MatMul_1"
  input: "^adanet/iteration_1/subnetwork_t1_1_layer_dnn/gradients/adanet/iteration_1/subnetwork_t1_1_layer_dnn/dense/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_1/subnetwork_t1_1_layer_dnn/gradients/adanet/iteration_1/subnetwork_t1_1_layer_dnn/dense/MatMul_grad/MatMul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 784
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_1/subnetwork_t1_1_layer_dnn/adanet/iteration_1/subnetwork_t1_1_layer_dnn/dense/kernel/RMSProp/Initializer/ones/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_1/subnetwork_t1_1_layer_dnn/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\020\003\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "adanet/iteration_1/subnetwork_t1_1_layer_dnn/adanet/iteration_1/subnetwork_t1_1_layer_dnn/dense/kernel/RMSProp/Initializer/ones/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_1/subnetwork_t1_1_layer_dnn/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "adanet/iteration_1/subnetwork_t1_1_layer_dnn/adanet/iteration_1/subnetwork_t1_1_layer_dnn/dense/kernel/RMSProp/Initializer/ones"
  op: "Fill"
  input: "adanet/iteration_1/subnetwork_t1_1_layer_dnn/adanet/iteration_1/subnetwork_t1_1_layer_dnn/dense/kernel/RMSProp/Initializer/ones/shape_as_tensor"
  input: "adanet/iteration_1/subnetwork_t1_1_layer_dnn/adanet/iteration_1/subnetwork_t1_1_layer_dnn/dense/kernel/RMSProp/Initializer/ones/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_1/subnetwork_t1_1_layer_dnn/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 784
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "adanet/iteration_1/subnetwork_t1_1_layer_dnn/adanet/iteration_1/subnetwork_t1_1_layer_dnn/dense/kernel/RMSProp"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_1/subnetwork_t1_1_layer_dnn/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 784
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 784
        }
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "adanet/iteration_1/subnetwork_t1_1_layer_dnn/adanet/iteration_1/subnetwork_t1_1_layer_dnn/dense/kernel/RMSProp/Assign"
  op: "Assign"
  input: "adanet/iteration_1/subnetwork_t1_1_layer_dnn/adanet/iteration_1/subnetwork_t1_1_layer_dnn/dense/kernel/RMSProp"
  input: "adanet/iteration_1/subnetwork_t1_1_layer_dnn/adanet/iteration_1/subnetwork_t1_1_layer_dnn/dense/kernel/RMSProp/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_1/subnetwork_t1_1_layer_dnn/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 784
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "adanet/iteration_1/subnetwork_t1_1_layer_dnn/adanet/iteration_1/subnetwork_t1_1_layer_dnn/dense/kernel/RMSProp/read"
  op: "Identity"
  input: "adanet/iteration_1/subnetwork_t1_1_layer_dnn/adanet/iteration_1/subnetwork_t1_1_layer_dnn/dense/kernel/RMSProp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_1/subnetwork_t1_1_layer_dnn/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 784
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_1/subnetwork_t1_1_layer_dnn/adanet/iteration_1/subnetwork_t1_1_layer_dnn/dense/kernel/RMSProp_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_1/subnetwork_t1_1_layer_dnn/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\020\003\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "adanet/iteration_1/subnetwork_t1_1_layer_dnn/adanet/iteration_1/subnetwork_t1_1_layer_dnn/dense/kernel/RMSProp_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_1/subnetwork_t1_1_layer_dnn/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "adanet/iteration_1/subnetwork_t1_1_layer_dnn/adanet/iteration_1/subnetwork_t1_1_layer_dnn/dense/kernel/RMSProp_1/Initializer/zeros"
  op: "Fill"
  input: "adanet/iteration_1/subnetwork_t1_1_layer_dnn/adanet/iteration_1/subnetwork_t1_1_layer_dnn/dense/kernel/RMSProp_1/Initializer/zeros/shape_as_tensor"
  input: "adanet/iteration_1/subnetwork_t1_1_layer_dnn/adanet/iteration_1/subnetwork_t1_1_layer_dnn/dense/kernel/RMSProp_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_1/subnetwork_t1_1_layer_dnn/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 784
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "adanet/iteration_1/subnetwork_t1_1_layer_dnn/adanet/iteration_1/subnetwork_t1_1_layer_dnn/dense/kernel/RMSProp_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_1/subnetwork_t1_1_layer_dnn/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 784
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 784
        }
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "adanet/iteration_1/subnetwork_t1_1_layer_dnn/adanet/iteration_1/subnetwork_t1_1_layer_dnn/dense/kernel/RMSProp_1/Assign"
  op: "Assign"
  input: "adanet/iteration_1/subnetwork_t1_1_layer_dnn/adanet/iteration_1/subnetwork_t1_1_layer_dnn/dense/kernel/RMSProp_1"
  input: "adanet/iteration_1/subnetwork_t1_1_layer_dnn/adanet/iteration_1/subnetwork_t1_1_layer_dnn/dense/kernel/RMSProp_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_1/subnetwork_t1_1_layer_dnn/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 784
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "adanet/iteration_1/subnetwork_t1_1_layer_dnn/adanet/iteration_1/subnetwork_t1_1_layer_dnn/dense/kernel/RMSProp_1/read"
  op: "Identity"
  input: "adanet/iteration_1/subnetwork_t1_1_layer_dnn/adanet/iteration_1/subnetwork_t1_1_layer_dnn/dense/kernel/RMSProp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_1/subnetwork_t1_1_layer_dnn/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 784
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_1/subnetwork_t1_1_layer_dnn/adanet/iteration_1/subnetwork_t1_1_layer_dnn/dense/bias/RMSProp/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_1/subnetwork_t1_1_layer_dnn/dense/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "adanet/iteration_1/subnetwork_t1_1_layer_dnn/adanet/iteration_1/subnetwork_t1_1_layer_dnn/dense/bias/RMSProp"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_1/subnetwork_t1_1_layer_dnn/dense/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "adanet/iteration_1/subnetwork_t1_1_layer_dnn/adanet/iteration_1/subnetwork_t1_1_layer_dnn/dense/bias/RMSProp/Assign"
  op: "Assign"
  input: "adanet/iteration_1/subnetwork_t1_1_layer_dnn/adanet/iteration_1/subnetwork_t1_1_layer_dnn/dense/bias/RMSProp"
  input: "adanet/iteration_1/subnetwork_t1_1_layer_dnn/adanet/iteration_1/subnetwork_t1_1_layer_dnn/dense/bias/RMSProp/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_1/subnetwork_t1_1_layer_dnn/dense/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "adanet/iteration_1/subnetwork_t1_1_layer_dnn/adanet/iteration_1/subnetwork_t1_1_layer_dnn/dense/bias/RMSProp/read"
  op: "Identity"
  input: "adanet/iteration_1/subnetwork_t1_1_layer_dnn/adanet/iteration_1/subnetwork_t1_1_layer_dnn/dense/bias/RMSProp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_1/subnetwork_t1_1_layer_dnn/dense/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_1/subnetwork_t1_1_layer_dnn/adanet/iteration_1/subnetwork_t1_1_layer_dnn/dense/bias/RMSProp_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_1/subnetwork_t1_1_layer_dnn/dense/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "adanet/iteration_1/subnetwork_t1_1_layer_dnn/adanet/iteration_1/subnetwork_t1_1_layer_dnn/dense/bias/RMSProp_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_1/subnetwork_t1_1_layer_dnn/dense/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "adanet/iteration_1/subnetwork_t1_1_layer_dnn/adanet/iteration_1/subnetwork_t1_1_layer_dnn/dense/bias/RMSProp_1/Assign"
  op: "Assign"
  input: "adanet/iteration_1/subnetwork_t1_1_layer_dnn/adanet/iteration_1/subnetwork_t1_1_layer_dnn/dense/bias/RMSProp_1"
  input: "adanet/iteration_1/subnetwork_t1_1_layer_dnn/adanet/iteration_1/subnetwork_t1_1_layer_dnn/dense/bias/RMSProp_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_1/subnetwork_t1_1_layer_dnn/dense/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "adanet/iteration_1/subnetwork_t1_1_layer_dnn/adanet/iteration_1/subnetwork_t1_1_layer_dnn/dense/bias/RMSProp_1/read"
  op: "Identity"
  input: "adanet/iteration_1/subnetwork_t1_1_layer_dnn/adanet/iteration_1/subnetwork_t1_1_layer_dnn/dense/bias/RMSProp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_1/subnetwork_t1_1_layer_dnn/dense/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_1/subnetwork_t1_1_layer_dnn/adanet/iteration_1/subnetwork_t1_1_layer_dnn/dense_1/kernel/RMSProp/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_1/subnetwork_t1_1_layer_dnn/dense_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
          dim {
            size: 10
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "adanet/iteration_1/subnetwork_t1_1_layer_dnn/adanet/iteration_1/subnetwork_t1_1_layer_dnn/dense_1/kernel/RMSProp"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_1/subnetwork_t1_1_layer_dnn/dense_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
        dim {
          size: 10
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "adanet/iteration_1/subnetwork_t1_1_layer_dnn/adanet/iteration_1/subnetwork_t1_1_layer_dnn/dense_1/kernel/RMSProp/Assign"
  op: "Assign"
  input: "adanet/iteration_1/subnetwork_t1_1_layer_dnn/adanet/iteration_1/subnetwork_t1_1_layer_dnn/dense_1/kernel/RMSProp"
  input: "adanet/iteration_1/subnetwork_t1_1_layer_dnn/adanet/iteration_1/subnetwork_t1_1_layer_dnn/dense_1/kernel/RMSProp/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_1/subnetwork_t1_1_layer_dnn/dense_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "adanet/iteration_1/subnetwork_t1_1_layer_dnn/adanet/iteration_1/subnetwork_t1_1_layer_dnn/dense_1/kernel/RMSProp/read"
  op: "Identity"
  input: "adanet/iteration_1/subnetwork_t1_1_layer_dnn/adanet/iteration_1/subnetwork_t1_1_layer_dnn/dense_1/kernel/RMSProp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_1/subnetwork_t1_1_layer_dnn/dense_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_1/subnetwork_t1_1_layer_dnn/adanet/iteration_1/subnetwork_t1_1_layer_dnn/dense_1/kernel/RMSProp_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_1/subnetwork_t1_1_layer_dnn/dense_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
          dim {
            size: 10
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "adanet/iteration_1/subnetwork_t1_1_layer_dnn/adanet/iteration_1/subnetwork_t1_1_layer_dnn/dense_1/kernel/RMSProp_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_1/subnetwork_t1_1_layer_dnn/dense_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
        dim {
          size: 10
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "adanet/iteration_1/subnetwork_t1_1_layer_dnn/adanet/iteration_1/subnetwork_t1_1_layer_dnn/dense_1/kernel/RMSProp_1/Assign"
  op: "Assign"
  input: "adanet/iteration_1/subnetwork_t1_1_layer_dnn/adanet/iteration_1/subnetwork_t1_1_layer_dnn/dense_1/kernel/RMSProp_1"
  input: "adanet/iteration_1/subnetwork_t1_1_layer_dnn/adanet/iteration_1/subnetwork_t1_1_layer_dnn/dense_1/kernel/RMSProp_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_1/subnetwork_t1_1_layer_dnn/dense_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "adanet/iteration_1/subnetwork_t1_1_layer_dnn/adanet/iteration_1/subnetwork_t1_1_layer_dnn/dense_1/kernel/RMSProp_1/read"
  op: "Identity"
  input: "adanet/iteration_1/subnetwork_t1_1_layer_dnn/adanet/iteration_1/subnetwork_t1_1_layer_dnn/dense_1/kernel/RMSProp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_1/subnetwork_t1_1_layer_dnn/dense_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_1/subnetwork_t1_1_layer_dnn/adanet/iteration_1/subnetwork_t1_1_layer_dnn/dense_1/bias/RMSProp/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_1/subnetwork_t1_1_layer_dnn/dense_1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 10
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "adanet/iteration_1/subnetwork_t1_1_layer_dnn/adanet/iteration_1/subnetwork_t1_1_layer_dnn/dense_1/bias/RMSProp"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_1/subnetwork_t1_1_layer_dnn/dense_1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 10
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "adanet/iteration_1/subnetwork_t1_1_layer_dnn/adanet/iteration_1/subnetwork_t1_1_layer_dnn/dense_1/bias/RMSProp/Assign"
  op: "Assign"
  input: "adanet/iteration_1/subnetwork_t1_1_layer_dnn/adanet/iteration_1/subnetwork_t1_1_layer_dnn/dense_1/bias/RMSProp"
  input: "adanet/iteration_1/subnetwork_t1_1_layer_dnn/adanet/iteration_1/subnetwork_t1_1_layer_dnn/dense_1/bias/RMSProp/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_1/subnetwork_t1_1_layer_dnn/dense_1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "adanet/iteration_1/subnetwork_t1_1_layer_dnn/adanet/iteration_1/subnetwork_t1_1_layer_dnn/dense_1/bias/RMSProp/read"
  op: "Identity"
  input: "adanet/iteration_1/subnetwork_t1_1_layer_dnn/adanet/iteration_1/subnetwork_t1_1_layer_dnn/dense_1/bias/RMSProp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_1/subnetwork_t1_1_layer_dnn/dense_1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_1/subnetwork_t1_1_layer_dnn/adanet/iteration_1/subnetwork_t1_1_layer_dnn/dense_1/bias/RMSProp_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_1/subnetwork_t1_1_layer_dnn/dense_1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 10
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "adanet/iteration_1/subnetwork_t1_1_layer_dnn/adanet/iteration_1/subnetwork_t1_1_layer_dnn/dense_1/bias/RMSProp_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_1/subnetwork_t1_1_layer_dnn/dense_1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 10
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "adanet/iteration_1/subnetwork_t1_1_layer_dnn/adanet/iteration_1/subnetwork_t1_1_layer_dnn/dense_1/bias/RMSProp_1/Assign"
  op: "Assign"
  input: "adanet/iteration_1/subnetwork_t1_1_layer_dnn/adanet/iteration_1/subnetwork_t1_1_layer_dnn/dense_1/bias/RMSProp_1"
  input: "adanet/iteration_1/subnetwork_t1_1_layer_dnn/adanet/iteration_1/subnetwork_t1_1_layer_dnn/dense_1/bias/RMSProp_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_1/subnetwork_t1_1_layer_dnn/dense_1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "adanet/iteration_1/subnetwork_t1_1_layer_dnn/adanet/iteration_1/subnetwork_t1_1_layer_dnn/dense_1/bias/RMSProp_1/read"
  op: "Identity"
  input: "adanet/iteration_1/subnetwork_t1_1_layer_dnn/adanet/iteration_1/subnetwork_t1_1_layer_dnn/dense_1/bias/RMSProp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_1/subnetwork_t1_1_layer_dnn/dense_1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_1/subnetwork_t1_1_layer_dnn/RMSProp/learning_rate"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "adanet/iteration_1/subnetwork_t1_1_layer_dnn/RMSProp/decay"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.8999999761581421
      }
    }
  }
}
node {
  name: "adanet/iteration_1/subnetwork_t1_1_layer_dnn/RMSProp/momentum"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "adanet/iteration_1/subnetwork_t1_1_layer_dnn/RMSProp/epsilon"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.000000013351432e-10
      }
    }
  }
}
node {
  name: "adanet/iteration_1/subnetwork_t1_1_layer_dnn/RMSProp/update_adanet/iteration_1/subnetwork_t1_1_layer_dnn/dense/kernel/ApplyRMSProp"
  op: "ApplyRMSProp"
  input: "adanet/iteration_1/subnetwork_t1_1_layer_dnn/dense/kernel"
  input: "adanet/iteration_1/subnetwork_t1_1_layer_dnn/adanet/iteration_1/subnetwork_t1_1_layer_dnn/dense/kernel/RMSProp"
  input: "adanet/iteration_1/subnetwork_t1_1_layer_dnn/adanet/iteration_1/subnetwork_t1_1_layer_dnn/dense/kernel/RMSProp_1"
  input: "adanet/iteration_1/subnetwork_t1_1_layer_dnn/RMSProp/learning_rate"
  input: "adanet/iteration_1/subnetwork_t1_1_layer_dnn/RMSProp/decay"
  input: "adanet/iteration_1/subnetwork_t1_1_layer_dnn/RMSProp/momentum"
  input: "adanet/iteration_1/subnetwork_t1_1_layer_dnn/RMSProp/epsilon"
  input: "adanet/iteration_1/subnetwork_t1_1_layer_dnn/gradients/adanet/iteration_1/subnetwork_t1_1_layer_dnn/dense/MatMul_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_1/subnetwork_t1_1_layer_dnn/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 784
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "adanet/iteration_1/subnetwork_t1_1_layer_dnn/RMSProp/update_adanet/iteration_1/subnetwork_t1_1_layer_dnn/dense/bias/ApplyRMSProp"
  op: "ApplyRMSProp"
  input: "adanet/iteration_1/subnetwork_t1_1_layer_dnn/dense/bias"
  input: "adanet/iteration_1/subnetwork_t1_1_layer_dnn/adanet/iteration_1/subnetwork_t1_1_layer_dnn/dense/bias/RMSProp"
  input: "adanet/iteration_1/subnetwork_t1_1_layer_dnn/adanet/iteration_1/subnetwork_t1_1_layer_dnn/dense/bias/RMSProp_1"
  input: "adanet/iteration_1/subnetwork_t1_1_layer_dnn/RMSProp/learning_rate"
  input: "adanet/iteration_1/subnetwork_t1_1_layer_dnn/RMSProp/decay"
  input: "adanet/iteration_1/subnetwork_t1_1_layer_dnn/RMSProp/momentum"
  input: "adanet/iteration_1/subnetwork_t1_1_layer_dnn/RMSProp/epsilon"
  input: "adanet/iteration_1/subnetwork_t1_1_layer_dnn/gradients/adanet/iteration_1/subnetwork_t1_1_layer_dnn/dense/BiasAdd_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_1/subnetwork_t1_1_layer_dnn/dense/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "adanet/iteration_1/subnetwork_t1_1_layer_dnn/RMSProp/update_adanet/iteration_1/subnetwork_t1_1_layer_dnn/dense_1/kernel/ApplyRMSProp"
  op: "ApplyRMSProp"
  input: "adanet/iteration_1/subnetwork_t1_1_layer_dnn/dense_1/kernel"
  input: "adanet/iteration_1/subnetwork_t1_1_layer_dnn/adanet/iteration_1/subnetwork_t1_1_layer_dnn/dense_1/kernel/RMSProp"
  input: "adanet/iteration_1/subnetwork_t1_1_layer_dnn/adanet/iteration_1/subnetwork_t1_1_layer_dnn/dense_1/kernel/RMSProp_1"
  input: "adanet/iteration_1/subnetwork_t1_1_layer_dnn/RMSProp/learning_rate"
  input: "adanet/iteration_1/subnetwork_t1_1_layer_dnn/RMSProp/decay"
  input: "adanet/iteration_1/subnetwork_t1_1_layer_dnn/RMSProp/momentum"
  input: "adanet/iteration_1/subnetwork_t1_1_layer_dnn/RMSProp/epsilon"
  input: "adanet/iteration_1/subnetwork_t1_1_layer_dnn/gradients/adanet/iteration_1/subnetwork_t1_1_layer_dnn/dense_1/MatMul_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_1/subnetwork_t1_1_layer_dnn/dense_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "adanet/iteration_1/subnetwork_t1_1_layer_dnn/RMSProp/update_adanet/iteration_1/subnetwork_t1_1_layer_dnn/dense_1/bias/ApplyRMSProp"
  op: "ApplyRMSProp"
  input: "adanet/iteration_1/subnetwork_t1_1_layer_dnn/dense_1/bias"
  input: "adanet/iteration_1/subnetwork_t1_1_layer_dnn/adanet/iteration_1/subnetwork_t1_1_layer_dnn/dense_1/bias/RMSProp"
  input: "adanet/iteration_1/subnetwork_t1_1_layer_dnn/adanet/iteration_1/subnetwork_t1_1_layer_dnn/dense_1/bias/RMSProp_1"
  input: "adanet/iteration_1/subnetwork_t1_1_layer_dnn/RMSProp/learning_rate"
  input: "adanet/iteration_1/subnetwork_t1_1_layer_dnn/RMSProp/decay"
  input: "adanet/iteration_1/subnetwork_t1_1_layer_dnn/RMSProp/momentum"
  input: "adanet/iteration_1/subnetwork_t1_1_layer_dnn/RMSProp/epsilon"
  input: "adanet/iteration_1/subnetwork_t1_1_layer_dnn/gradients/adanet/iteration_1/subnetwork_t1_1_layer_dnn/dense_1/BiasAdd_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_1/subnetwork_t1_1_layer_dnn/dense_1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "adanet/iteration_1/subnetwork_t1_1_layer_dnn/RMSProp"
  op: "NoOp"
  input: "^adanet/iteration_1/subnetwork_t1_1_layer_dnn/RMSProp/update_adanet/iteration_1/subnetwork_t1_1_layer_dnn/dense/bias/ApplyRMSProp"
  input: "^adanet/iteration_1/subnetwork_t1_1_layer_dnn/RMSProp/update_adanet/iteration_1/subnetwork_t1_1_layer_dnn/dense/kernel/ApplyRMSProp"
  input: "^adanet/iteration_1/subnetwork_t1_1_layer_dnn/RMSProp/update_adanet/iteration_1/subnetwork_t1_1_layer_dnn/dense_1/bias/ApplyRMSProp"
  input: "^adanet/iteration_1/subnetwork_t1_1_layer_dnn/RMSProp/update_adanet/iteration_1/subnetwork_t1_1_layer_dnn/dense_1/kernel/ApplyRMSProp"
}
node {
  name: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/input_layer/images/Shape"
  op: "Shape"
  input: "IteratorGetNext"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/input_layer/images/strided_slice/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/input_layer/images/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/input_layer/images/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/input_layer/images/strided_slice"
  op: "StridedSlice"
  input: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/input_layer/images/Shape"
  input: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/input_layer/images/strided_slice/stack"
  input: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/input_layer/images/strided_slice/stack_1"
  input: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/input_layer/images/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/input_layer/images/Reshape/shape/1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 784
      }
    }
  }
}
node {
  name: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/input_layer/images/Reshape/shape"
  op: "Pack"
  input: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/input_layer/images/strided_slice"
  input: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/input_layer/images/Reshape/shape/1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/input_layer/images/Reshape"
  op: "Reshape"
  input: "IteratorGetNext"
  input: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/input_layer/images/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 784
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/input_layer/concat/concat_dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/input_layer/concat"
  op: "Identity"
  input: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/input_layer/images/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 784
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\020\003\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.08574929088354111
      }
    }
  }
}
node {
  name: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.08574929088354111
      }
    }
  }
}
node {
  name: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 784
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 3
    }
  }
  attr {
    key: "seed2"
    value {
      i: 3
    }
  }
}
node {
  name: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense/kernel/Initializer/random_uniform/max"
  input: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense/kernel/Initializer/random_uniform/RandomUniform"
  input: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 784
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense/kernel/Initializer/random_uniform"
  op: "Add"
  input: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense/kernel/Initializer/random_uniform/mul"
  input: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 784
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense/kernel"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 784
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 784
        }
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense/kernel/Assign"
  op: "Assign"
  input: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense/kernel"
  input: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense/kernel/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 784
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense/kernel/read"
  op: "Identity"
  input: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 784
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense/bias/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense/bias"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense/bias/Assign"
  op: "Assign"
  input: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense/bias"
  input: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense/bias/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense/bias/read"
  op: "Identity"
  input: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense/MatMul"
  op: "MatMul"
  input: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/input_layer/concat"
  input: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense/BiasAdd"
  op: "BiasAdd"
  input: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense/MatMul"
  input: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense/Relu"
  op: "Relu"
  input: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense_1/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: " \000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense_1/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.3061862289905548
      }
    }
  }
}
node {
  name: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense_1/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.3061862289905548
      }
    }
  }
}
node {
  name: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense_1/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense_1/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 3
    }
  }
  attr {
    key: "seed2"
    value {
      i: 3
    }
  }
}
node {
  name: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense_1/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense_1/kernel/Initializer/random_uniform/max"
  input: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense_1/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense_1/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense_1/kernel/Initializer/random_uniform/RandomUniform"
  input: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense_1/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense_1/kernel/Initializer/random_uniform"
  op: "Add"
  input: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense_1/kernel/Initializer/random_uniform/mul"
  input: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense_1/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense_1/kernel"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense_1/kernel/Assign"
  op: "Assign"
  input: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense_1/kernel"
  input: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense_1/kernel/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense_1/kernel/read"
  op: "Identity"
  input: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense_1/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense_1/bias/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense_1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense_1/bias"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense_1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense_1/bias/Assign"
  op: "Assign"
  input: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense_1/bias"
  input: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense_1/bias/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense_1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense_1/bias/read"
  op: "Identity"
  input: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense_1/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense_1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense_1/MatMul"
  op: "MatMul"
  input: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense/Relu"
  input: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense_1/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense_1/BiasAdd"
  op: "BiasAdd"
  input: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense_1/MatMul"
  input: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense_1/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense_1/Relu"
  op: "Relu"
  input: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense_1/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense_2/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense_2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: " \000\000\000\n\000\000\000"
      }
    }
  }
}
node {
  name: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense_2/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense_2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.37796446681022644
      }
    }
  }
}
node {
  name: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense_2/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense_2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.37796446681022644
      }
    }
  }
}
node {
  name: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense_2/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense_2/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense_2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 3
    }
  }
  attr {
    key: "seed2"
    value {
      i: 3
    }
  }
}
node {
  name: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense_2/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense_2/kernel/Initializer/random_uniform/max"
  input: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense_2/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense_2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense_2/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense_2/kernel/Initializer/random_uniform/RandomUniform"
  input: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense_2/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense_2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense_2/kernel/Initializer/random_uniform"
  op: "Add"
  input: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense_2/kernel/Initializer/random_uniform/mul"
  input: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense_2/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense_2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense_2/kernel"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense_2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
        dim {
          size: 10
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense_2/kernel/Assign"
  op: "Assign"
  input: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense_2/kernel"
  input: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense_2/kernel/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense_2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense_2/kernel/read"
  op: "Identity"
  input: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense_2/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense_2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense_2/bias/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense_2/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 10
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense_2/bias"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense_2/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 10
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense_2/bias/Assign"
  op: "Assign"
  input: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense_2/bias"
  input: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense_2/bias/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense_2/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense_2/bias/read"
  op: "Identity"
  input: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense_2/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense_2/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense_2/MatMul"
  op: "MatMul"
  input: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense_1/Relu"
  input: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense_2/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense_2/BiasAdd"
  op: "BiasAdd"
  input: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense_2/MatMul"
  input: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense_2/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/ToFloat/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 2
      }
    }
  }
}
node {
  name: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/ToFloat"
  op: "Cast"
  input: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/ToFloat/x"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/Sqrt"
  op: "Sqrt"
  input: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/ToFloat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "t1_2_layer_dnn/complexity/tags"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "complexity"
      }
    }
  }
}
node {
  name: "t1_2_layer_dnn/complexity"
  op: "ScalarSummary"
  input: "t1_2_layer_dnn/complexity/tags"
  input: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/Sqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "t1_2_layer_dnn/num_layers/tags"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "num_layers"
      }
    }
  }
}
node {
  name: "t1_2_layer_dnn/num_layers/values"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 2
      }
    }
  }
}
node {
  name: "t1_2_layer_dnn/num_layers"
  op: "ScalarSummary"
  input: "t1_2_layer_dnn/num_layers/tags"
  input: "t1_2_layer_dnn/num_layers/values"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 2
      }
    }
  }
}
node {
  name: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/head/logits/Shape"
  op: "Shape"
  input: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense_2/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/head/logits/assert_rank_at_least/rank"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/head/logits/assert_rank_at_least/assert_type/statically_determined_correct_type"
  op: "NoOp"
}
node {
  name: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/head/logits/assert_rank_at_least/static_checks_determined_all_ok"
  op: "NoOp"
}
node {
  name: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/head/predictions/class_ids/dimension"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/head/predictions/class_ids"
  op: "ArgMax"
  input: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense_2/BiasAdd"
  input: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/head/predictions/class_ids/dimension"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "output_type"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/head/predictions/ExpandDims/dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/head/predictions/ExpandDims"
  op: "ExpandDims"
  input: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/head/predictions/class_ids"
  input: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/head/predictions/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/head/predictions/str_classes"
  op: "AsString"
  input: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/head/predictions/ExpandDims"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "fill"
    value {
      s: ""
    }
  }
  attr {
    key: "precision"
    value {
      i: -1
    }
  }
  attr {
    key: "scientific"
    value {
      b: false
    }
  }
  attr {
    key: "shortest"
    value {
      b: false
    }
  }
  attr {
    key: "width"
    value {
      i: -1
    }
  }
}
node {
  name: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/head/predictions/probabilities"
  op: "Softmax"
  input: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense_2/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/head/labels/ExpandDims/dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/head/labels/ExpandDims"
  op: "ExpandDims"
  input: "IteratorGetNext:1"
  input: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/head/labels/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/head/labels/Shape"
  op: "Shape"
  input: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/head/labels/ExpandDims"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/head/labels/Shape_1"
  op: "Shape"
  input: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense_2/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/head/labels/assert_rank_at_least/rank"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/head/labels/assert_rank_at_least/Shape"
  op: "Shape"
  input: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/head/labels/ExpandDims"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/head/labels/assert_rank_at_least/assert_type/statically_determined_correct_type"
  op: "NoOp"
}
node {
  name: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/head/labels/assert_rank_at_least/static_checks_determined_all_ok"
  op: "NoOp"
}
node {
  name: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/head/labels/strided_slice/stack"
  op: "Const"
  input: "^adanet/iteration_1/subnetwork_t1_2_layer_dnn/head/labels/assert_rank_at_least/static_checks_determined_all_ok"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/head/labels/strided_slice/stack_1"
  op: "Const"
  input: "^adanet/iteration_1/subnetwork_t1_2_layer_dnn/head/labels/assert_rank_at_least/static_checks_determined_all_ok"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/head/labels/strided_slice/stack_2"
  op: "Const"
  input: "^adanet/iteration_1/subnetwork_t1_2_layer_dnn/head/labels/assert_rank_at_least/static_checks_determined_all_ok"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/head/labels/strided_slice"
  op: "StridedSlice"
  input: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/head/labels/Shape_1"
  input: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/head/labels/strided_slice/stack"
  input: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/head/labels/strided_slice/stack_1"
  input: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/head/labels/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/head/labels/concat/values_1"
  op: "Const"
  input: "^adanet/iteration_1/subnetwork_t1_2_layer_dnn/head/labels/assert_rank_at_least/static_checks_determined_all_ok"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/head/labels/concat/axis"
  op: "Const"
  input: "^adanet/iteration_1/subnetwork_t1_2_layer_dnn/head/labels/assert_rank_at_least/static_checks_determined_all_ok"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/head/labels/concat"
  op: "ConcatV2"
  input: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/head/labels/strided_slice"
  input: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/head/labels/concat/values_1"
  input: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/head/labels/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/head/labels/assert_equal/Equal"
  op: "Equal"
  input: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/head/labels/concat"
  input: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/head/labels/Shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/head/labels/assert_equal/Const"
  op: "Const"
  input: "^adanet/iteration_1/subnetwork_t1_2_layer_dnn/head/labels/assert_rank_at_least/static_checks_determined_all_ok"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/head/labels/assert_equal/All"
  op: "All"
  input: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/head/labels/assert_equal/Equal"
  input: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/head/labels/assert_equal/Const"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/head/labels/assert_equal/Assert/Const"
  op: "Const"
  input: "^adanet/iteration_1/subnetwork_t1_2_layer_dnn/head/labels/assert_rank_at_least/static_checks_determined_all_ok"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "expected_labels_shape: "
      }
    }
  }
}
node {
  name: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/head/labels/assert_equal/Assert/Const_1"
  op: "Const"
  input: "^adanet/iteration_1/subnetwork_t1_2_layer_dnn/head/labels/assert_rank_at_least/static_checks_determined_all_ok"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "labels_shape: "
      }
    }
  }
}
node {
  name: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/head/labels/assert_equal/Assert/Assert/data_0"
  op: "Const"
  input: "^adanet/iteration_1/subnetwork_t1_2_layer_dnn/head/labels/assert_rank_at_least/static_checks_determined_all_ok"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "expected_labels_shape: "
      }
    }
  }
}
node {
  name: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/head/labels/assert_equal/Assert/Assert/data_2"
  op: "Const"
  input: "^adanet/iteration_1/subnetwork_t1_2_layer_dnn/head/labels/assert_rank_at_least/static_checks_determined_all_ok"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "labels_shape: "
      }
    }
  }
}
node {
  name: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/head/labels/assert_equal/Assert/Assert"
  op: "Assert"
  input: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/head/labels/assert_equal/All"
  input: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/head/labels/assert_equal/Assert/Assert/data_0"
  input: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/head/labels/concat"
  input: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/head/labels/assert_equal/Assert/Assert/data_2"
  input: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/head/labels/Shape"
  attr {
    key: "T"
    value {
      list {
        type: DT_STRING
        type: DT_INT32
        type: DT_STRING
        type: DT_INT32
      }
    }
  }
  attr {
    key: "summarize"
    value {
      i: 3
    }
  }
}
node {
  name: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/head/labels"
  op: "Identity"
  input: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/head/labels/ExpandDims"
  input: "^adanet/iteration_1/subnetwork_t1_2_layer_dnn/head/labels/assert_equal/Assert/Assert"
  input: "^adanet/iteration_1/subnetwork_t1_2_layer_dnn/head/labels/assert_rank_at_least/static_checks_determined_all_ok"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/head/assert_range/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 9
      }
    }
  }
}
node {
  name: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/head/assert_range/assert_less_equal/LessEqual"
  op: "LessEqual"
  input: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/head/labels"
  input: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/head/assert_range/Const"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/head/assert_range/assert_less_equal/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/head/assert_range/assert_less_equal/All"
  op: "All"
  input: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/head/assert_range/assert_less_equal/LessEqual"
  input: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/head/assert_range/assert_less_equal/Const"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/head/assert_range/assert_less_equal/Assert/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "Labels must <= n_classes - 1"
      }
    }
  }
}
node {
  name: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/head/assert_range/assert_less_equal/Assert/Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "Condition x <= y did not hold element-wise:x (adanet/iteration_1/subnetwork_t1_2_layer_dnn/head/labels:0) = "
      }
    }
  }
}
node {
  name: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/head/assert_range/assert_less_equal/Assert/Const_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "y (adanet/iteration_1/subnetwork_t1_2_layer_dnn/head/assert_range/Const:0) = "
      }
    }
  }
}
node {
  name: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/head/assert_range/assert_less_equal/Assert/Assert/data_0"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "Labels must <= n_classes - 1"
      }
    }
  }
}
node {
  name: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/head/assert_range/assert_less_equal/Assert/Assert/data_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "Condition x <= y did not hold element-wise:x (adanet/iteration_1/subnetwork_t1_2_layer_dnn/head/labels:0) = "
      }
    }
  }
}
node {
  name: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/head/assert_range/assert_less_equal/Assert/Assert/data_3"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "y (adanet/iteration_1/subnetwork_t1_2_layer_dnn/head/assert_range/Const:0) = "
      }
    }
  }
}
node {
  name: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/head/assert_range/assert_less_equal/Assert/Assert"
  op: "Assert"
  input: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/head/assert_range/assert_less_equal/All"
  input: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/head/assert_range/assert_less_equal/Assert/Assert/data_0"
  input: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/head/assert_range/assert_less_equal/Assert/Assert/data_1"
  input: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/head/labels"
  input: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/head/assert_range/assert_less_equal/Assert/Assert/data_3"
  input: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/head/assert_range/Const"
  attr {
    key: "T"
    value {
      list {
        type: DT_STRING
        type: DT_STRING
        type: DT_INT32
        type: DT_STRING
        type: DT_INT32
      }
    }
  }
  attr {
    key: "summarize"
    value {
      i: 3
    }
  }
}
node {
  name: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/head/assert_range/assert_non_negative/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/head/assert_range/assert_non_negative/assert_less_equal/LessEqual"
  op: "LessEqual"
  input: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/head/assert_range/assert_non_negative/Const"
  input: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/head/labels"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/head/assert_range/assert_non_negative/assert_less_equal/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/head/assert_range/assert_non_negative/assert_less_equal/All"
  op: "All"
  input: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/head/assert_range/assert_non_negative/assert_less_equal/LessEqual"
  input: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/head/assert_range/assert_non_negative/assert_less_equal/Const"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/head/assert_range/assert_non_negative/assert_less_equal/Assert/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "Labels must >= 0"
      }
    }
  }
}
node {
  name: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/head/assert_range/assert_non_negative/assert_less_equal/Assert/Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "Condition x >= 0 did not hold element-wise:"
      }
    }
  }
}
node {
  name: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/head/assert_range/assert_non_negative/assert_less_equal/Assert/Const_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "x (adanet/iteration_1/subnetwork_t1_2_layer_dnn/head/labels:0) = "
      }
    }
  }
}
node {
  name: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/head/assert_range/assert_non_negative/assert_less_equal/Assert/Assert/data_0"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "Labels must >= 0"
      }
    }
  }
}
node {
  name: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/head/assert_range/assert_non_negative/assert_less_equal/Assert/Assert/data_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "Condition x >= 0 did not hold element-wise:"
      }
    }
  }
}
node {
  name: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/head/assert_range/assert_non_negative/assert_less_equal/Assert/Assert/data_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "x (adanet/iteration_1/subnetwork_t1_2_layer_dnn/head/labels:0) = "
      }
    }
  }
}
node {
  name: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/head/assert_range/assert_non_negative/assert_less_equal/Assert/Assert"
  op: "Assert"
  input: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/head/assert_range/assert_non_negative/assert_less_equal/All"
  input: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/head/assert_range/assert_non_negative/assert_less_equal/Assert/Assert/data_0"
  input: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/head/assert_range/assert_non_negative/assert_less_equal/Assert/Assert/data_1"
  input: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/head/assert_range/assert_non_negative/assert_less_equal/Assert/Assert/data_2"
  input: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/head/labels"
  attr {
    key: "T"
    value {
      list {
        type: DT_STRING
        type: DT_STRING
        type: DT_STRING
        type: DT_INT32
      }
    }
  }
  attr {
    key: "summarize"
    value {
      i: 3
    }
  }
}
node {
  name: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/head/assert_range/Identity"
  op: "Identity"
  input: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/head/labels"
  input: "^adanet/iteration_1/subnetwork_t1_2_layer_dnn/head/assert_range/assert_less_equal/Assert/Assert"
  input: "^adanet/iteration_1/subnetwork_t1_2_layer_dnn/head/assert_range/assert_non_negative/assert_less_equal/Assert/Assert"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/head/sparse_softmax_cross_entropy_loss/remove_squeezable_dimensions/Squeeze"
  op: "Squeeze"
  input: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/head/assert_range/Identity"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: -1
      }
    }
  }
}
node {
  name: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/head/sparse_softmax_cross_entropy_loss/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/head/sparse_softmax_cross_entropy_loss/xentropy/Shape"
  op: "Shape"
  input: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/head/sparse_softmax_cross_entropy_loss/remove_squeezable_dimensions/Squeeze"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/head/sparse_softmax_cross_entropy_loss/xentropy/xentropy"
  op: "SparseSoftmaxCrossEntropyWithLogits"
  input: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense_2/BiasAdd"
  input: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/head/sparse_softmax_cross_entropy_loss/remove_squeezable_dimensions/Squeeze"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tlabels"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/head/sparse_softmax_cross_entropy_loss/assert_broadcastable/weights/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/head/sparse_softmax_cross_entropy_loss/assert_broadcastable/weights/rank"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/head/sparse_softmax_cross_entropy_loss/assert_broadcastable/values/shape"
  op: "Shape"
  input: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/head/sparse_softmax_cross_entropy_loss/xentropy/xentropy"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/head/sparse_softmax_cross_entropy_loss/assert_broadcastable/values/rank"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/head/sparse_softmax_cross_entropy_loss/assert_broadcastable/static_scalar_check_success"
  op: "NoOp"
}
node {
  name: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/head/sparse_softmax_cross_entropy_loss/Mul"
  op: "Mul"
  input: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/head/sparse_softmax_cross_entropy_loss/xentropy/xentropy"
  input: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/head/sparse_softmax_cross_entropy_loss/Const"
  input: "^adanet/iteration_1/subnetwork_t1_2_layer_dnn/head/sparse_softmax_cross_entropy_loss/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/head/ExpandDims/dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/head/ExpandDims"
  op: "ExpandDims"
  input: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/head/sparse_softmax_cross_entropy_loss/Mul"
  input: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/head/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/head/weighted_loss/assert_broadcastable/weights"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/head/weighted_loss/assert_broadcastable/weights/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/head/weighted_loss/assert_broadcastable/weights/rank"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/head/weighted_loss/assert_broadcastable/values/shape"
  op: "Shape"
  input: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/head/ExpandDims"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/head/weighted_loss/assert_broadcastable/values/rank"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/head/weighted_loss/assert_broadcastable/static_scalar_check_success"
  op: "NoOp"
}
node {
  name: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/head/weighted_loss/ToFloat/x"
  op: "Const"
  input: "^adanet/iteration_1/subnetwork_t1_2_layer_dnn/head/weighted_loss/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/head/weighted_loss/Mul"
  op: "Mul"
  input: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/head/ExpandDims"
  input: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/head/weighted_loss/ToFloat/x"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/head/weighted_loss/Const"
  op: "Const"
  input: "^adanet/iteration_1/subnetwork_t1_2_layer_dnn/head/weighted_loss/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/head/weighted_loss/Sum"
  op: "Sum"
  input: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/head/weighted_loss/Mul"
  input: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/head/weighted_loss/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/head/weighted_loss/num_elements"
  op: "Size"
  input: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/head/ExpandDims"
  input: "^adanet/iteration_1/subnetwork_t1_2_layer_dnn/head/weighted_loss/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/head/weighted_loss/num_elements/Cast"
  op: "Cast"
  input: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/head/weighted_loss/num_elements"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/head/weighted_loss/Const_1"
  op: "Const"
  input: "^adanet/iteration_1/subnetwork_t1_2_layer_dnn/head/weighted_loss/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/head/weighted_loss/Sum_1"
  op: "Sum"
  input: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/head/weighted_loss/Sum"
  input: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/head/weighted_loss/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/head/weighted_loss/value"
  op: "DivNoNan"
  input: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/head/weighted_loss/Sum_1"
  input: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/head/weighted_loss/num_elements/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/head/NoOp"
  op: "NoOp"
}
node {
  name: "loss_1/tags"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "loss_1"
      }
    }
  }
}
node {
  name: "loss_1"
  op: "ScalarSummary"
  input: "loss_1/tags"
  input: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/head/weighted_loss/value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/t1_2_layer_dnn/loss/tags"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "loss"
      }
    }
  }
}
node {
  name: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/t1_2_layer_dnn/loss"
  op: "ScalarSummary"
  input: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/t1_2_layer_dnn/loss/tags"
  input: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/head/weighted_loss/value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/gradients/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/gradients/grad_ys_0"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/gradients/Fill"
  op: "Fill"
  input: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/gradients/Shape"
  input: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/gradients/grad_ys_0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/gradients/adanet/iteration_1/subnetwork_t1_2_layer_dnn/head/weighted_loss/value_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/gradients/adanet/iteration_1/subnetwork_t1_2_layer_dnn/head/weighted_loss/value_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/gradients/adanet/iteration_1/subnetwork_t1_2_layer_dnn/head/weighted_loss/value_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/gradients/adanet/iteration_1/subnetwork_t1_2_layer_dnn/head/weighted_loss/value_grad/Shape"
  input: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/gradients/adanet/iteration_1/subnetwork_t1_2_layer_dnn/head/weighted_loss/value_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/gradients/adanet/iteration_1/subnetwork_t1_2_layer_dnn/head/weighted_loss/value_grad/div_no_nan"
  op: "DivNoNan"
  input: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/gradients/Fill"
  input: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/head/weighted_loss/num_elements/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/gradients/adanet/iteration_1/subnetwork_t1_2_layer_dnn/head/weighted_loss/value_grad/Sum"
  op: "Sum"
  input: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/gradients/adanet/iteration_1/subnetwork_t1_2_layer_dnn/head/weighted_loss/value_grad/div_no_nan"
  input: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/gradients/adanet/iteration_1/subnetwork_t1_2_layer_dnn/head/weighted_loss/value_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/gradients/adanet/iteration_1/subnetwork_t1_2_layer_dnn/head/weighted_loss/value_grad/Reshape"
  op: "Reshape"
  input: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/gradients/adanet/iteration_1/subnetwork_t1_2_layer_dnn/head/weighted_loss/value_grad/Sum"
  input: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/gradients/adanet/iteration_1/subnetwork_t1_2_layer_dnn/head/weighted_loss/value_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/gradients/adanet/iteration_1/subnetwork_t1_2_layer_dnn/head/weighted_loss/value_grad/Neg"
  op: "Neg"
  input: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/head/weighted_loss/Sum_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/gradients/adanet/iteration_1/subnetwork_t1_2_layer_dnn/head/weighted_loss/value_grad/div_no_nan_1"
  op: "DivNoNan"
  input: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/gradients/adanet/iteration_1/subnetwork_t1_2_layer_dnn/head/weighted_loss/value_grad/Neg"
  input: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/head/weighted_loss/num_elements/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/gradients/adanet/iteration_1/subnetwork_t1_2_layer_dnn/head/weighted_loss/value_grad/div_no_nan_2"
  op: "DivNoNan"
  input: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/gradients/adanet/iteration_1/subnetwork_t1_2_layer_dnn/head/weighted_loss/value_grad/div_no_nan_1"
  input: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/head/weighted_loss/num_elements/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/gradients/adanet/iteration_1/subnetwork_t1_2_layer_dnn/head/weighted_loss/value_grad/mul"
  op: "Mul"
  input: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/gradients/Fill"
  input: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/gradients/adanet/iteration_1/subnetwork_t1_2_layer_dnn/head/weighted_loss/value_grad/div_no_nan_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/gradients/adanet/iteration_1/subnetwork_t1_2_layer_dnn/head/weighted_loss/value_grad/Sum_1"
  op: "Sum"
  input: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/gradients/adanet/iteration_1/subnetwork_t1_2_layer_dnn/head/weighted_loss/value_grad/mul"
  input: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/gradients/adanet/iteration_1/subnetwork_t1_2_layer_dnn/head/weighted_loss/value_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/gradients/adanet/iteration_1/subnetwork_t1_2_layer_dnn/head/weighted_loss/value_grad/Reshape_1"
  op: "Reshape"
  input: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/gradients/adanet/iteration_1/subnetwork_t1_2_layer_dnn/head/weighted_loss/value_grad/Sum_1"
  input: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/gradients/adanet/iteration_1/subnetwork_t1_2_layer_dnn/head/weighted_loss/value_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/gradients/adanet/iteration_1/subnetwork_t1_2_layer_dnn/head/weighted_loss/value_grad/tuple/group_deps"
  op: "NoOp"
  input: "^adanet/iteration_1/subnetwork_t1_2_layer_dnn/gradients/adanet/iteration_1/subnetwork_t1_2_layer_dnn/head/weighted_loss/value_grad/Reshape"
  input: "^adanet/iteration_1/subnetwork_t1_2_layer_dnn/gradients/adanet/iteration_1/subnetwork_t1_2_layer_dnn/head/weighted_loss/value_grad/Reshape_1"
}
node {
  name: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/gradients/adanet/iteration_1/subnetwork_t1_2_layer_dnn/head/weighted_loss/value_grad/tuple/control_dependency"
  op: "Identity"
  input: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/gradients/adanet/iteration_1/subnetwork_t1_2_layer_dnn/head/weighted_loss/value_grad/Reshape"
  input: "^adanet/iteration_1/subnetwork_t1_2_layer_dnn/gradients/adanet/iteration_1/subnetwork_t1_2_layer_dnn/head/weighted_loss/value_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_1/subnetwork_t1_2_layer_dnn/gradients/adanet/iteration_1/subnetwork_t1_2_layer_dnn/head/weighted_loss/value_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/gradients/adanet/iteration_1/subnetwork_t1_2_layer_dnn/head/weighted_loss/value_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/gradients/adanet/iteration_1/subnetwork_t1_2_layer_dnn/head/weighted_loss/value_grad/Reshape_1"
  input: "^adanet/iteration_1/subnetwork_t1_2_layer_dnn/gradients/adanet/iteration_1/subnetwork_t1_2_layer_dnn/head/weighted_loss/value_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_1/subnetwork_t1_2_layer_dnn/gradients/adanet/iteration_1/subnetwork_t1_2_layer_dnn/head/weighted_loss/value_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/gradients/adanet/iteration_1/subnetwork_t1_2_layer_dnn/head/weighted_loss/Sum_1_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/gradients/adanet/iteration_1/subnetwork_t1_2_layer_dnn/head/weighted_loss/Sum_1_grad/Reshape"
  op: "Reshape"
  input: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/gradients/adanet/iteration_1/subnetwork_t1_2_layer_dnn/head/weighted_loss/value_grad/tuple/control_dependency"
  input: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/gradients/adanet/iteration_1/subnetwork_t1_2_layer_dnn/head/weighted_loss/Sum_1_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/gradients/adanet/iteration_1/subnetwork_t1_2_layer_dnn/head/weighted_loss/Sum_1_grad/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/gradients/adanet/iteration_1/subnetwork_t1_2_layer_dnn/head/weighted_loss/Sum_1_grad/Tile"
  op: "Tile"
  input: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/gradients/adanet/iteration_1/subnetwork_t1_2_layer_dnn/head/weighted_loss/Sum_1_grad/Reshape"
  input: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/gradients/adanet/iteration_1/subnetwork_t1_2_layer_dnn/head/weighted_loss/Sum_1_grad/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/gradients/adanet/iteration_1/subnetwork_t1_2_layer_dnn/head/weighted_loss/Sum_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/gradients/adanet/iteration_1/subnetwork_t1_2_layer_dnn/head/weighted_loss/Sum_grad/Reshape"
  op: "Reshape"
  input: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/gradients/adanet/iteration_1/subnetwork_t1_2_layer_dnn/head/weighted_loss/Sum_1_grad/Tile"
  input: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/gradients/adanet/iteration_1/subnetwork_t1_2_layer_dnn/head/weighted_loss/Sum_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/gradients/adanet/iteration_1/subnetwork_t1_2_layer_dnn/head/weighted_loss/Sum_grad/Shape"
  op: "Shape"
  input: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/head/weighted_loss/Mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/gradients/adanet/iteration_1/subnetwork_t1_2_layer_dnn/head/weighted_loss/Sum_grad/Tile"
  op: "Tile"
  input: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/gradients/adanet/iteration_1/subnetwork_t1_2_layer_dnn/head/weighted_loss/Sum_grad/Reshape"
  input: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/gradients/adanet/iteration_1/subnetwork_t1_2_layer_dnn/head/weighted_loss/Sum_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/gradients/adanet/iteration_1/subnetwork_t1_2_layer_dnn/head/weighted_loss/Mul_grad/Shape"
  op: "Shape"
  input: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/head/ExpandDims"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/gradients/adanet/iteration_1/subnetwork_t1_2_layer_dnn/head/weighted_loss/Mul_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/gradients/adanet/iteration_1/subnetwork_t1_2_layer_dnn/head/weighted_loss/Mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/gradients/adanet/iteration_1/subnetwork_t1_2_layer_dnn/head/weighted_loss/Mul_grad/Shape"
  input: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/gradients/adanet/iteration_1/subnetwork_t1_2_layer_dnn/head/weighted_loss/Mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/gradients/adanet/iteration_1/subnetwork_t1_2_layer_dnn/head/weighted_loss/Mul_grad/Mul"
  op: "Mul"
  input: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/gradients/adanet/iteration_1/subnetwork_t1_2_layer_dnn/head/weighted_loss/Sum_grad/Tile"
  input: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/head/weighted_loss/ToFloat/x"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/gradients/adanet/iteration_1/subnetwork_t1_2_layer_dnn/head/weighted_loss/Mul_grad/Sum"
  op: "Sum"
  input: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/gradients/adanet/iteration_1/subnetwork_t1_2_layer_dnn/head/weighted_loss/Mul_grad/Mul"
  input: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/gradients/adanet/iteration_1/subnetwork_t1_2_layer_dnn/head/weighted_loss/Mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/gradients/adanet/iteration_1/subnetwork_t1_2_layer_dnn/head/weighted_loss/Mul_grad/Reshape"
  op: "Reshape"
  input: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/gradients/adanet/iteration_1/subnetwork_t1_2_layer_dnn/head/weighted_loss/Mul_grad/Sum"
  input: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/gradients/adanet/iteration_1/subnetwork_t1_2_layer_dnn/head/weighted_loss/Mul_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/gradients/adanet/iteration_1/subnetwork_t1_2_layer_dnn/head/weighted_loss/Mul_grad/Mul_1"
  op: "Mul"
  input: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/head/ExpandDims"
  input: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/gradients/adanet/iteration_1/subnetwork_t1_2_layer_dnn/head/weighted_loss/Sum_grad/Tile"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/gradients/adanet/iteration_1/subnetwork_t1_2_layer_dnn/head/weighted_loss/Mul_grad/Sum_1"
  op: "Sum"
  input: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/gradients/adanet/iteration_1/subnetwork_t1_2_layer_dnn/head/weighted_loss/Mul_grad/Mul_1"
  input: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/gradients/adanet/iteration_1/subnetwork_t1_2_layer_dnn/head/weighted_loss/Mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/gradients/adanet/iteration_1/subnetwork_t1_2_layer_dnn/head/weighted_loss/Mul_grad/Reshape_1"
  op: "Reshape"
  input: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/gradients/adanet/iteration_1/subnetwork_t1_2_layer_dnn/head/weighted_loss/Mul_grad/Sum_1"
  input: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/gradients/adanet/iteration_1/subnetwork_t1_2_layer_dnn/head/weighted_loss/Mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/gradients/adanet/iteration_1/subnetwork_t1_2_layer_dnn/head/weighted_loss/Mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^adanet/iteration_1/subnetwork_t1_2_layer_dnn/gradients/adanet/iteration_1/subnetwork_t1_2_layer_dnn/head/weighted_loss/Mul_grad/Reshape"
  input: "^adanet/iteration_1/subnetwork_t1_2_layer_dnn/gradients/adanet/iteration_1/subnetwork_t1_2_layer_dnn/head/weighted_loss/Mul_grad/Reshape_1"
}
node {
  name: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/gradients/adanet/iteration_1/subnetwork_t1_2_layer_dnn/head/weighted_loss/Mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/gradients/adanet/iteration_1/subnetwork_t1_2_layer_dnn/head/weighted_loss/Mul_grad/Reshape"
  input: "^adanet/iteration_1/subnetwork_t1_2_layer_dnn/gradients/adanet/iteration_1/subnetwork_t1_2_layer_dnn/head/weighted_loss/Mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_1/subnetwork_t1_2_layer_dnn/gradients/adanet/iteration_1/subnetwork_t1_2_layer_dnn/head/weighted_loss/Mul_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/gradients/adanet/iteration_1/subnetwork_t1_2_layer_dnn/head/weighted_loss/Mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/gradients/adanet/iteration_1/subnetwork_t1_2_layer_dnn/head/weighted_loss/Mul_grad/Reshape_1"
  input: "^adanet/iteration_1/subnetwork_t1_2_layer_dnn/gradients/adanet/iteration_1/subnetwork_t1_2_layer_dnn/head/weighted_loss/Mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_1/subnetwork_t1_2_layer_dnn/gradients/adanet/iteration_1/subnetwork_t1_2_layer_dnn/head/weighted_loss/Mul_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/gradients/adanet/iteration_1/subnetwork_t1_2_layer_dnn/head/ExpandDims_grad/Shape"
  op: "Shape"
  input: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/head/sparse_softmax_cross_entropy_loss/Mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/gradients/adanet/iteration_1/subnetwork_t1_2_layer_dnn/head/ExpandDims_grad/Reshape"
  op: "Reshape"
  input: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/gradients/adanet/iteration_1/subnetwork_t1_2_layer_dnn/head/weighted_loss/Mul_grad/tuple/control_dependency"
  input: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/gradients/adanet/iteration_1/subnetwork_t1_2_layer_dnn/head/ExpandDims_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/gradients/adanet/iteration_1/subnetwork_t1_2_layer_dnn/head/sparse_softmax_cross_entropy_loss/Mul_grad/Shape"
  op: "Shape"
  input: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/head/sparse_softmax_cross_entropy_loss/xentropy/xentropy"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/gradients/adanet/iteration_1/subnetwork_t1_2_layer_dnn/head/sparse_softmax_cross_entropy_loss/Mul_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/gradients/adanet/iteration_1/subnetwork_t1_2_layer_dnn/head/sparse_softmax_cross_entropy_loss/Mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/gradients/adanet/iteration_1/subnetwork_t1_2_layer_dnn/head/sparse_softmax_cross_entropy_loss/Mul_grad/Shape"
  input: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/gradients/adanet/iteration_1/subnetwork_t1_2_layer_dnn/head/sparse_softmax_cross_entropy_loss/Mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/gradients/adanet/iteration_1/subnetwork_t1_2_layer_dnn/head/sparse_softmax_cross_entropy_loss/Mul_grad/Mul"
  op: "Mul"
  input: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/gradients/adanet/iteration_1/subnetwork_t1_2_layer_dnn/head/ExpandDims_grad/Reshape"
  input: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/head/sparse_softmax_cross_entropy_loss/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/gradients/adanet/iteration_1/subnetwork_t1_2_layer_dnn/head/sparse_softmax_cross_entropy_loss/Mul_grad/Sum"
  op: "Sum"
  input: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/gradients/adanet/iteration_1/subnetwork_t1_2_layer_dnn/head/sparse_softmax_cross_entropy_loss/Mul_grad/Mul"
  input: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/gradients/adanet/iteration_1/subnetwork_t1_2_layer_dnn/head/sparse_softmax_cross_entropy_loss/Mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/gradients/adanet/iteration_1/subnetwork_t1_2_layer_dnn/head/sparse_softmax_cross_entropy_loss/Mul_grad/Reshape"
  op: "Reshape"
  input: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/gradients/adanet/iteration_1/subnetwork_t1_2_layer_dnn/head/sparse_softmax_cross_entropy_loss/Mul_grad/Sum"
  input: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/gradients/adanet/iteration_1/subnetwork_t1_2_layer_dnn/head/sparse_softmax_cross_entropy_loss/Mul_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/gradients/adanet/iteration_1/subnetwork_t1_2_layer_dnn/head/sparse_softmax_cross_entropy_loss/Mul_grad/Mul_1"
  op: "Mul"
  input: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/head/sparse_softmax_cross_entropy_loss/xentropy/xentropy"
  input: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/gradients/adanet/iteration_1/subnetwork_t1_2_layer_dnn/head/ExpandDims_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/gradients/adanet/iteration_1/subnetwork_t1_2_layer_dnn/head/sparse_softmax_cross_entropy_loss/Mul_grad/Sum_1"
  op: "Sum"
  input: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/gradients/adanet/iteration_1/subnetwork_t1_2_layer_dnn/head/sparse_softmax_cross_entropy_loss/Mul_grad/Mul_1"
  input: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/gradients/adanet/iteration_1/subnetwork_t1_2_layer_dnn/head/sparse_softmax_cross_entropy_loss/Mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/gradients/adanet/iteration_1/subnetwork_t1_2_layer_dnn/head/sparse_softmax_cross_entropy_loss/Mul_grad/Reshape_1"
  op: "Reshape"
  input: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/gradients/adanet/iteration_1/subnetwork_t1_2_layer_dnn/head/sparse_softmax_cross_entropy_loss/Mul_grad/Sum_1"
  input: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/gradients/adanet/iteration_1/subnetwork_t1_2_layer_dnn/head/sparse_softmax_cross_entropy_loss/Mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/gradients/adanet/iteration_1/subnetwork_t1_2_layer_dnn/head/sparse_softmax_cross_entropy_loss/Mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^adanet/iteration_1/subnetwork_t1_2_layer_dnn/gradients/adanet/iteration_1/subnetwork_t1_2_layer_dnn/head/sparse_softmax_cross_entropy_loss/Mul_grad/Reshape"
  input: "^adanet/iteration_1/subnetwork_t1_2_layer_dnn/gradients/adanet/iteration_1/subnetwork_t1_2_layer_dnn/head/sparse_softmax_cross_entropy_loss/Mul_grad/Reshape_1"
}
node {
  name: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/gradients/adanet/iteration_1/subnetwork_t1_2_layer_dnn/head/sparse_softmax_cross_entropy_loss/Mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/gradients/adanet/iteration_1/subnetwork_t1_2_layer_dnn/head/sparse_softmax_cross_entropy_loss/Mul_grad/Reshape"
  input: "^adanet/iteration_1/subnetwork_t1_2_layer_dnn/gradients/adanet/iteration_1/subnetwork_t1_2_layer_dnn/head/sparse_softmax_cross_entropy_loss/Mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_1/subnetwork_t1_2_layer_dnn/gradients/adanet/iteration_1/subnetwork_t1_2_layer_dnn/head/sparse_softmax_cross_entropy_loss/Mul_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/gradients/adanet/iteration_1/subnetwork_t1_2_layer_dnn/head/sparse_softmax_cross_entropy_loss/Mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/gradients/adanet/iteration_1/subnetwork_t1_2_layer_dnn/head/sparse_softmax_cross_entropy_loss/Mul_grad/Reshape_1"
  input: "^adanet/iteration_1/subnetwork_t1_2_layer_dnn/gradients/adanet/iteration_1/subnetwork_t1_2_layer_dnn/head/sparse_softmax_cross_entropy_loss/Mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_1/subnetwork_t1_2_layer_dnn/gradients/adanet/iteration_1/subnetwork_t1_2_layer_dnn/head/sparse_softmax_cross_entropy_loss/Mul_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/gradients/zeros_like"
  op: "ZerosLike"
  input: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/head/sparse_softmax_cross_entropy_loss/xentropy/xentropy:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/gradients/adanet/iteration_1/subnetwork_t1_2_layer_dnn/head/sparse_softmax_cross_entropy_loss/xentropy/xentropy_grad/PreventGradient"
  op: "PreventGradient"
  input: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/head/sparse_softmax_cross_entropy_loss/xentropy/xentropy:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
  attr {
    key: "message"
    value {
      s: "Currently there is no way to take the second derivative of sparse_softmax_cross_entropy_with_logits due to the fused implementation\'s interaction with tf.gradients()"
    }
  }
}
node {
  name: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/gradients/adanet/iteration_1/subnetwork_t1_2_layer_dnn/head/sparse_softmax_cross_entropy_loss/xentropy/xentropy_grad/ExpandDims/dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/gradients/adanet/iteration_1/subnetwork_t1_2_layer_dnn/head/sparse_softmax_cross_entropy_loss/xentropy/xentropy_grad/ExpandDims"
  op: "ExpandDims"
  input: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/gradients/adanet/iteration_1/subnetwork_t1_2_layer_dnn/head/sparse_softmax_cross_entropy_loss/Mul_grad/tuple/control_dependency"
  input: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/gradients/adanet/iteration_1/subnetwork_t1_2_layer_dnn/head/sparse_softmax_cross_entropy_loss/xentropy/xentropy_grad/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/gradients/adanet/iteration_1/subnetwork_t1_2_layer_dnn/head/sparse_softmax_cross_entropy_loss/xentropy/xentropy_grad/mul"
  op: "Mul"
  input: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/gradients/adanet/iteration_1/subnetwork_t1_2_layer_dnn/head/sparse_softmax_cross_entropy_loss/xentropy/xentropy_grad/ExpandDims"
  input: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/gradients/adanet/iteration_1/subnetwork_t1_2_layer_dnn/head/sparse_softmax_cross_entropy_loss/xentropy/xentropy_grad/PreventGradient"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/gradients/adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense_2/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/gradients/adanet/iteration_1/subnetwork_t1_2_layer_dnn/head/sparse_softmax_cross_entropy_loss/xentropy/xentropy_grad/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/gradients/adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense_2/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^adanet/iteration_1/subnetwork_t1_2_layer_dnn/gradients/adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense_2/BiasAdd_grad/BiasAddGrad"
  input: "^adanet/iteration_1/subnetwork_t1_2_layer_dnn/gradients/adanet/iteration_1/subnetwork_t1_2_layer_dnn/head/sparse_softmax_cross_entropy_loss/xentropy/xentropy_grad/mul"
}
node {
  name: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/gradients/adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense_2/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/gradients/adanet/iteration_1/subnetwork_t1_2_layer_dnn/head/sparse_softmax_cross_entropy_loss/xentropy/xentropy_grad/mul"
  input: "^adanet/iteration_1/subnetwork_t1_2_layer_dnn/gradients/adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense_2/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_1/subnetwork_t1_2_layer_dnn/gradients/adanet/iteration_1/subnetwork_t1_2_layer_dnn/head/sparse_softmax_cross_entropy_loss/xentropy/xentropy_grad/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/gradients/adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense_2/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/gradients/adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense_2/BiasAdd_grad/BiasAddGrad"
  input: "^adanet/iteration_1/subnetwork_t1_2_layer_dnn/gradients/adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense_2/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_1/subnetwork_t1_2_layer_dnn/gradients/adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense_2/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/gradients/adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense_2/MatMul_grad/MatMul"
  op: "MatMul"
  input: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/gradients/adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense_2/BiasAdd_grad/tuple/control_dependency"
  input: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense_2/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/gradients/adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense_2/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense_1/Relu"
  input: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/gradients/adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense_2/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/gradients/adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense_2/MatMul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^adanet/iteration_1/subnetwork_t1_2_layer_dnn/gradients/adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense_2/MatMul_grad/MatMul"
  input: "^adanet/iteration_1/subnetwork_t1_2_layer_dnn/gradients/adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense_2/MatMul_grad/MatMul_1"
}
node {
  name: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/gradients/adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense_2/MatMul_grad/tuple/control_dependency"
  op: "Identity"
  input: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/gradients/adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense_2/MatMul_grad/MatMul"
  input: "^adanet/iteration_1/subnetwork_t1_2_layer_dnn/gradients/adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense_2/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_1/subnetwork_t1_2_layer_dnn/gradients/adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense_2/MatMul_grad/MatMul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/gradients/adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense_2/MatMul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/gradients/adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense_2/MatMul_grad/MatMul_1"
  input: "^adanet/iteration_1/subnetwork_t1_2_layer_dnn/gradients/adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense_2/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_1/subnetwork_t1_2_layer_dnn/gradients/adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense_2/MatMul_grad/MatMul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/gradients/adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense_1/Relu_grad/ReluGrad"
  op: "ReluGrad"
  input: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/gradients/adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense_2/MatMul_grad/tuple/control_dependency"
  input: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense_1/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/gradients/adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense_1/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/gradients/adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense_1/Relu_grad/ReluGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/gradients/adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense_1/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^adanet/iteration_1/subnetwork_t1_2_layer_dnn/gradients/adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense_1/BiasAdd_grad/BiasAddGrad"
  input: "^adanet/iteration_1/subnetwork_t1_2_layer_dnn/gradients/adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense_1/Relu_grad/ReluGrad"
}
node {
  name: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/gradients/adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense_1/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/gradients/adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense_1/Relu_grad/ReluGrad"
  input: "^adanet/iteration_1/subnetwork_t1_2_layer_dnn/gradients/adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense_1/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_1/subnetwork_t1_2_layer_dnn/gradients/adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense_1/Relu_grad/ReluGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/gradients/adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense_1/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/gradients/adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense_1/BiasAdd_grad/BiasAddGrad"
  input: "^adanet/iteration_1/subnetwork_t1_2_layer_dnn/gradients/adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense_1/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_1/subnetwork_t1_2_layer_dnn/gradients/adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense_1/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/gradients/adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense_1/MatMul_grad/MatMul"
  op: "MatMul"
  input: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/gradients/adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense_1/BiasAdd_grad/tuple/control_dependency"
  input: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense_1/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/gradients/adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense_1/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense/Relu"
  input: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/gradients/adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense_1/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/gradients/adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense_1/MatMul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^adanet/iteration_1/subnetwork_t1_2_layer_dnn/gradients/adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense_1/MatMul_grad/MatMul"
  input: "^adanet/iteration_1/subnetwork_t1_2_layer_dnn/gradients/adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense_1/MatMul_grad/MatMul_1"
}
node {
  name: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/gradients/adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense_1/MatMul_grad/tuple/control_dependency"
  op: "Identity"
  input: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/gradients/adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense_1/MatMul_grad/MatMul"
  input: "^adanet/iteration_1/subnetwork_t1_2_layer_dnn/gradients/adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense_1/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_1/subnetwork_t1_2_layer_dnn/gradients/adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense_1/MatMul_grad/MatMul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/gradients/adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense_1/MatMul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/gradients/adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense_1/MatMul_grad/MatMul_1"
  input: "^adanet/iteration_1/subnetwork_t1_2_layer_dnn/gradients/adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense_1/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_1/subnetwork_t1_2_layer_dnn/gradients/adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense_1/MatMul_grad/MatMul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/gradients/adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense/Relu_grad/ReluGrad"
  op: "ReluGrad"
  input: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/gradients/adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense_1/MatMul_grad/tuple/control_dependency"
  input: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/gradients/adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/gradients/adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense/Relu_grad/ReluGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/gradients/adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^adanet/iteration_1/subnetwork_t1_2_layer_dnn/gradients/adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense/BiasAdd_grad/BiasAddGrad"
  input: "^adanet/iteration_1/subnetwork_t1_2_layer_dnn/gradients/adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense/Relu_grad/ReluGrad"
}
node {
  name: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/gradients/adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/gradients/adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense/Relu_grad/ReluGrad"
  input: "^adanet/iteration_1/subnetwork_t1_2_layer_dnn/gradients/adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_1/subnetwork_t1_2_layer_dnn/gradients/adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense/Relu_grad/ReluGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/gradients/adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/gradients/adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense/BiasAdd_grad/BiasAddGrad"
  input: "^adanet/iteration_1/subnetwork_t1_2_layer_dnn/gradients/adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_1/subnetwork_t1_2_layer_dnn/gradients/adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/gradients/adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense/MatMul_grad/MatMul"
  op: "MatMul"
  input: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/gradients/adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense/BiasAdd_grad/tuple/control_dependency"
  input: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 784
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/gradients/adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/input_layer/concat"
  input: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/gradients/adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 784
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/gradients/adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense/MatMul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^adanet/iteration_1/subnetwork_t1_2_layer_dnn/gradients/adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense/MatMul_grad/MatMul"
  input: "^adanet/iteration_1/subnetwork_t1_2_layer_dnn/gradients/adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense/MatMul_grad/MatMul_1"
}
node {
  name: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/gradients/adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense/MatMul_grad/tuple/control_dependency"
  op: "Identity"
  input: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/gradients/adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense/MatMul_grad/MatMul"
  input: "^adanet/iteration_1/subnetwork_t1_2_layer_dnn/gradients/adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_1/subnetwork_t1_2_layer_dnn/gradients/adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense/MatMul_grad/MatMul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 784
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/gradients/adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense/MatMul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/gradients/adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense/MatMul_grad/MatMul_1"
  input: "^adanet/iteration_1/subnetwork_t1_2_layer_dnn/gradients/adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_1/subnetwork_t1_2_layer_dnn/gradients/adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense/MatMul_grad/MatMul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 784
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense/kernel/RMSProp/Initializer/ones/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\020\003\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense/kernel/RMSProp/Initializer/ones/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense/kernel/RMSProp/Initializer/ones"
  op: "Fill"
  input: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense/kernel/RMSProp/Initializer/ones/shape_as_tensor"
  input: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense/kernel/RMSProp/Initializer/ones/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 784
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense/kernel/RMSProp"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 784
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 784
        }
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense/kernel/RMSProp/Assign"
  op: "Assign"
  input: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense/kernel/RMSProp"
  input: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense/kernel/RMSProp/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 784
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense/kernel/RMSProp/read"
  op: "Identity"
  input: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense/kernel/RMSProp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 784
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense/kernel/RMSProp_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\020\003\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense/kernel/RMSProp_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense/kernel/RMSProp_1/Initializer/zeros"
  op: "Fill"
  input: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense/kernel/RMSProp_1/Initializer/zeros/shape_as_tensor"
  input: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense/kernel/RMSProp_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 784
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense/kernel/RMSProp_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 784
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 784
        }
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense/kernel/RMSProp_1/Assign"
  op: "Assign"
  input: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense/kernel/RMSProp_1"
  input: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense/kernel/RMSProp_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 784
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense/kernel/RMSProp_1/read"
  op: "Identity"
  input: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense/kernel/RMSProp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 784
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense/bias/RMSProp/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense/bias/RMSProp"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense/bias/RMSProp/Assign"
  op: "Assign"
  input: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense/bias/RMSProp"
  input: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense/bias/RMSProp/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense/bias/RMSProp/read"
  op: "Identity"
  input: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense/bias/RMSProp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense/bias/RMSProp_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense/bias/RMSProp_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense/bias/RMSProp_1/Assign"
  op: "Assign"
  input: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense/bias/RMSProp_1"
  input: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense/bias/RMSProp_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense/bias/RMSProp_1/read"
  op: "Identity"
  input: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense/bias/RMSProp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense_1/kernel/RMSProp/Initializer/ones/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: " \000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense_1/kernel/RMSProp/Initializer/ones/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense_1/kernel/RMSProp/Initializer/ones"
  op: "Fill"
  input: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense_1/kernel/RMSProp/Initializer/ones/shape_as_tensor"
  input: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense_1/kernel/RMSProp/Initializer/ones/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense_1/kernel/RMSProp"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense_1/kernel/RMSProp/Assign"
  op: "Assign"
  input: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense_1/kernel/RMSProp"
  input: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense_1/kernel/RMSProp/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense_1/kernel/RMSProp/read"
  op: "Identity"
  input: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense_1/kernel/RMSProp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense_1/kernel/RMSProp_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: " \000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense_1/kernel/RMSProp_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense_1/kernel/RMSProp_1/Initializer/zeros"
  op: "Fill"
  input: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense_1/kernel/RMSProp_1/Initializer/zeros/shape_as_tensor"
  input: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense_1/kernel/RMSProp_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense_1/kernel/RMSProp_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense_1/kernel/RMSProp_1/Assign"
  op: "Assign"
  input: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense_1/kernel/RMSProp_1"
  input: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense_1/kernel/RMSProp_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense_1/kernel/RMSProp_1/read"
  op: "Identity"
  input: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense_1/kernel/RMSProp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense_1/bias/RMSProp/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense_1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense_1/bias/RMSProp"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense_1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense_1/bias/RMSProp/Assign"
  op: "Assign"
  input: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense_1/bias/RMSProp"
  input: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense_1/bias/RMSProp/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense_1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense_1/bias/RMSProp/read"
  op: "Identity"
  input: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense_1/bias/RMSProp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense_1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense_1/bias/RMSProp_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense_1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense_1/bias/RMSProp_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense_1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense_1/bias/RMSProp_1/Assign"
  op: "Assign"
  input: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense_1/bias/RMSProp_1"
  input: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense_1/bias/RMSProp_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense_1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense_1/bias/RMSProp_1/read"
  op: "Identity"
  input: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense_1/bias/RMSProp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense_1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense_2/kernel/RMSProp/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense_2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
          dim {
            size: 10
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense_2/kernel/RMSProp"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense_2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
        dim {
          size: 10
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense_2/kernel/RMSProp/Assign"
  op: "Assign"
  input: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense_2/kernel/RMSProp"
  input: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense_2/kernel/RMSProp/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense_2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense_2/kernel/RMSProp/read"
  op: "Identity"
  input: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense_2/kernel/RMSProp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense_2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense_2/kernel/RMSProp_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense_2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
          dim {
            size: 10
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense_2/kernel/RMSProp_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense_2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
        dim {
          size: 10
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense_2/kernel/RMSProp_1/Assign"
  op: "Assign"
  input: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense_2/kernel/RMSProp_1"
  input: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense_2/kernel/RMSProp_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense_2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense_2/kernel/RMSProp_1/read"
  op: "Identity"
  input: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense_2/kernel/RMSProp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense_2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense_2/bias/RMSProp/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense_2/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 10
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense_2/bias/RMSProp"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense_2/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 10
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense_2/bias/RMSProp/Assign"
  op: "Assign"
  input: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense_2/bias/RMSProp"
  input: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense_2/bias/RMSProp/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense_2/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense_2/bias/RMSProp/read"
  op: "Identity"
  input: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense_2/bias/RMSProp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense_2/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense_2/bias/RMSProp_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense_2/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 10
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense_2/bias/RMSProp_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense_2/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 10
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense_2/bias/RMSProp_1/Assign"
  op: "Assign"
  input: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense_2/bias/RMSProp_1"
  input: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense_2/bias/RMSProp_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense_2/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense_2/bias/RMSProp_1/read"
  op: "Identity"
  input: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense_2/bias/RMSProp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense_2/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/RMSProp/learning_rate"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/RMSProp/decay"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.8999999761581421
      }
    }
  }
}
node {
  name: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/RMSProp/momentum"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/RMSProp/epsilon"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.000000013351432e-10
      }
    }
  }
}
node {
  name: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/RMSProp/update_adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense/kernel/ApplyRMSProp"
  op: "ApplyRMSProp"
  input: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense/kernel"
  input: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense/kernel/RMSProp"
  input: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense/kernel/RMSProp_1"
  input: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/RMSProp/learning_rate"
  input: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/RMSProp/decay"
  input: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/RMSProp/momentum"
  input: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/RMSProp/epsilon"
  input: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/gradients/adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense/MatMul_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 784
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/RMSProp/update_adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense/bias/ApplyRMSProp"
  op: "ApplyRMSProp"
  input: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense/bias"
  input: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense/bias/RMSProp"
  input: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense/bias/RMSProp_1"
  input: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/RMSProp/learning_rate"
  input: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/RMSProp/decay"
  input: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/RMSProp/momentum"
  input: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/RMSProp/epsilon"
  input: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/gradients/adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense/BiasAdd_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/RMSProp/update_adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense_1/kernel/ApplyRMSProp"
  op: "ApplyRMSProp"
  input: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense_1/kernel"
  input: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense_1/kernel/RMSProp"
  input: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense_1/kernel/RMSProp_1"
  input: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/RMSProp/learning_rate"
  input: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/RMSProp/decay"
  input: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/RMSProp/momentum"
  input: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/RMSProp/epsilon"
  input: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/gradients/adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense_1/MatMul_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/RMSProp/update_adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense_1/bias/ApplyRMSProp"
  op: "ApplyRMSProp"
  input: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense_1/bias"
  input: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense_1/bias/RMSProp"
  input: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense_1/bias/RMSProp_1"
  input: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/RMSProp/learning_rate"
  input: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/RMSProp/decay"
  input: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/RMSProp/momentum"
  input: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/RMSProp/epsilon"
  input: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/gradients/adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense_1/BiasAdd_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense_1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/RMSProp/update_adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense_2/kernel/ApplyRMSProp"
  op: "ApplyRMSProp"
  input: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense_2/kernel"
  input: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense_2/kernel/RMSProp"
  input: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense_2/kernel/RMSProp_1"
  input: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/RMSProp/learning_rate"
  input: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/RMSProp/decay"
  input: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/RMSProp/momentum"
  input: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/RMSProp/epsilon"
  input: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/gradients/adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense_2/MatMul_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense_2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/RMSProp/update_adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense_2/bias/ApplyRMSProp"
  op: "ApplyRMSProp"
  input: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense_2/bias"
  input: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense_2/bias/RMSProp"
  input: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense_2/bias/RMSProp_1"
  input: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/RMSProp/learning_rate"
  input: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/RMSProp/decay"
  input: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/RMSProp/momentum"
  input: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/RMSProp/epsilon"
  input: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/gradients/adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense_2/BiasAdd_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense_2/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/RMSProp"
  op: "NoOp"
  input: "^adanet/iteration_1/subnetwork_t1_2_layer_dnn/RMSProp/update_adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense/bias/ApplyRMSProp"
  input: "^adanet/iteration_1/subnetwork_t1_2_layer_dnn/RMSProp/update_adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense/kernel/ApplyRMSProp"
  input: "^adanet/iteration_1/subnetwork_t1_2_layer_dnn/RMSProp/update_adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense_1/bias/ApplyRMSProp"
  input: "^adanet/iteration_1/subnetwork_t1_2_layer_dnn/RMSProp/update_adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense_1/kernel/ApplyRMSProp"
  input: "^adanet/iteration_1/subnetwork_t1_2_layer_dnn/RMSProp/update_adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense_2/bias/ApplyRMSProp"
  input: "^adanet/iteration_1/subnetwork_t1_2_layer_dnn/RMSProp/update_adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense_2/kernel/ApplyRMSProp"
}
node {
  name: "adanet/iteration_1/ensemble_t1_1_layer_dnn_grow_complexity_regularized/weighted_subnetwork_0/Shape"
  op: "Shape"
  input: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/dropout/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "adanet/iteration_1/ensemble_t1_1_layer_dnn_grow_complexity_regularized/weighted_subnetwork_0/strided_slice/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "adanet/iteration_1/ensemble_t1_1_layer_dnn_grow_complexity_regularized/weighted_subnetwork_0/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "adanet/iteration_1/ensemble_t1_1_layer_dnn_grow_complexity_regularized/weighted_subnetwork_0/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "adanet/iteration_1/ensemble_t1_1_layer_dnn_grow_complexity_regularized/weighted_subnetwork_0/strided_slice"
  op: "StridedSlice"
  input: "adanet/iteration_1/ensemble_t1_1_layer_dnn_grow_complexity_regularized/weighted_subnetwork_0/Shape"
  input: "adanet/iteration_1/ensemble_t1_1_layer_dnn_grow_complexity_regularized/weighted_subnetwork_0/strided_slice/stack"
  input: "adanet/iteration_1/ensemble_t1_1_layer_dnn_grow_complexity_regularized/weighted_subnetwork_0/strided_slice/stack_1"
  input: "adanet/iteration_1/ensemble_t1_1_layer_dnn_grow_complexity_regularized/weighted_subnetwork_0/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "adanet/iteration_1/ensemble_t1_1_layer_dnn_grow_complexity_regularized/weighted_subnetwork_0/logits/mixture_weight/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_1/ensemble_t1_1_layer_dnn_grow_complexity_regularized/weighted_subnetwork_0/logits/mixture_weight"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.5
      }
    }
  }
}
node {
  name: "adanet/iteration_1/ensemble_t1_1_layer_dnn_grow_complexity_regularized/weighted_subnetwork_0/logits/mixture_weight"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_1/ensemble_t1_1_layer_dnn_grow_complexity_regularized/weighted_subnetwork_0/logits/mixture_weight"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "adanet/iteration_1/ensemble_t1_1_layer_dnn_grow_complexity_regularized/weighted_subnetwork_0/logits/mixture_weight/Assign"
  op: "Assign"
  input: "adanet/iteration_1/ensemble_t1_1_layer_dnn_grow_complexity_regularized/weighted_subnetwork_0/logits/mixture_weight"
  input: "adanet/iteration_1/ensemble_t1_1_layer_dnn_grow_complexity_regularized/weighted_subnetwork_0/logits/mixture_weight/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_1/ensemble_t1_1_layer_dnn_grow_complexity_regularized/weighted_subnetwork_0/logits/mixture_weight"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "adanet/iteration_1/ensemble_t1_1_layer_dnn_grow_complexity_regularized/weighted_subnetwork_0/logits/mixture_weight/read"
  op: "Identity"
  input: "adanet/iteration_1/ensemble_t1_1_layer_dnn_grow_complexity_regularized/weighted_subnetwork_0/logits/mixture_weight"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_1/ensemble_t1_1_layer_dnn_grow_complexity_regularized/weighted_subnetwork_0/logits/mixture_weight"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_1/ensemble_t1_1_layer_dnn_grow_complexity_regularized/weighted_subnetwork_0/logits/Mul"
  op: "Mul"
  input: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/dense_1/BiasAdd"
  input: "adanet/iteration_1/ensemble_t1_1_layer_dnn_grow_complexity_regularized/weighted_subnetwork_0/logits/mixture_weight/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_1/ensemble_t1_1_layer_dnn_grow_complexity_regularized/weighted_subnetwork_1/Shape"
  op: "Shape"
  input: "adanet/iteration_1/subnetwork_t1_1_layer_dnn/dense/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "adanet/iteration_1/ensemble_t1_1_layer_dnn_grow_complexity_regularized/weighted_subnetwork_1/strided_slice/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "adanet/iteration_1/ensemble_t1_1_layer_dnn_grow_complexity_regularized/weighted_subnetwork_1/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "adanet/iteration_1/ensemble_t1_1_layer_dnn_grow_complexity_regularized/weighted_subnetwork_1/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "adanet/iteration_1/ensemble_t1_1_layer_dnn_grow_complexity_regularized/weighted_subnetwork_1/strided_slice"
  op: "StridedSlice"
  input: "adanet/iteration_1/ensemble_t1_1_layer_dnn_grow_complexity_regularized/weighted_subnetwork_1/Shape"
  input: "adanet/iteration_1/ensemble_t1_1_layer_dnn_grow_complexity_regularized/weighted_subnetwork_1/strided_slice/stack"
  input: "adanet/iteration_1/ensemble_t1_1_layer_dnn_grow_complexity_regularized/weighted_subnetwork_1/strided_slice/stack_1"
  input: "adanet/iteration_1/ensemble_t1_1_layer_dnn_grow_complexity_regularized/weighted_subnetwork_1/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "adanet/iteration_1/ensemble_t1_1_layer_dnn_grow_complexity_regularized/weighted_subnetwork_1/logits/mixture_weight/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_1/ensemble_t1_1_layer_dnn_grow_complexity_regularized/weighted_subnetwork_1/logits/mixture_weight"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.5
      }
    }
  }
}
node {
  name: "adanet/iteration_1/ensemble_t1_1_layer_dnn_grow_complexity_regularized/weighted_subnetwork_1/logits/mixture_weight"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_1/ensemble_t1_1_layer_dnn_grow_complexity_regularized/weighted_subnetwork_1/logits/mixture_weight"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "adanet/iteration_1/ensemble_t1_1_layer_dnn_grow_complexity_regularized/weighted_subnetwork_1/logits/mixture_weight/Assign"
  op: "Assign"
  input: "adanet/iteration_1/ensemble_t1_1_layer_dnn_grow_complexity_regularized/weighted_subnetwork_1/logits/mixture_weight"
  input: "adanet/iteration_1/ensemble_t1_1_layer_dnn_grow_complexity_regularized/weighted_subnetwork_1/logits/mixture_weight/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_1/ensemble_t1_1_layer_dnn_grow_complexity_regularized/weighted_subnetwork_1/logits/mixture_weight"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "adanet/iteration_1/ensemble_t1_1_layer_dnn_grow_complexity_regularized/weighted_subnetwork_1/logits/mixture_weight/read"
  op: "Identity"
  input: "adanet/iteration_1/ensemble_t1_1_layer_dnn_grow_complexity_regularized/weighted_subnetwork_1/logits/mixture_weight"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_1/ensemble_t1_1_layer_dnn_grow_complexity_regularized/weighted_subnetwork_1/logits/mixture_weight"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_1/ensemble_t1_1_layer_dnn_grow_complexity_regularized/weighted_subnetwork_1/logits/Mul"
  op: "Mul"
  input: "adanet/iteration_1/subnetwork_t1_1_layer_dnn/dense_1/BiasAdd"
  input: "adanet/iteration_1/ensemble_t1_1_layer_dnn_grow_complexity_regularized/weighted_subnetwork_1/logits/mixture_weight/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_1/ensemble_t1_1_layer_dnn_grow_complexity_regularized/bias/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_1/ensemble_t1_1_layer_dnn_grow_complexity_regularized/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 10
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "adanet/iteration_1/ensemble_t1_1_layer_dnn_grow_complexity_regularized/bias"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_1/ensemble_t1_1_layer_dnn_grow_complexity_regularized/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 10
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "adanet/iteration_1/ensemble_t1_1_layer_dnn_grow_complexity_regularized/bias/Assign"
  op: "Assign"
  input: "adanet/iteration_1/ensemble_t1_1_layer_dnn_grow_complexity_regularized/bias"
  input: "adanet/iteration_1/ensemble_t1_1_layer_dnn_grow_complexity_regularized/bias/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_1/ensemble_t1_1_layer_dnn_grow_complexity_regularized/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "adanet/iteration_1/ensemble_t1_1_layer_dnn_grow_complexity_regularized/bias/read"
  op: "Identity"
  input: "adanet/iteration_1/ensemble_t1_1_layer_dnn_grow_complexity_regularized/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_1/ensemble_t1_1_layer_dnn_grow_complexity_regularized/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_1/ensemble_t1_1_layer_dnn_grow_complexity_regularized/logits/Add"
  op: "Add"
  input: "adanet/iteration_1/ensemble_t1_1_layer_dnn_grow_complexity_regularized/bias/read"
  input: "adanet/iteration_1/ensemble_t1_1_layer_dnn_grow_complexity_regularized/weighted_subnetwork_0/logits/Mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_1/ensemble_t1_1_layer_dnn_grow_complexity_regularized/logits/Add_1"
  op: "Add"
  input: "adanet/iteration_1/ensemble_t1_1_layer_dnn_grow_complexity_regularized/logits/Add"
  input: "adanet/iteration_1/ensemble_t1_1_layer_dnn_grow_complexity_regularized/weighted_subnetwork_1/logits/Mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_1/ensemble_t1_1_layer_dnn_grow_complexity_regularized/norm/Abs"
  op: "Abs"
  input: "adanet/iteration_1/ensemble_t1_1_layer_dnn_grow_complexity_regularized/weighted_subnetwork_0/logits/mixture_weight/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_1/ensemble_t1_1_layer_dnn_grow_complexity_regularized/norm/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_1/ensemble_t1_1_layer_dnn_grow_complexity_regularized/norm/Sum"
  op: "Sum"
  input: "adanet/iteration_1/ensemble_t1_1_layer_dnn_grow_complexity_regularized/norm/Abs"
  input: "adanet/iteration_1/ensemble_t1_1_layer_dnn_grow_complexity_regularized/norm/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "adanet/iteration_1/ensemble_t1_1_layer_dnn_grow_complexity_regularized/norm/Squeeze"
  op: "Squeeze"
  input: "adanet/iteration_1/ensemble_t1_1_layer_dnn_grow_complexity_regularized/norm/Sum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
      }
    }
  }
}
node {
  name: "adanet/iteration_1/ensemble_t1_1_layer_dnn_grow_complexity_regularized/add/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "adanet/iteration_1/ensemble_t1_1_layer_dnn_grow_complexity_regularized/add"
  op: "Add"
  input: "adanet/iteration_1/ensemble_t1_1_layer_dnn_grow_complexity_regularized/add/x"
  input: "adanet/iteration_1/ensemble_t1_1_layer_dnn_grow_complexity_regularized/norm/Squeeze"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_1/ensemble_t1_1_layer_dnn_grow_complexity_regularized/zero"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "adanet/iteration_1/ensemble_t1_1_layer_dnn_grow_complexity_regularized/add_1/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "adanet/iteration_1/ensemble_t1_1_layer_dnn_grow_complexity_regularized/add_1"
  op: "Add"
  input: "adanet/iteration_1/ensemble_t1_1_layer_dnn_grow_complexity_regularized/add_1/x"
  input: "adanet/iteration_1/ensemble_t1_1_layer_dnn_grow_complexity_regularized/zero"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_1/ensemble_t1_1_layer_dnn_grow_complexity_regularized/norm_1/Abs"
  op: "Abs"
  input: "adanet/iteration_1/ensemble_t1_1_layer_dnn_grow_complexity_regularized/weighted_subnetwork_1/logits/mixture_weight/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_1/ensemble_t1_1_layer_dnn_grow_complexity_regularized/norm_1/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_1/ensemble_t1_1_layer_dnn_grow_complexity_regularized/norm_1/Sum"
  op: "Sum"
  input: "adanet/iteration_1/ensemble_t1_1_layer_dnn_grow_complexity_regularized/norm_1/Abs"
  input: "adanet/iteration_1/ensemble_t1_1_layer_dnn_grow_complexity_regularized/norm_1/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "adanet/iteration_1/ensemble_t1_1_layer_dnn_grow_complexity_regularized/norm_1/Squeeze"
  op: "Squeeze"
  input: "adanet/iteration_1/ensemble_t1_1_layer_dnn_grow_complexity_regularized/norm_1/Sum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
      }
    }
  }
}
node {
  name: "adanet/iteration_1/ensemble_t1_1_layer_dnn_grow_complexity_regularized/add_2"
  op: "Add"
  input: "adanet/iteration_1/ensemble_t1_1_layer_dnn_grow_complexity_regularized/add"
  input: "adanet/iteration_1/ensemble_t1_1_layer_dnn_grow_complexity_regularized/norm_1/Squeeze"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_1/ensemble_t1_1_layer_dnn_grow_complexity_regularized/zero_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "adanet/iteration_1/ensemble_t1_1_layer_dnn_grow_complexity_regularized/add_3"
  op: "Add"
  input: "adanet/iteration_1/ensemble_t1_1_layer_dnn_grow_complexity_regularized/add_1"
  input: "adanet/iteration_1/ensemble_t1_1_layer_dnn_grow_complexity_regularized/zero_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_1/ensemble_t1_1_layer_dnn_grow_complexity_regularized/t1_1_layer_dnn_grow_complexity_regularized/complexity_regularization/adanet/adanet_weighted_ensemble/tags"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "complexity_regularization/adanet/adanet_weighted_ensemble"
      }
    }
  }
}
node {
  name: "adanet/iteration_1/ensemble_t1_1_layer_dnn_grow_complexity_regularized/t1_1_layer_dnn_grow_complexity_regularized/complexity_regularization/adanet/adanet_weighted_ensemble"
  op: "ScalarSummary"
  input: "adanet/iteration_1/ensemble_t1_1_layer_dnn_grow_complexity_regularized/t1_1_layer_dnn_grow_complexity_regularized/complexity_regularization/adanet/adanet_weighted_ensemble/tags"
  input: "adanet/iteration_1/ensemble_t1_1_layer_dnn_grow_complexity_regularized/add_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_1/ensemble_t1_1_layer_dnn_grow_complexity_regularized/t1_1_layer_dnn_grow_complexity_regularized/mixture_weights/adanet/adanet_weighted_ensemble/tag"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "mixture_weights/adanet/adanet_weighted_ensemble"
      }
    }
  }
}
node {
  name: "adanet/iteration_1/ensemble_t1_1_layer_dnn_grow_complexity_regularized/t1_1_layer_dnn_grow_complexity_regularized/mixture_weights/adanet/adanet_weighted_ensemble/values"
  op: "Pack"
  input: "adanet/iteration_1/ensemble_t1_1_layer_dnn_grow_complexity_regularized/norm/Squeeze"
  input: "adanet/iteration_1/ensemble_t1_1_layer_dnn_grow_complexity_regularized/norm_1/Squeeze"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "adanet/iteration_1/ensemble_t1_1_layer_dnn_grow_complexity_regularized/t1_1_layer_dnn_grow_complexity_regularized/mixture_weights/adanet/adanet_weighted_ensemble"
  op: "HistogramSummary"
  input: "adanet/iteration_1/ensemble_t1_1_layer_dnn_grow_complexity_regularized/t1_1_layer_dnn_grow_complexity_regularized/mixture_weights/adanet/adanet_weighted_ensemble/tag"
  input: "adanet/iteration_1/ensemble_t1_1_layer_dnn_grow_complexity_regularized/t1_1_layer_dnn_grow_complexity_regularized/mixture_weights/adanet/adanet_weighted_ensemble/values"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_1/ensemble_t1_1_layer_dnn_grow_complexity_regularized/t1_1_layer_dnn_grow_complexity_regularized/mixture_weight_norms/adanet/adanet_weighted_ensemble/subnetwork_0/tags"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "mixture_weight_norms/adanet/adanet_weighted_ensemble/subnetwork_0"
      }
    }
  }
}
node {
  name: "adanet/iteration_1/ensemble_t1_1_layer_dnn_grow_complexity_regularized/t1_1_layer_dnn_grow_complexity_regularized/mixture_weight_norms/adanet/adanet_weighted_ensemble/subnetwork_0"
  op: "ScalarSummary"
  input: "adanet/iteration_1/ensemble_t1_1_layer_dnn_grow_complexity_regularized/t1_1_layer_dnn_grow_complexity_regularized/mixture_weight_norms/adanet/adanet_weighted_ensemble/subnetwork_0/tags"
  input: "adanet/iteration_1/ensemble_t1_1_layer_dnn_grow_complexity_regularized/norm/Squeeze"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_1/ensemble_t1_1_layer_dnn_grow_complexity_regularized/truediv"
  op: "RealDiv"
  input: "adanet/iteration_1/ensemble_t1_1_layer_dnn_grow_complexity_regularized/norm/Squeeze"
  input: "adanet/iteration_1/ensemble_t1_1_layer_dnn_grow_complexity_regularized/add_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_1/ensemble_t1_1_layer_dnn_grow_complexity_regularized/t1_1_layer_dnn_grow_complexity_regularized/mixture_weight_fractions/adanet/adanet_weighted_ensemble/subnetwork_0/tags"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "mixture_weight_fractions/adanet/adanet_weighted_ensemble/subnetwork_0"
      }
    }
  }
}
node {
  name: "adanet/iteration_1/ensemble_t1_1_layer_dnn_grow_complexity_regularized/t1_1_layer_dnn_grow_complexity_regularized/mixture_weight_fractions/adanet/adanet_weighted_ensemble/subnetwork_0"
  op: "ScalarSummary"
  input: "adanet/iteration_1/ensemble_t1_1_layer_dnn_grow_complexity_regularized/t1_1_layer_dnn_grow_complexity_regularized/mixture_weight_fractions/adanet/adanet_weighted_ensemble/subnetwork_0/tags"
  input: "adanet/iteration_1/ensemble_t1_1_layer_dnn_grow_complexity_regularized/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_1/ensemble_t1_1_layer_dnn_grow_complexity_regularized/t1_1_layer_dnn_grow_complexity_regularized/mixture_weight_norms/adanet/adanet_weighted_ensemble/subnetwork_1/tags"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "mixture_weight_norms/adanet/adanet_weighted_ensemble/subnetwork_1"
      }
    }
  }
}
node {
  name: "adanet/iteration_1/ensemble_t1_1_layer_dnn_grow_complexity_regularized/t1_1_layer_dnn_grow_complexity_regularized/mixture_weight_norms/adanet/adanet_weighted_ensemble/subnetwork_1"
  op: "ScalarSummary"
  input: "adanet/iteration_1/ensemble_t1_1_layer_dnn_grow_complexity_regularized/t1_1_layer_dnn_grow_complexity_regularized/mixture_weight_norms/adanet/adanet_weighted_ensemble/subnetwork_1/tags"
  input: "adanet/iteration_1/ensemble_t1_1_layer_dnn_grow_complexity_regularized/norm_1/Squeeze"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_1/ensemble_t1_1_layer_dnn_grow_complexity_regularized/truediv_1"
  op: "RealDiv"
  input: "adanet/iteration_1/ensemble_t1_1_layer_dnn_grow_complexity_regularized/norm_1/Squeeze"
  input: "adanet/iteration_1/ensemble_t1_1_layer_dnn_grow_complexity_regularized/add_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_1/ensemble_t1_1_layer_dnn_grow_complexity_regularized/t1_1_layer_dnn_grow_complexity_regularized/mixture_weight_fractions/adanet/adanet_weighted_ensemble/subnetwork_1/tags"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "mixture_weight_fractions/adanet/adanet_weighted_ensemble/subnetwork_1"
      }
    }
  }
}
node {
  name: "adanet/iteration_1/ensemble_t1_1_layer_dnn_grow_complexity_regularized/t1_1_layer_dnn_grow_complexity_regularized/mixture_weight_fractions/adanet/adanet_weighted_ensemble/subnetwork_1"
  op: "ScalarSummary"
  input: "adanet/iteration_1/ensemble_t1_1_layer_dnn_grow_complexity_regularized/t1_1_layer_dnn_grow_complexity_regularized/mixture_weight_fractions/adanet/adanet_weighted_ensemble/subnetwork_1/tags"
  input: "adanet/iteration_1/ensemble_t1_1_layer_dnn_grow_complexity_regularized/truediv_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_1/ensemble_t1_1_layer_dnn_grow_complexity_regularized/head/logits/Shape"
  op: "Shape"
  input: "adanet/iteration_1/ensemble_t1_1_layer_dnn_grow_complexity_regularized/logits/Add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "adanet/iteration_1/ensemble_t1_1_layer_dnn_grow_complexity_regularized/head/logits/assert_rank_at_least/rank"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "adanet/iteration_1/ensemble_t1_1_layer_dnn_grow_complexity_regularized/head/logits/assert_rank_at_least/assert_type/statically_determined_correct_type"
  op: "NoOp"
}
node {
  name: "adanet/iteration_1/ensemble_t1_1_layer_dnn_grow_complexity_regularized/head/logits/assert_rank_at_least/static_checks_determined_all_ok"
  op: "NoOp"
}
node {
  name: "adanet/iteration_1/ensemble_t1_1_layer_dnn_grow_complexity_regularized/head/predictions/class_ids/dimension"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "adanet/iteration_1/ensemble_t1_1_layer_dnn_grow_complexity_regularized/head/predictions/class_ids"
  op: "ArgMax"
  input: "adanet/iteration_1/ensemble_t1_1_layer_dnn_grow_complexity_regularized/logits/Add_1"
  input: "adanet/iteration_1/ensemble_t1_1_layer_dnn_grow_complexity_regularized/head/predictions/class_ids/dimension"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "output_type"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "adanet/iteration_1/ensemble_t1_1_layer_dnn_grow_complexity_regularized/head/predictions/ExpandDims/dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "adanet/iteration_1/ensemble_t1_1_layer_dnn_grow_complexity_regularized/head/predictions/ExpandDims"
  op: "ExpandDims"
  input: "adanet/iteration_1/ensemble_t1_1_layer_dnn_grow_complexity_regularized/head/predictions/class_ids"
  input: "adanet/iteration_1/ensemble_t1_1_layer_dnn_grow_complexity_regularized/head/predictions/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_1/ensemble_t1_1_layer_dnn_grow_complexity_regularized/head/predictions/str_classes"
  op: "AsString"
  input: "adanet/iteration_1/ensemble_t1_1_layer_dnn_grow_complexity_regularized/head/predictions/ExpandDims"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "fill"
    value {
      s: ""
    }
  }
  attr {
    key: "precision"
    value {
      i: -1
    }
  }
  attr {
    key: "scientific"
    value {
      b: false
    }
  }
  attr {
    key: "shortest"
    value {
      b: false
    }
  }
  attr {
    key: "width"
    value {
      i: -1
    }
  }
}
node {
  name: "adanet/iteration_1/ensemble_t1_1_layer_dnn_grow_complexity_regularized/head/predictions/probabilities"
  op: "Softmax"
  input: "adanet/iteration_1/ensemble_t1_1_layer_dnn_grow_complexity_regularized/logits/Add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_1/ensemble_t1_1_layer_dnn_grow_complexity_regularized/head/labels/ExpandDims/dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "adanet/iteration_1/ensemble_t1_1_layer_dnn_grow_complexity_regularized/head/labels/ExpandDims"
  op: "ExpandDims"
  input: "IteratorGetNext:1"
  input: "adanet/iteration_1/ensemble_t1_1_layer_dnn_grow_complexity_regularized/head/labels/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_1/ensemble_t1_1_layer_dnn_grow_complexity_regularized/head/labels/Shape"
  op: "Shape"
  input: "adanet/iteration_1/ensemble_t1_1_layer_dnn_grow_complexity_regularized/head/labels/ExpandDims"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "adanet/iteration_1/ensemble_t1_1_layer_dnn_grow_complexity_regularized/head/labels/Shape_1"
  op: "Shape"
  input: "adanet/iteration_1/ensemble_t1_1_layer_dnn_grow_complexity_regularized/logits/Add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "adanet/iteration_1/ensemble_t1_1_layer_dnn_grow_complexity_regularized/head/labels/assert_rank_at_least/rank"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "adanet/iteration_1/ensemble_t1_1_layer_dnn_grow_complexity_regularized/head/labels/assert_rank_at_least/Shape"
  op: "Shape"
  input: "adanet/iteration_1/ensemble_t1_1_layer_dnn_grow_complexity_regularized/head/labels/ExpandDims"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "adanet/iteration_1/ensemble_t1_1_layer_dnn_grow_complexity_regularized/head/labels/assert_rank_at_least/assert_type/statically_determined_correct_type"
  op: "NoOp"
}
node {
  name: "adanet/iteration_1/ensemble_t1_1_layer_dnn_grow_complexity_regularized/head/labels/assert_rank_at_least/static_checks_determined_all_ok"
  op: "NoOp"
}
node {
  name: "adanet/iteration_1/ensemble_t1_1_layer_dnn_grow_complexity_regularized/head/labels/strided_slice/stack"
  op: "Const"
  input: "^adanet/iteration_1/ensemble_t1_1_layer_dnn_grow_complexity_regularized/head/labels/assert_rank_at_least/static_checks_determined_all_ok"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "adanet/iteration_1/ensemble_t1_1_layer_dnn_grow_complexity_regularized/head/labels/strided_slice/stack_1"
  op: "Const"
  input: "^adanet/iteration_1/ensemble_t1_1_layer_dnn_grow_complexity_regularized/head/labels/assert_rank_at_least/static_checks_determined_all_ok"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "adanet/iteration_1/ensemble_t1_1_layer_dnn_grow_complexity_regularized/head/labels/strided_slice/stack_2"
  op: "Const"
  input: "^adanet/iteration_1/ensemble_t1_1_layer_dnn_grow_complexity_regularized/head/labels/assert_rank_at_least/static_checks_determined_all_ok"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "adanet/iteration_1/ensemble_t1_1_layer_dnn_grow_complexity_regularized/head/labels/strided_slice"
  op: "StridedSlice"
  input: "adanet/iteration_1/ensemble_t1_1_layer_dnn_grow_complexity_regularized/head/labels/Shape_1"
  input: "adanet/iteration_1/ensemble_t1_1_layer_dnn_grow_complexity_regularized/head/labels/strided_slice/stack"
  input: "adanet/iteration_1/ensemble_t1_1_layer_dnn_grow_complexity_regularized/head/labels/strided_slice/stack_1"
  input: "adanet/iteration_1/ensemble_t1_1_layer_dnn_grow_complexity_regularized/head/labels/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "adanet/iteration_1/ensemble_t1_1_layer_dnn_grow_complexity_regularized/head/labels/concat/values_1"
  op: "Const"
  input: "^adanet/iteration_1/ensemble_t1_1_layer_dnn_grow_complexity_regularized/head/labels/assert_rank_at_least/static_checks_determined_all_ok"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "adanet/iteration_1/ensemble_t1_1_layer_dnn_grow_complexity_regularized/head/labels/concat/axis"
  op: "Const"
  input: "^adanet/iteration_1/ensemble_t1_1_layer_dnn_grow_complexity_regularized/head/labels/assert_rank_at_least/static_checks_determined_all_ok"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "adanet/iteration_1/ensemble_t1_1_layer_dnn_grow_complexity_regularized/head/labels/concat"
  op: "ConcatV2"
  input: "adanet/iteration_1/ensemble_t1_1_layer_dnn_grow_complexity_regularized/head/labels/strided_slice"
  input: "adanet/iteration_1/ensemble_t1_1_layer_dnn_grow_complexity_regularized/head/labels/concat/values_1"
  input: "adanet/iteration_1/ensemble_t1_1_layer_dnn_grow_complexity_regularized/head/labels/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_1/ensemble_t1_1_layer_dnn_grow_complexity_regularized/head/labels/assert_equal/Equal"
  op: "Equal"
  input: "adanet/iteration_1/ensemble_t1_1_layer_dnn_grow_complexity_regularized/head/labels/concat"
  input: "adanet/iteration_1/ensemble_t1_1_layer_dnn_grow_complexity_regularized/head/labels/Shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_1/ensemble_t1_1_layer_dnn_grow_complexity_regularized/head/labels/assert_equal/Const"
  op: "Const"
  input: "^adanet/iteration_1/ensemble_t1_1_layer_dnn_grow_complexity_regularized/head/labels/assert_rank_at_least/static_checks_determined_all_ok"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "adanet/iteration_1/ensemble_t1_1_layer_dnn_grow_complexity_regularized/head/labels/assert_equal/All"
  op: "All"
  input: "adanet/iteration_1/ensemble_t1_1_layer_dnn_grow_complexity_regularized/head/labels/assert_equal/Equal"
  input: "adanet/iteration_1/ensemble_t1_1_layer_dnn_grow_complexity_regularized/head/labels/assert_equal/Const"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "adanet/iteration_1/ensemble_t1_1_layer_dnn_grow_complexity_regularized/head/labels/assert_equal/Assert/Const"
  op: "Const"
  input: "^adanet/iteration_1/ensemble_t1_1_layer_dnn_grow_complexity_regularized/head/labels/assert_rank_at_least/static_checks_determined_all_ok"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "expected_labels_shape: "
      }
    }
  }
}
node {
  name: "adanet/iteration_1/ensemble_t1_1_layer_dnn_grow_complexity_regularized/head/labels/assert_equal/Assert/Const_1"
  op: "Const"
  input: "^adanet/iteration_1/ensemble_t1_1_layer_dnn_grow_complexity_regularized/head/labels/assert_rank_at_least/static_checks_determined_all_ok"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "labels_shape: "
      }
    }
  }
}
node {
  name: "adanet/iteration_1/ensemble_t1_1_layer_dnn_grow_complexity_regularized/head/labels/assert_equal/Assert/Assert/data_0"
  op: "Const"
  input: "^adanet/iteration_1/ensemble_t1_1_layer_dnn_grow_complexity_regularized/head/labels/assert_rank_at_least/static_checks_determined_all_ok"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "expected_labels_shape: "
      }
    }
  }
}
node {
  name: "adanet/iteration_1/ensemble_t1_1_layer_dnn_grow_complexity_regularized/head/labels/assert_equal/Assert/Assert/data_2"
  op: "Const"
  input: "^adanet/iteration_1/ensemble_t1_1_layer_dnn_grow_complexity_regularized/head/labels/assert_rank_at_least/static_checks_determined_all_ok"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "labels_shape: "
      }
    }
  }
}
node {
  name: "adanet/iteration_1/ensemble_t1_1_layer_dnn_grow_complexity_regularized/head/labels/assert_equal/Assert/Assert"
  op: "Assert"
  input: "adanet/iteration_1/ensemble_t1_1_layer_dnn_grow_complexity_regularized/head/labels/assert_equal/All"
  input: "adanet/iteration_1/ensemble_t1_1_layer_dnn_grow_complexity_regularized/head/labels/assert_equal/Assert/Assert/data_0"
  input: "adanet/iteration_1/ensemble_t1_1_layer_dnn_grow_complexity_regularized/head/labels/concat"
  input: "adanet/iteration_1/ensemble_t1_1_layer_dnn_grow_complexity_regularized/head/labels/assert_equal/Assert/Assert/data_2"
  input: "adanet/iteration_1/ensemble_t1_1_layer_dnn_grow_complexity_regularized/head/labels/Shape"
  attr {
    key: "T"
    value {
      list {
        type: DT_STRING
        type: DT_INT32
        type: DT_STRING
        type: DT_INT32
      }
    }
  }
  attr {
    key: "summarize"
    value {
      i: 3
    }
  }
}
node {
  name: "adanet/iteration_1/ensemble_t1_1_layer_dnn_grow_complexity_regularized/head/labels"
  op: "Identity"
  input: "adanet/iteration_1/ensemble_t1_1_layer_dnn_grow_complexity_regularized/head/labels/ExpandDims"
  input: "^adanet/iteration_1/ensemble_t1_1_layer_dnn_grow_complexity_regularized/head/labels/assert_equal/Assert/Assert"
  input: "^adanet/iteration_1/ensemble_t1_1_layer_dnn_grow_complexity_regularized/head/labels/assert_rank_at_least/static_checks_determined_all_ok"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_1/ensemble_t1_1_layer_dnn_grow_complexity_regularized/head/assert_range/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 9
      }
    }
  }
}
node {
  name: "adanet/iteration_1/ensemble_t1_1_layer_dnn_grow_complexity_regularized/head/assert_range/assert_less_equal/LessEqual"
  op: "LessEqual"
  input: "adanet/iteration_1/ensemble_t1_1_layer_dnn_grow_complexity_regularized/head/labels"
  input: "adanet/iteration_1/ensemble_t1_1_layer_dnn_grow_complexity_regularized/head/assert_range/Const"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_1/ensemble_t1_1_layer_dnn_grow_complexity_regularized/head/assert_range/assert_less_equal/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "adanet/iteration_1/ensemble_t1_1_layer_dnn_grow_complexity_regularized/head/assert_range/assert_less_equal/All"
  op: "All"
  input: "adanet/iteration_1/ensemble_t1_1_layer_dnn_grow_complexity_regularized/head/assert_range/assert_less_equal/LessEqual"
  input: "adanet/iteration_1/ensemble_t1_1_layer_dnn_grow_complexity_regularized/head/assert_range/assert_less_equal/Const"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "adanet/iteration_1/ensemble_t1_1_layer_dnn_grow_complexity_regularized/head/assert_range/assert_less_equal/Assert/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "Labels must <= n_classes - 1"
      }
    }
  }
}
node {
  name: "adanet/iteration_1/ensemble_t1_1_layer_dnn_grow_complexity_regularized/head/assert_range/assert_less_equal/Assert/Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "Condition x <= y did not hold element-wise:x (adanet/iteration_1/ensemble_t1_1_layer_dnn_grow_complexity_regularized/head/labels:0) = "
      }
    }
  }
}
node {
  name: "adanet/iteration_1/ensemble_t1_1_layer_dnn_grow_complexity_regularized/head/assert_range/assert_less_equal/Assert/Const_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "y (adanet/iteration_1/ensemble_t1_1_layer_dnn_grow_complexity_regularized/head/assert_range/Const:0) = "
      }
    }
  }
}
node {
  name: "adanet/iteration_1/ensemble_t1_1_layer_dnn_grow_complexity_regularized/head/assert_range/assert_less_equal/Assert/Assert/data_0"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "Labels must <= n_classes - 1"
      }
    }
  }
}
node {
  name: "adanet/iteration_1/ensemble_t1_1_layer_dnn_grow_complexity_regularized/head/assert_range/assert_less_equal/Assert/Assert/data_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "Condition x <= y did not hold element-wise:x (adanet/iteration_1/ensemble_t1_1_layer_dnn_grow_complexity_regularized/head/labels:0) = "
      }
    }
  }
}
node {
  name: "adanet/iteration_1/ensemble_t1_1_layer_dnn_grow_complexity_regularized/head/assert_range/assert_less_equal/Assert/Assert/data_3"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "y (adanet/iteration_1/ensemble_t1_1_layer_dnn_grow_complexity_regularized/head/assert_range/Const:0) = "
      }
    }
  }
}
node {
  name: "adanet/iteration_1/ensemble_t1_1_layer_dnn_grow_complexity_regularized/head/assert_range/assert_less_equal/Assert/Assert"
  op: "Assert"
  input: "adanet/iteration_1/ensemble_t1_1_layer_dnn_grow_complexity_regularized/head/assert_range/assert_less_equal/All"
  input: "adanet/iteration_1/ensemble_t1_1_layer_dnn_grow_complexity_regularized/head/assert_range/assert_less_equal/Assert/Assert/data_0"
  input: "adanet/iteration_1/ensemble_t1_1_layer_dnn_grow_complexity_regularized/head/assert_range/assert_less_equal/Assert/Assert/data_1"
  input: "adanet/iteration_1/ensemble_t1_1_layer_dnn_grow_complexity_regularized/head/labels"
  input: "adanet/iteration_1/ensemble_t1_1_layer_dnn_grow_complexity_regularized/head/assert_range/assert_less_equal/Assert/Assert/data_3"
  input: "adanet/iteration_1/ensemble_t1_1_layer_dnn_grow_complexity_regularized/head/assert_range/Const"
  attr {
    key: "T"
    value {
      list {
        type: DT_STRING
        type: DT_STRING
        type: DT_INT32
        type: DT_STRING
        type: DT_INT32
      }
    }
  }
  attr {
    key: "summarize"
    value {
      i: 3
    }
  }
}
node {
  name: "adanet/iteration_1/ensemble_t1_1_layer_dnn_grow_complexity_regularized/head/assert_range/assert_non_negative/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "adanet/iteration_1/ensemble_t1_1_layer_dnn_grow_complexity_regularized/head/assert_range/assert_non_negative/assert_less_equal/LessEqual"
  op: "LessEqual"
  input: "adanet/iteration_1/ensemble_t1_1_layer_dnn_grow_complexity_regularized/head/assert_range/assert_non_negative/Const"
  input: "adanet/iteration_1/ensemble_t1_1_layer_dnn_grow_complexity_regularized/head/labels"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_1/ensemble_t1_1_layer_dnn_grow_complexity_regularized/head/assert_range/assert_non_negative/assert_less_equal/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "adanet/iteration_1/ensemble_t1_1_layer_dnn_grow_complexity_regularized/head/assert_range/assert_non_negative/assert_less_equal/All"
  op: "All"
  input: "adanet/iteration_1/ensemble_t1_1_layer_dnn_grow_complexity_regularized/head/assert_range/assert_non_negative/assert_less_equal/LessEqual"
  input: "adanet/iteration_1/ensemble_t1_1_layer_dnn_grow_complexity_regularized/head/assert_range/assert_non_negative/assert_less_equal/Const"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "adanet/iteration_1/ensemble_t1_1_layer_dnn_grow_complexity_regularized/head/assert_range/assert_non_negative/assert_less_equal/Assert/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "Labels must >= 0"
      }
    }
  }
}
node {
  name: "adanet/iteration_1/ensemble_t1_1_layer_dnn_grow_complexity_regularized/head/assert_range/assert_non_negative/assert_less_equal/Assert/Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "Condition x >= 0 did not hold element-wise:"
      }
    }
  }
}
node {
  name: "adanet/iteration_1/ensemble_t1_1_layer_dnn_grow_complexity_regularized/head/assert_range/assert_non_negative/assert_less_equal/Assert/Const_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "x (adanet/iteration_1/ensemble_t1_1_layer_dnn_grow_complexity_regularized/head/labels:0) = "
      }
    }
  }
}
node {
  name: "adanet/iteration_1/ensemble_t1_1_layer_dnn_grow_complexity_regularized/head/assert_range/assert_non_negative/assert_less_equal/Assert/Assert/data_0"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "Labels must >= 0"
      }
    }
  }
}
node {
  name: "adanet/iteration_1/ensemble_t1_1_layer_dnn_grow_complexity_regularized/head/assert_range/assert_non_negative/assert_less_equal/Assert/Assert/data_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "Condition x >= 0 did not hold element-wise:"
      }
    }
  }
}
node {
  name: "adanet/iteration_1/ensemble_t1_1_layer_dnn_grow_complexity_regularized/head/assert_range/assert_non_negative/assert_less_equal/Assert/Assert/data_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "x (adanet/iteration_1/ensemble_t1_1_layer_dnn_grow_complexity_regularized/head/labels:0) = "
      }
    }
  }
}
node {
  name: "adanet/iteration_1/ensemble_t1_1_layer_dnn_grow_complexity_regularized/head/assert_range/assert_non_negative/assert_less_equal/Assert/Assert"
  op: "Assert"
  input: "adanet/iteration_1/ensemble_t1_1_layer_dnn_grow_complexity_regularized/head/assert_range/assert_non_negative/assert_less_equal/All"
  input: "adanet/iteration_1/ensemble_t1_1_layer_dnn_grow_complexity_regularized/head/assert_range/assert_non_negative/assert_less_equal/Assert/Assert/data_0"
  input: "adanet/iteration_1/ensemble_t1_1_layer_dnn_grow_complexity_regularized/head/assert_range/assert_non_negative/assert_less_equal/Assert/Assert/data_1"
  input: "adanet/iteration_1/ensemble_t1_1_layer_dnn_grow_complexity_regularized/head/assert_range/assert_non_negative/assert_less_equal/Assert/Assert/data_2"
  input: "adanet/iteration_1/ensemble_t1_1_layer_dnn_grow_complexity_regularized/head/labels"
  attr {
    key: "T"
    value {
      list {
        type: DT_STRING
        type: DT_STRING
        type: DT_STRING
        type: DT_INT32
      }
    }
  }
  attr {
    key: "summarize"
    value {
      i: 3
    }
  }
}
node {
  name: "adanet/iteration_1/ensemble_t1_1_layer_dnn_grow_complexity_regularized/head/assert_range/Identity"
  op: "Identity"
  input: "adanet/iteration_1/ensemble_t1_1_layer_dnn_grow_complexity_regularized/head/labels"
  input: "^adanet/iteration_1/ensemble_t1_1_layer_dnn_grow_complexity_regularized/head/assert_range/assert_less_equal/Assert/Assert"
  input: "^adanet/iteration_1/ensemble_t1_1_layer_dnn_grow_complexity_regularized/head/assert_range/assert_non_negative/assert_less_equal/Assert/Assert"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_1/ensemble_t1_1_layer_dnn_grow_complexity_regularized/head/sparse_softmax_cross_entropy_loss/remove_squeezable_dimensions/Squeeze"
  op: "Squeeze"
  input: "adanet/iteration_1/ensemble_t1_1_layer_dnn_grow_complexity_regularized/head/assert_range/Identity"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: -1
      }
    }
  }
}
node {
  name: "adanet/iteration_1/ensemble_t1_1_layer_dnn_grow_complexity_regularized/head/sparse_softmax_cross_entropy_loss/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "adanet/iteration_1/ensemble_t1_1_layer_dnn_grow_complexity_regularized/head/sparse_softmax_cross_entropy_loss/xentropy/Shape"
  op: "Shape"
  input: "adanet/iteration_1/ensemble_t1_1_layer_dnn_grow_complexity_regularized/head/sparse_softmax_cross_entropy_loss/remove_squeezable_dimensions/Squeeze"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "adanet/iteration_1/ensemble_t1_1_layer_dnn_grow_complexity_regularized/head/sparse_softmax_cross_entropy_loss/xentropy/xentropy"
  op: "SparseSoftmaxCrossEntropyWithLogits"
  input: "adanet/iteration_1/ensemble_t1_1_layer_dnn_grow_complexity_regularized/logits/Add_1"
  input: "adanet/iteration_1/ensemble_t1_1_layer_dnn_grow_complexity_regularized/head/sparse_softmax_cross_entropy_loss/remove_squeezable_dimensions/Squeeze"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tlabels"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_1/ensemble_t1_1_layer_dnn_grow_complexity_regularized/head/sparse_softmax_cross_entropy_loss/assert_broadcastable/weights/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_1/ensemble_t1_1_layer_dnn_grow_complexity_regularized/head/sparse_softmax_cross_entropy_loss/assert_broadcastable/weights/rank"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "adanet/iteration_1/ensemble_t1_1_layer_dnn_grow_complexity_regularized/head/sparse_softmax_cross_entropy_loss/assert_broadcastable/values/shape"
  op: "Shape"
  input: "adanet/iteration_1/ensemble_t1_1_layer_dnn_grow_complexity_regularized/head/sparse_softmax_cross_entropy_loss/xentropy/xentropy"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "adanet/iteration_1/ensemble_t1_1_layer_dnn_grow_complexity_regularized/head/sparse_softmax_cross_entropy_loss/assert_broadcastable/values/rank"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "adanet/iteration_1/ensemble_t1_1_layer_dnn_grow_complexity_regularized/head/sparse_softmax_cross_entropy_loss/assert_broadcastable/static_scalar_check_success"
  op: "NoOp"
}
node {
  name: "adanet/iteration_1/ensemble_t1_1_layer_dnn_grow_complexity_regularized/head/sparse_softmax_cross_entropy_loss/Mul"
  op: "Mul"
  input: "adanet/iteration_1/ensemble_t1_1_layer_dnn_grow_complexity_regularized/head/sparse_softmax_cross_entropy_loss/xentropy/xentropy"
  input: "adanet/iteration_1/ensemble_t1_1_layer_dnn_grow_complexity_regularized/head/sparse_softmax_cross_entropy_loss/Const"
  input: "^adanet/iteration_1/ensemble_t1_1_layer_dnn_grow_complexity_regularized/head/sparse_softmax_cross_entropy_loss/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_1/ensemble_t1_1_layer_dnn_grow_complexity_regularized/head/ExpandDims/dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "adanet/iteration_1/ensemble_t1_1_layer_dnn_grow_complexity_regularized/head/ExpandDims"
  op: "ExpandDims"
  input: "adanet/iteration_1/ensemble_t1_1_layer_dnn_grow_complexity_regularized/head/sparse_softmax_cross_entropy_loss/Mul"
  input: "adanet/iteration_1/ensemble_t1_1_layer_dnn_grow_complexity_regularized/head/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_1/ensemble_t1_1_layer_dnn_grow_complexity_regularized/head/weighted_loss/assert_broadcastable/weights"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "adanet/iteration_1/ensemble_t1_1_layer_dnn_grow_complexity_regularized/head/weighted_loss/assert_broadcastable/weights/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_1/ensemble_t1_1_layer_dnn_grow_complexity_regularized/head/weighted_loss/assert_broadcastable/weights/rank"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "adanet/iteration_1/ensemble_t1_1_layer_dnn_grow_complexity_regularized/head/weighted_loss/assert_broadcastable/values/shape"
  op: "Shape"
  input: "adanet/iteration_1/ensemble_t1_1_layer_dnn_grow_complexity_regularized/head/ExpandDims"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "adanet/iteration_1/ensemble_t1_1_layer_dnn_grow_complexity_regularized/head/weighted_loss/assert_broadcastable/values/rank"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "adanet/iteration_1/ensemble_t1_1_layer_dnn_grow_complexity_regularized/head/weighted_loss/assert_broadcastable/static_scalar_check_success"
  op: "NoOp"
}
node {
  name: "adanet/iteration_1/ensemble_t1_1_layer_dnn_grow_complexity_regularized/head/weighted_loss/ToFloat/x"
  op: "Const"
  input: "^adanet/iteration_1/ensemble_t1_1_layer_dnn_grow_complexity_regularized/head/weighted_loss/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "adanet/iteration_1/ensemble_t1_1_layer_dnn_grow_complexity_regularized/head/weighted_loss/Mul"
  op: "Mul"
  input: "adanet/iteration_1/ensemble_t1_1_layer_dnn_grow_complexity_regularized/head/ExpandDims"
  input: "adanet/iteration_1/ensemble_t1_1_layer_dnn_grow_complexity_regularized/head/weighted_loss/ToFloat/x"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_1/ensemble_t1_1_layer_dnn_grow_complexity_regularized/head/weighted_loss/Const"
  op: "Const"
  input: "^adanet/iteration_1/ensemble_t1_1_layer_dnn_grow_complexity_regularized/head/weighted_loss/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "adanet/iteration_1/ensemble_t1_1_layer_dnn_grow_complexity_regularized/head/weighted_loss/Sum"
  op: "Sum"
  input: "adanet/iteration_1/ensemble_t1_1_layer_dnn_grow_complexity_regularized/head/weighted_loss/Mul"
  input: "adanet/iteration_1/ensemble_t1_1_layer_dnn_grow_complexity_regularized/head/weighted_loss/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "adanet/iteration_1/ensemble_t1_1_layer_dnn_grow_complexity_regularized/head/weighted_loss/num_elements"
  op: "Size"
  input: "adanet/iteration_1/ensemble_t1_1_layer_dnn_grow_complexity_regularized/head/ExpandDims"
  input: "^adanet/iteration_1/ensemble_t1_1_layer_dnn_grow_complexity_regularized/head/weighted_loss/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "adanet/iteration_1/ensemble_t1_1_layer_dnn_grow_complexity_regularized/head/weighted_loss/num_elements/Cast"
  op: "Cast"
  input: "adanet/iteration_1/ensemble_t1_1_layer_dnn_grow_complexity_regularized/head/weighted_loss/num_elements"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_1/ensemble_t1_1_layer_dnn_grow_complexity_regularized/head/weighted_loss/Const_1"
  op: "Const"
  input: "^adanet/iteration_1/ensemble_t1_1_layer_dnn_grow_complexity_regularized/head/weighted_loss/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_1/ensemble_t1_1_layer_dnn_grow_complexity_regularized/head/weighted_loss/Sum_1"
  op: "Sum"
  input: "adanet/iteration_1/ensemble_t1_1_layer_dnn_grow_complexity_regularized/head/weighted_loss/Sum"
  input: "adanet/iteration_1/ensemble_t1_1_layer_dnn_grow_complexity_regularized/head/weighted_loss/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "adanet/iteration_1/ensemble_t1_1_layer_dnn_grow_complexity_regularized/head/weighted_loss/value"
  op: "DivNoNan"
  input: "adanet/iteration_1/ensemble_t1_1_layer_dnn_grow_complexity_regularized/head/weighted_loss/Sum_1"
  input: "adanet/iteration_1/ensemble_t1_1_layer_dnn_grow_complexity_regularized/head/weighted_loss/num_elements/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_1/ensemble_t1_1_layer_dnn_grow_complexity_regularized/head/NoOp"
  op: "NoOp"
}
node {
  name: "loss_2/tags"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "loss_2"
      }
    }
  }
}
node {
  name: "loss_2"
  op: "ScalarSummary"
  input: "loss_2/tags"
  input: "adanet/iteration_1/ensemble_t1_1_layer_dnn_grow_complexity_regularized/head/weighted_loss/value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_1/ensemble_t1_1_layer_dnn_grow_complexity_regularized/add_4"
  op: "Add"
  input: "adanet/iteration_1/ensemble_t1_1_layer_dnn_grow_complexity_regularized/head/weighted_loss/value"
  input: "adanet/iteration_1/ensemble_t1_1_layer_dnn_grow_complexity_regularized/add_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_1/ensemble_t1_1_layer_dnn_grow_complexity_regularized/t1_1_layer_dnn_grow_complexity_regularized/loss/tags"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "loss"
      }
    }
  }
}
node {
  name: "adanet/iteration_1/ensemble_t1_1_layer_dnn_grow_complexity_regularized/t1_1_layer_dnn_grow_complexity_regularized/loss"
  op: "ScalarSummary"
  input: "adanet/iteration_1/ensemble_t1_1_layer_dnn_grow_complexity_regularized/t1_1_layer_dnn_grow_complexity_regularized/loss/tags"
  input: "adanet/iteration_1/ensemble_t1_1_layer_dnn_grow_complexity_regularized/head/weighted_loss/value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_1/ensemble_t1_1_layer_dnn_grow_complexity_regularized/train_mixture_weights/mixture_weights_train_op"
  op: "NoOp"
}
node {
  name: "adanet/iteration_1/candidate_t1_1_layer_dnn_grow_complexity_regularized/adanet_loss/initial_value"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "adanet/iteration_1/candidate_t1_1_layer_dnn_grow_complexity_regularized/adanet_loss"
  op: "VariableV2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "adanet/iteration_1/candidate_t1_1_layer_dnn_grow_complexity_regularized/adanet_loss/Assign"
  op: "Assign"
  input: "adanet/iteration_1/candidate_t1_1_layer_dnn_grow_complexity_regularized/adanet_loss"
  input: "adanet/iteration_1/candidate_t1_1_layer_dnn_grow_complexity_regularized/adanet_loss/initial_value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_1/candidate_t1_1_layer_dnn_grow_complexity_regularized/adanet_loss"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "adanet/iteration_1/candidate_t1_1_layer_dnn_grow_complexity_regularized/adanet_loss/read"
  op: "Identity"
  input: "adanet/iteration_1/candidate_t1_1_layer_dnn_grow_complexity_regularized/adanet_loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_1/candidate_t1_1_layer_dnn_grow_complexity_regularized/adanet_loss"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_1/candidate_t1_1_layer_dnn_grow_complexity_regularized/add/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 1
      }
    }
  }
}
node {
  name: "adanet/iteration_1/candidate_t1_1_layer_dnn_grow_complexity_regularized/add"
  op: "Add"
  input: "adanet/iteration_1/step/read"
  input: "adanet/iteration_1/candidate_t1_1_layer_dnn_grow_complexity_regularized/add/y"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_1/candidate_t1_1_layer_dnn_grow_complexity_regularized/is_training/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 2500
      }
    }
  }
}
node {
  name: "adanet/iteration_1/candidate_t1_1_layer_dnn_grow_complexity_regularized/is_training"
  op: "Less"
  input: "adanet/iteration_1/candidate_t1_1_layer_dnn_grow_complexity_regularized/add"
  input: "adanet/iteration_1/candidate_t1_1_layer_dnn_grow_complexity_regularized/is_training/y"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_1/candidate_t1_1_layer_dnn_grow_complexity_regularized/AssignMovingAvg/decay"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_1/candidate_t1_1_layer_dnn_grow_complexity_regularized/adanet_loss"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.10000000149011612
      }
    }
  }
}
node {
  name: "adanet/iteration_1/candidate_t1_1_layer_dnn_grow_complexity_regularized/AssignMovingAvg/adanet/iteration_1/candidate_t1_1_layer_dnn_grow_complexity_regularized/adanet_loss/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_1/candidate_t1_1_layer_dnn_grow_complexity_regularized/adanet_loss"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "adanet/iteration_1/candidate_t1_1_layer_dnn_grow_complexity_regularized/adanet/iteration_1/candidate_t1_1_layer_dnn_grow_complexity_regularized/adanet_loss/biased"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_1/candidate_t1_1_layer_dnn_grow_complexity_regularized/adanet_loss"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "adanet/iteration_1/candidate_t1_1_layer_dnn_grow_complexity_regularized/adanet/iteration_1/candidate_t1_1_layer_dnn_grow_complexity_regularized/adanet_loss/biased/Assign"
  op: "Assign"
  input: "adanet/iteration_1/candidate_t1_1_layer_dnn_grow_complexity_regularized/adanet/iteration_1/candidate_t1_1_layer_dnn_grow_complexity_regularized/adanet_loss/biased"
  input: "adanet/iteration_1/candidate_t1_1_layer_dnn_grow_complexity_regularized/AssignMovingAvg/adanet/iteration_1/candidate_t1_1_layer_dnn_grow_complexity_regularized/adanet_loss/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_1/candidate_t1_1_layer_dnn_grow_complexity_regularized/adanet_loss"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "adanet/iteration_1/candidate_t1_1_layer_dnn_grow_complexity_regularized/adanet/iteration_1/candidate_t1_1_layer_dnn_grow_complexity_regularized/adanet_loss/biased/read"
  op: "Identity"
  input: "adanet/iteration_1/candidate_t1_1_layer_dnn_grow_complexity_regularized/adanet/iteration_1/candidate_t1_1_layer_dnn_grow_complexity_regularized/adanet_loss/biased"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_1/candidate_t1_1_layer_dnn_grow_complexity_regularized/adanet_loss"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_1/candidate_t1_1_layer_dnn_grow_complexity_regularized/adanet/iteration_1/candidate_t1_1_layer_dnn_grow_complexity_regularized/adanet_loss/local_step/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_1/candidate_t1_1_layer_dnn_grow_complexity_regularized/adanet_loss"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "adanet/iteration_1/candidate_t1_1_layer_dnn_grow_complexity_regularized/adanet/iteration_1/candidate_t1_1_layer_dnn_grow_complexity_regularized/adanet_loss/local_step"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_1/candidate_t1_1_layer_dnn_grow_complexity_regularized/adanet_loss"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "adanet/iteration_1/candidate_t1_1_layer_dnn_grow_complexity_regularized/adanet/iteration_1/candidate_t1_1_layer_dnn_grow_complexity_regularized/adanet_loss/local_step/Assign"
  op: "Assign"
  input: "adanet/iteration_1/candidate_t1_1_layer_dnn_grow_complexity_regularized/adanet/iteration_1/candidate_t1_1_layer_dnn_grow_complexity_regularized/adanet_loss/local_step"
  input: "adanet/iteration_1/candidate_t1_1_layer_dnn_grow_complexity_regularized/adanet/iteration_1/candidate_t1_1_layer_dnn_grow_complexity_regularized/adanet_loss/local_step/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_1/candidate_t1_1_layer_dnn_grow_complexity_regularized/adanet_loss"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "adanet/iteration_1/candidate_t1_1_layer_dnn_grow_complexity_regularized/adanet/iteration_1/candidate_t1_1_layer_dnn_grow_complexity_regularized/adanet_loss/local_step/read"
  op: "Identity"
  input: "adanet/iteration_1/candidate_t1_1_layer_dnn_grow_complexity_regularized/adanet/iteration_1/candidate_t1_1_layer_dnn_grow_complexity_regularized/adanet_loss/local_step"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_1/candidate_t1_1_layer_dnn_grow_complexity_regularized/adanet_loss"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_1/candidate_t1_1_layer_dnn_grow_complexity_regularized/AssignMovingAvg/adanet/iteration_1/candidate_t1_1_layer_dnn_grow_complexity_regularized/adanet_loss/sub"
  op: "Sub"
  input: "adanet/iteration_1/candidate_t1_1_layer_dnn_grow_complexity_regularized/adanet/iteration_1/candidate_t1_1_layer_dnn_grow_complexity_regularized/adanet_loss/biased/read"
  input: "adanet/iteration_1/ensemble_t1_1_layer_dnn_grow_complexity_regularized/add_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_1/candidate_t1_1_layer_dnn_grow_complexity_regularized/adanet_loss"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_1/candidate_t1_1_layer_dnn_grow_complexity_regularized/AssignMovingAvg/adanet/iteration_1/candidate_t1_1_layer_dnn_grow_complexity_regularized/adanet_loss/mul"
  op: "Mul"
  input: "adanet/iteration_1/candidate_t1_1_layer_dnn_grow_complexity_regularized/AssignMovingAvg/adanet/iteration_1/candidate_t1_1_layer_dnn_grow_complexity_regularized/adanet_loss/sub"
  input: "adanet/iteration_1/candidate_t1_1_layer_dnn_grow_complexity_regularized/AssignMovingAvg/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_1/candidate_t1_1_layer_dnn_grow_complexity_regularized/adanet_loss"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_1/candidate_t1_1_layer_dnn_grow_complexity_regularized/AssignMovingAvg/adanet/iteration_1/candidate_t1_1_layer_dnn_grow_complexity_regularized/adanet_loss/adanet/iteration_1/candidate_t1_1_layer_dnn_grow_complexity_regularized/adanet/iteration_1/candidate_t1_1_layer_dnn_grow_complexity_regularized/adanet_loss"
  op: "AssignSub"
  input: "adanet/iteration_1/candidate_t1_1_layer_dnn_grow_complexity_regularized/adanet/iteration_1/candidate_t1_1_layer_dnn_grow_complexity_regularized/adanet_loss/biased"
  input: "adanet/iteration_1/candidate_t1_1_layer_dnn_grow_complexity_regularized/AssignMovingAvg/adanet/iteration_1/candidate_t1_1_layer_dnn_grow_complexity_regularized/adanet_loss/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_1/candidate_t1_1_layer_dnn_grow_complexity_regularized/adanet_loss"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "adanet/iteration_1/candidate_t1_1_layer_dnn_grow_complexity_regularized/AssignMovingAvg/adanet/iteration_1/candidate_t1_1_layer_dnn_grow_complexity_regularized/adanet_loss/AssignAdd/value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_1/candidate_t1_1_layer_dnn_grow_complexity_regularized/adanet_loss"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "adanet/iteration_1/candidate_t1_1_layer_dnn_grow_complexity_regularized/AssignMovingAvg/adanet/iteration_1/candidate_t1_1_layer_dnn_grow_complexity_regularized/adanet_loss/AssignAdd"
  op: "AssignAdd"
  input: "adanet/iteration_1/candidate_t1_1_layer_dnn_grow_complexity_regularized/adanet/iteration_1/candidate_t1_1_layer_dnn_grow_complexity_regularized/adanet_loss/local_step"
  input: "adanet/iteration_1/candidate_t1_1_layer_dnn_grow_complexity_regularized/AssignMovingAvg/adanet/iteration_1/candidate_t1_1_layer_dnn_grow_complexity_regularized/adanet_loss/AssignAdd/value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_1/candidate_t1_1_layer_dnn_grow_complexity_regularized/adanet_loss"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "adanet/iteration_1/candidate_t1_1_layer_dnn_grow_complexity_regularized/AssignMovingAvg/adanet/iteration_1/candidate_t1_1_layer_dnn_grow_complexity_regularized/adanet_loss/read"
  op: "Identity"
  input: "adanet/iteration_1/candidate_t1_1_layer_dnn_grow_complexity_regularized/adanet/iteration_1/candidate_t1_1_layer_dnn_grow_complexity_regularized/adanet_loss/biased"
  input: "^adanet/iteration_1/candidate_t1_1_layer_dnn_grow_complexity_regularized/AssignMovingAvg/adanet/iteration_1/candidate_t1_1_layer_dnn_grow_complexity_regularized/adanet_loss/AssignAdd"
  input: "^adanet/iteration_1/candidate_t1_1_layer_dnn_grow_complexity_regularized/AssignMovingAvg/adanet/iteration_1/candidate_t1_1_layer_dnn_grow_complexity_regularized/adanet_loss/adanet/iteration_1/candidate_t1_1_layer_dnn_grow_complexity_regularized/adanet/iteration_1/candidate_t1_1_layer_dnn_grow_complexity_regularized/adanet_loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_1/candidate_t1_1_layer_dnn_grow_complexity_regularized/adanet_loss"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_1/candidate_t1_1_layer_dnn_grow_complexity_regularized/AssignMovingAvg/adanet/iteration_1/candidate_t1_1_layer_dnn_grow_complexity_regularized/adanet_loss/sub_1/x"
  op: "Const"
  input: "^adanet/iteration_1/candidate_t1_1_layer_dnn_grow_complexity_regularized/AssignMovingAvg/adanet/iteration_1/candidate_t1_1_layer_dnn_grow_complexity_regularized/adanet_loss/AssignAdd"
  input: "^adanet/iteration_1/candidate_t1_1_layer_dnn_grow_complexity_regularized/AssignMovingAvg/adanet/iteration_1/candidate_t1_1_layer_dnn_grow_complexity_regularized/adanet_loss/adanet/iteration_1/candidate_t1_1_layer_dnn_grow_complexity_regularized/adanet/iteration_1/candidate_t1_1_layer_dnn_grow_complexity_regularized/adanet_loss"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_1/candidate_t1_1_layer_dnn_grow_complexity_regularized/adanet_loss"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "adanet/iteration_1/candidate_t1_1_layer_dnn_grow_complexity_regularized/AssignMovingAvg/adanet/iteration_1/candidate_t1_1_layer_dnn_grow_complexity_regularized/adanet_loss/sub_1"
  op: "Sub"
  input: "adanet/iteration_1/candidate_t1_1_layer_dnn_grow_complexity_regularized/AssignMovingAvg/adanet/iteration_1/candidate_t1_1_layer_dnn_grow_complexity_regularized/adanet_loss/sub_1/x"
  input: "adanet/iteration_1/candidate_t1_1_layer_dnn_grow_complexity_regularized/AssignMovingAvg/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_1/candidate_t1_1_layer_dnn_grow_complexity_regularized/adanet_loss"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_1/candidate_t1_1_layer_dnn_grow_complexity_regularized/AssignMovingAvg/adanet/iteration_1/candidate_t1_1_layer_dnn_grow_complexity_regularized/adanet_loss/read_1"
  op: "Identity"
  input: "adanet/iteration_1/candidate_t1_1_layer_dnn_grow_complexity_regularized/adanet/iteration_1/candidate_t1_1_layer_dnn_grow_complexity_regularized/adanet_loss/local_step"
  input: "^adanet/iteration_1/candidate_t1_1_layer_dnn_grow_complexity_regularized/AssignMovingAvg/adanet/iteration_1/candidate_t1_1_layer_dnn_grow_complexity_regularized/adanet_loss/AssignAdd"
  input: "^adanet/iteration_1/candidate_t1_1_layer_dnn_grow_complexity_regularized/AssignMovingAvg/adanet/iteration_1/candidate_t1_1_layer_dnn_grow_complexity_regularized/adanet_loss/adanet/iteration_1/candidate_t1_1_layer_dnn_grow_complexity_regularized/adanet/iteration_1/candidate_t1_1_layer_dnn_grow_complexity_regularized/adanet_loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_1/candidate_t1_1_layer_dnn_grow_complexity_regularized/adanet_loss"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_1/candidate_t1_1_layer_dnn_grow_complexity_regularized/AssignMovingAvg/adanet/iteration_1/candidate_t1_1_layer_dnn_grow_complexity_regularized/adanet_loss/Pow"
  op: "Pow"
  input: "adanet/iteration_1/candidate_t1_1_layer_dnn_grow_complexity_regularized/AssignMovingAvg/adanet/iteration_1/candidate_t1_1_layer_dnn_grow_complexity_regularized/adanet_loss/sub_1"
  input: "adanet/iteration_1/candidate_t1_1_layer_dnn_grow_complexity_regularized/AssignMovingAvg/adanet/iteration_1/candidate_t1_1_layer_dnn_grow_complexity_regularized/adanet_loss/read_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_1/candidate_t1_1_layer_dnn_grow_complexity_regularized/adanet_loss"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_1/candidate_t1_1_layer_dnn_grow_complexity_regularized/AssignMovingAvg/adanet/iteration_1/candidate_t1_1_layer_dnn_grow_complexity_regularized/adanet_loss/sub_2/x"
  op: "Const"
  input: "^adanet/iteration_1/candidate_t1_1_layer_dnn_grow_complexity_regularized/AssignMovingAvg/adanet/iteration_1/candidate_t1_1_layer_dnn_grow_complexity_regularized/adanet_loss/AssignAdd"
  input: "^adanet/iteration_1/candidate_t1_1_layer_dnn_grow_complexity_regularized/AssignMovingAvg/adanet/iteration_1/candidate_t1_1_layer_dnn_grow_complexity_regularized/adanet_loss/adanet/iteration_1/candidate_t1_1_layer_dnn_grow_complexity_regularized/adanet/iteration_1/candidate_t1_1_layer_dnn_grow_complexity_regularized/adanet_loss"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_1/candidate_t1_1_layer_dnn_grow_complexity_regularized/adanet_loss"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "adanet/iteration_1/candidate_t1_1_layer_dnn_grow_complexity_regularized/AssignMovingAvg/adanet/iteration_1/candidate_t1_1_layer_dnn_grow_complexity_regularized/adanet_loss/sub_2"
  op: "Sub"
  input: "adanet/iteration_1/candidate_t1_1_layer_dnn_grow_complexity_regularized/AssignMovingAvg/adanet/iteration_1/candidate_t1_1_layer_dnn_grow_complexity_regularized/adanet_loss/sub_2/x"
  input: "adanet/iteration_1/candidate_t1_1_layer_dnn_grow_complexity_regularized/AssignMovingAvg/adanet/iteration_1/candidate_t1_1_layer_dnn_grow_complexity_regularized/adanet_loss/Pow"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_1/candidate_t1_1_layer_dnn_grow_complexity_regularized/adanet_loss"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_1/candidate_t1_1_layer_dnn_grow_complexity_regularized/AssignMovingAvg/adanet/iteration_1/candidate_t1_1_layer_dnn_grow_complexity_regularized/adanet_loss/truediv"
  op: "RealDiv"
  input: "adanet/iteration_1/candidate_t1_1_layer_dnn_grow_complexity_regularized/AssignMovingAvg/adanet/iteration_1/candidate_t1_1_layer_dnn_grow_complexity_regularized/adanet_loss/read"
  input: "adanet/iteration_1/candidate_t1_1_layer_dnn_grow_complexity_regularized/AssignMovingAvg/adanet/iteration_1/candidate_t1_1_layer_dnn_grow_complexity_regularized/adanet_loss/sub_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_1/candidate_t1_1_layer_dnn_grow_complexity_regularized/adanet_loss"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_1/candidate_t1_1_layer_dnn_grow_complexity_regularized/AssignMovingAvg/adanet/iteration_1/candidate_t1_1_layer_dnn_grow_complexity_regularized/adanet_loss/sub_3"
  op: "Sub"
  input: "adanet/iteration_1/candidate_t1_1_layer_dnn_grow_complexity_regularized/adanet_loss/read"
  input: "adanet/iteration_1/candidate_t1_1_layer_dnn_grow_complexity_regularized/AssignMovingAvg/adanet/iteration_1/candidate_t1_1_layer_dnn_grow_complexity_regularized/adanet_loss/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_1/candidate_t1_1_layer_dnn_grow_complexity_regularized/adanet_loss"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_1/candidate_t1_1_layer_dnn_grow_complexity_regularized/AssignMovingAvg"
  op: "AssignSub"
  input: "adanet/iteration_1/candidate_t1_1_layer_dnn_grow_complexity_regularized/adanet_loss"
  input: "adanet/iteration_1/candidate_t1_1_layer_dnn_grow_complexity_regularized/AssignMovingAvg/adanet/iteration_1/candidate_t1_1_layer_dnn_grow_complexity_regularized/adanet_loss/sub_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_1/candidate_t1_1_layer_dnn_grow_complexity_regularized/adanet_loss"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "adanet/iteration_1/candidate_t1_1_layer_dnn_grow_complexity_regularized/read"
  op: "Identity"
  input: "adanet/iteration_1/candidate_t1_1_layer_dnn_grow_complexity_regularized/adanet_loss"
  input: "^adanet/iteration_1/candidate_t1_1_layer_dnn_grow_complexity_regularized/AssignMovingAvg"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_1/candidate_t1_1_layer_dnn_grow_complexity_regularized/t1_1_layer_dnn_grow_complexity_regularized/adanet_loss/adanet/adanet_weighted_ensemble/tags"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "adanet_loss/adanet/adanet_weighted_ensemble"
      }
    }
  }
}
node {
  name: "adanet/iteration_1/candidate_t1_1_layer_dnn_grow_complexity_regularized/t1_1_layer_dnn_grow_complexity_regularized/adanet_loss/adanet/adanet_weighted_ensemble"
  op: "ScalarSummary"
  input: "adanet/iteration_1/candidate_t1_1_layer_dnn_grow_complexity_regularized/t1_1_layer_dnn_grow_complexity_regularized/adanet_loss/adanet/adanet_weighted_ensemble/tags"
  input: "adanet/iteration_1/candidate_t1_1_layer_dnn_grow_complexity_regularized/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_1/mean/total/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_1/mean/total"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "adanet/iteration_1/mean/total"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_1/mean/total"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "adanet/iteration_1/mean/total/Assign"
  op: "Assign"
  input: "adanet/iteration_1/mean/total"
  input: "adanet/iteration_1/mean/total/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_1/mean/total"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "adanet/iteration_1/mean/total/read"
  op: "Identity"
  input: "adanet/iteration_1/mean/total"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_1/mean/total"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_1/mean/count/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_1/mean/count"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "adanet/iteration_1/mean/count"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_1/mean/count"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "adanet/iteration_1/mean/count/Assign"
  op: "Assign"
  input: "adanet/iteration_1/mean/count"
  input: "adanet/iteration_1/mean/count/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_1/mean/count"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "adanet/iteration_1/mean/count/read"
  op: "Identity"
  input: "adanet/iteration_1/mean/count"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_1/mean/count"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_1/mean/Size"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "adanet/iteration_1/mean/ToFloat"
  op: "Cast"
  input: "adanet/iteration_1/mean/Size"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_1/mean/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_1/mean/Sum"
  op: "Sum"
  input: "adanet/iteration_1/ensemble_t1_1_layer_dnn_grow_complexity_regularized/add_4"
  input: "adanet/iteration_1/mean/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "adanet/iteration_1/mean/AssignAdd"
  op: "AssignAdd"
  input: "adanet/iteration_1/mean/total"
  input: "adanet/iteration_1/mean/Sum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_1/mean/total"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "adanet/iteration_1/mean/AssignAdd_1"
  op: "AssignAdd"
  input: "adanet/iteration_1/mean/count"
  input: "adanet/iteration_1/mean/ToFloat"
  input: "^adanet/iteration_1/ensemble_t1_1_layer_dnn_grow_complexity_regularized/add_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_1/mean/count"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "adanet/iteration_1/mean/Maximum/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "adanet/iteration_1/mean/Maximum"
  op: "Maximum"
  input: "adanet/iteration_1/mean/count/read"
  input: "adanet/iteration_1/mean/Maximum/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_1/mean/value"
  op: "DivNoNan"
  input: "adanet/iteration_1/mean/total/read"
  input: "adanet/iteration_1/mean/Maximum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_1/mean/Maximum_1/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "adanet/iteration_1/mean/Maximum_1"
  op: "Maximum"
  input: "adanet/iteration_1/mean/AssignAdd_1"
  input: "adanet/iteration_1/mean/Maximum_1/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_1/mean/update_op"
  op: "DivNoNan"
  input: "adanet/iteration_1/mean/AssignAdd"
  input: "adanet/iteration_1/mean/Maximum_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_1/ensemble_t1_2_layer_dnn_grow_complexity_regularized/weighted_subnetwork_0/Shape"
  op: "Shape"
  input: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/dropout/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "adanet/iteration_1/ensemble_t1_2_layer_dnn_grow_complexity_regularized/weighted_subnetwork_0/strided_slice/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "adanet/iteration_1/ensemble_t1_2_layer_dnn_grow_complexity_regularized/weighted_subnetwork_0/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "adanet/iteration_1/ensemble_t1_2_layer_dnn_grow_complexity_regularized/weighted_subnetwork_0/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "adanet/iteration_1/ensemble_t1_2_layer_dnn_grow_complexity_regularized/weighted_subnetwork_0/strided_slice"
  op: "StridedSlice"
  input: "adanet/iteration_1/ensemble_t1_2_layer_dnn_grow_complexity_regularized/weighted_subnetwork_0/Shape"
  input: "adanet/iteration_1/ensemble_t1_2_layer_dnn_grow_complexity_regularized/weighted_subnetwork_0/strided_slice/stack"
  input: "adanet/iteration_1/ensemble_t1_2_layer_dnn_grow_complexity_regularized/weighted_subnetwork_0/strided_slice/stack_1"
  input: "adanet/iteration_1/ensemble_t1_2_layer_dnn_grow_complexity_regularized/weighted_subnetwork_0/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "adanet/iteration_1/ensemble_t1_2_layer_dnn_grow_complexity_regularized/weighted_subnetwork_0/logits/mixture_weight/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_1/ensemble_t1_2_layer_dnn_grow_complexity_regularized/weighted_subnetwork_0/logits/mixture_weight"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.5
      }
    }
  }
}
node {
  name: "adanet/iteration_1/ensemble_t1_2_layer_dnn_grow_complexity_regularized/weighted_subnetwork_0/logits/mixture_weight"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_1/ensemble_t1_2_layer_dnn_grow_complexity_regularized/weighted_subnetwork_0/logits/mixture_weight"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "adanet/iteration_1/ensemble_t1_2_layer_dnn_grow_complexity_regularized/weighted_subnetwork_0/logits/mixture_weight/Assign"
  op: "Assign"
  input: "adanet/iteration_1/ensemble_t1_2_layer_dnn_grow_complexity_regularized/weighted_subnetwork_0/logits/mixture_weight"
  input: "adanet/iteration_1/ensemble_t1_2_layer_dnn_grow_complexity_regularized/weighted_subnetwork_0/logits/mixture_weight/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_1/ensemble_t1_2_layer_dnn_grow_complexity_regularized/weighted_subnetwork_0/logits/mixture_weight"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "adanet/iteration_1/ensemble_t1_2_layer_dnn_grow_complexity_regularized/weighted_subnetwork_0/logits/mixture_weight/read"
  op: "Identity"
  input: "adanet/iteration_1/ensemble_t1_2_layer_dnn_grow_complexity_regularized/weighted_subnetwork_0/logits/mixture_weight"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_1/ensemble_t1_2_layer_dnn_grow_complexity_regularized/weighted_subnetwork_0/logits/mixture_weight"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_1/ensemble_t1_2_layer_dnn_grow_complexity_regularized/weighted_subnetwork_0/logits/Mul"
  op: "Mul"
  input: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/dense_1/BiasAdd"
  input: "adanet/iteration_1/ensemble_t1_2_layer_dnn_grow_complexity_regularized/weighted_subnetwork_0/logits/mixture_weight/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_1/ensemble_t1_2_layer_dnn_grow_complexity_regularized/weighted_subnetwork_1/Shape"
  op: "Shape"
  input: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense_1/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "adanet/iteration_1/ensemble_t1_2_layer_dnn_grow_complexity_regularized/weighted_subnetwork_1/strided_slice/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "adanet/iteration_1/ensemble_t1_2_layer_dnn_grow_complexity_regularized/weighted_subnetwork_1/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "adanet/iteration_1/ensemble_t1_2_layer_dnn_grow_complexity_regularized/weighted_subnetwork_1/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "adanet/iteration_1/ensemble_t1_2_layer_dnn_grow_complexity_regularized/weighted_subnetwork_1/strided_slice"
  op: "StridedSlice"
  input: "adanet/iteration_1/ensemble_t1_2_layer_dnn_grow_complexity_regularized/weighted_subnetwork_1/Shape"
  input: "adanet/iteration_1/ensemble_t1_2_layer_dnn_grow_complexity_regularized/weighted_subnetwork_1/strided_slice/stack"
  input: "adanet/iteration_1/ensemble_t1_2_layer_dnn_grow_complexity_regularized/weighted_subnetwork_1/strided_slice/stack_1"
  input: "adanet/iteration_1/ensemble_t1_2_layer_dnn_grow_complexity_regularized/weighted_subnetwork_1/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "adanet/iteration_1/ensemble_t1_2_layer_dnn_grow_complexity_regularized/weighted_subnetwork_1/logits/mixture_weight/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_1/ensemble_t1_2_layer_dnn_grow_complexity_regularized/weighted_subnetwork_1/logits/mixture_weight"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.5
      }
    }
  }
}
node {
  name: "adanet/iteration_1/ensemble_t1_2_layer_dnn_grow_complexity_regularized/weighted_subnetwork_1/logits/mixture_weight"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_1/ensemble_t1_2_layer_dnn_grow_complexity_regularized/weighted_subnetwork_1/logits/mixture_weight"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "adanet/iteration_1/ensemble_t1_2_layer_dnn_grow_complexity_regularized/weighted_subnetwork_1/logits/mixture_weight/Assign"
  op: "Assign"
  input: "adanet/iteration_1/ensemble_t1_2_layer_dnn_grow_complexity_regularized/weighted_subnetwork_1/logits/mixture_weight"
  input: "adanet/iteration_1/ensemble_t1_2_layer_dnn_grow_complexity_regularized/weighted_subnetwork_1/logits/mixture_weight/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_1/ensemble_t1_2_layer_dnn_grow_complexity_regularized/weighted_subnetwork_1/logits/mixture_weight"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "adanet/iteration_1/ensemble_t1_2_layer_dnn_grow_complexity_regularized/weighted_subnetwork_1/logits/mixture_weight/read"
  op: "Identity"
  input: "adanet/iteration_1/ensemble_t1_2_layer_dnn_grow_complexity_regularized/weighted_subnetwork_1/logits/mixture_weight"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_1/ensemble_t1_2_layer_dnn_grow_complexity_regularized/weighted_subnetwork_1/logits/mixture_weight"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_1/ensemble_t1_2_layer_dnn_grow_complexity_regularized/weighted_subnetwork_1/logits/Mul"
  op: "Mul"
  input: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense_2/BiasAdd"
  input: "adanet/iteration_1/ensemble_t1_2_layer_dnn_grow_complexity_regularized/weighted_subnetwork_1/logits/mixture_weight/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_1/ensemble_t1_2_layer_dnn_grow_complexity_regularized/bias/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_1/ensemble_t1_2_layer_dnn_grow_complexity_regularized/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 10
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "adanet/iteration_1/ensemble_t1_2_layer_dnn_grow_complexity_regularized/bias"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_1/ensemble_t1_2_layer_dnn_grow_complexity_regularized/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 10
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "adanet/iteration_1/ensemble_t1_2_layer_dnn_grow_complexity_regularized/bias/Assign"
  op: "Assign"
  input: "adanet/iteration_1/ensemble_t1_2_layer_dnn_grow_complexity_regularized/bias"
  input: "adanet/iteration_1/ensemble_t1_2_layer_dnn_grow_complexity_regularized/bias/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_1/ensemble_t1_2_layer_dnn_grow_complexity_regularized/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "adanet/iteration_1/ensemble_t1_2_layer_dnn_grow_complexity_regularized/bias/read"
  op: "Identity"
  input: "adanet/iteration_1/ensemble_t1_2_layer_dnn_grow_complexity_regularized/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_1/ensemble_t1_2_layer_dnn_grow_complexity_regularized/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_1/ensemble_t1_2_layer_dnn_grow_complexity_regularized/logits/Add"
  op: "Add"
  input: "adanet/iteration_1/ensemble_t1_2_layer_dnn_grow_complexity_regularized/bias/read"
  input: "adanet/iteration_1/ensemble_t1_2_layer_dnn_grow_complexity_regularized/weighted_subnetwork_0/logits/Mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_1/ensemble_t1_2_layer_dnn_grow_complexity_regularized/logits/Add_1"
  op: "Add"
  input: "adanet/iteration_1/ensemble_t1_2_layer_dnn_grow_complexity_regularized/logits/Add"
  input: "adanet/iteration_1/ensemble_t1_2_layer_dnn_grow_complexity_regularized/weighted_subnetwork_1/logits/Mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_1/ensemble_t1_2_layer_dnn_grow_complexity_regularized/norm/Abs"
  op: "Abs"
  input: "adanet/iteration_1/ensemble_t1_2_layer_dnn_grow_complexity_regularized/weighted_subnetwork_0/logits/mixture_weight/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_1/ensemble_t1_2_layer_dnn_grow_complexity_regularized/norm/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_1/ensemble_t1_2_layer_dnn_grow_complexity_regularized/norm/Sum"
  op: "Sum"
  input: "adanet/iteration_1/ensemble_t1_2_layer_dnn_grow_complexity_regularized/norm/Abs"
  input: "adanet/iteration_1/ensemble_t1_2_layer_dnn_grow_complexity_regularized/norm/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "adanet/iteration_1/ensemble_t1_2_layer_dnn_grow_complexity_regularized/norm/Squeeze"
  op: "Squeeze"
  input: "adanet/iteration_1/ensemble_t1_2_layer_dnn_grow_complexity_regularized/norm/Sum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
      }
    }
  }
}
node {
  name: "adanet/iteration_1/ensemble_t1_2_layer_dnn_grow_complexity_regularized/add/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "adanet/iteration_1/ensemble_t1_2_layer_dnn_grow_complexity_regularized/add"
  op: "Add"
  input: "adanet/iteration_1/ensemble_t1_2_layer_dnn_grow_complexity_regularized/add/x"
  input: "adanet/iteration_1/ensemble_t1_2_layer_dnn_grow_complexity_regularized/norm/Squeeze"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_1/ensemble_t1_2_layer_dnn_grow_complexity_regularized/zero"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "adanet/iteration_1/ensemble_t1_2_layer_dnn_grow_complexity_regularized/add_1/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "adanet/iteration_1/ensemble_t1_2_layer_dnn_grow_complexity_regularized/add_1"
  op: "Add"
  input: "adanet/iteration_1/ensemble_t1_2_layer_dnn_grow_complexity_regularized/add_1/x"
  input: "adanet/iteration_1/ensemble_t1_2_layer_dnn_grow_complexity_regularized/zero"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_1/ensemble_t1_2_layer_dnn_grow_complexity_regularized/norm_1/Abs"
  op: "Abs"
  input: "adanet/iteration_1/ensemble_t1_2_layer_dnn_grow_complexity_regularized/weighted_subnetwork_1/logits/mixture_weight/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_1/ensemble_t1_2_layer_dnn_grow_complexity_regularized/norm_1/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_1/ensemble_t1_2_layer_dnn_grow_complexity_regularized/norm_1/Sum"
  op: "Sum"
  input: "adanet/iteration_1/ensemble_t1_2_layer_dnn_grow_complexity_regularized/norm_1/Abs"
  input: "adanet/iteration_1/ensemble_t1_2_layer_dnn_grow_complexity_regularized/norm_1/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "adanet/iteration_1/ensemble_t1_2_layer_dnn_grow_complexity_regularized/norm_1/Squeeze"
  op: "Squeeze"
  input: "adanet/iteration_1/ensemble_t1_2_layer_dnn_grow_complexity_regularized/norm_1/Sum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
      }
    }
  }
}
node {
  name: "adanet/iteration_1/ensemble_t1_2_layer_dnn_grow_complexity_regularized/add_2"
  op: "Add"
  input: "adanet/iteration_1/ensemble_t1_2_layer_dnn_grow_complexity_regularized/add"
  input: "adanet/iteration_1/ensemble_t1_2_layer_dnn_grow_complexity_regularized/norm_1/Squeeze"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_1/ensemble_t1_2_layer_dnn_grow_complexity_regularized/zero_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "adanet/iteration_1/ensemble_t1_2_layer_dnn_grow_complexity_regularized/add_3"
  op: "Add"
  input: "adanet/iteration_1/ensemble_t1_2_layer_dnn_grow_complexity_regularized/add_1"
  input: "adanet/iteration_1/ensemble_t1_2_layer_dnn_grow_complexity_regularized/zero_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_1/ensemble_t1_2_layer_dnn_grow_complexity_regularized/t1_2_layer_dnn_grow_complexity_regularized/complexity_regularization/adanet/adanet_weighted_ensemble/tags"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "complexity_regularization/adanet/adanet_weighted_ensemble"
      }
    }
  }
}
node {
  name: "adanet/iteration_1/ensemble_t1_2_layer_dnn_grow_complexity_regularized/t1_2_layer_dnn_grow_complexity_regularized/complexity_regularization/adanet/adanet_weighted_ensemble"
  op: "ScalarSummary"
  input: "adanet/iteration_1/ensemble_t1_2_layer_dnn_grow_complexity_regularized/t1_2_layer_dnn_grow_complexity_regularized/complexity_regularization/adanet/adanet_weighted_ensemble/tags"
  input: "adanet/iteration_1/ensemble_t1_2_layer_dnn_grow_complexity_regularized/add_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_1/ensemble_t1_2_layer_dnn_grow_complexity_regularized/t1_2_layer_dnn_grow_complexity_regularized/mixture_weights/adanet/adanet_weighted_ensemble/tag"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "mixture_weights/adanet/adanet_weighted_ensemble"
      }
    }
  }
}
node {
  name: "adanet/iteration_1/ensemble_t1_2_layer_dnn_grow_complexity_regularized/t1_2_layer_dnn_grow_complexity_regularized/mixture_weights/adanet/adanet_weighted_ensemble/values"
  op: "Pack"
  input: "adanet/iteration_1/ensemble_t1_2_layer_dnn_grow_complexity_regularized/norm/Squeeze"
  input: "adanet/iteration_1/ensemble_t1_2_layer_dnn_grow_complexity_regularized/norm_1/Squeeze"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "adanet/iteration_1/ensemble_t1_2_layer_dnn_grow_complexity_regularized/t1_2_layer_dnn_grow_complexity_regularized/mixture_weights/adanet/adanet_weighted_ensemble"
  op: "HistogramSummary"
  input: "adanet/iteration_1/ensemble_t1_2_layer_dnn_grow_complexity_regularized/t1_2_layer_dnn_grow_complexity_regularized/mixture_weights/adanet/adanet_weighted_ensemble/tag"
  input: "adanet/iteration_1/ensemble_t1_2_layer_dnn_grow_complexity_regularized/t1_2_layer_dnn_grow_complexity_regularized/mixture_weights/adanet/adanet_weighted_ensemble/values"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_1/ensemble_t1_2_layer_dnn_grow_complexity_regularized/t1_2_layer_dnn_grow_complexity_regularized/mixture_weight_norms/adanet/adanet_weighted_ensemble/subnetwork_0/tags"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "mixture_weight_norms/adanet/adanet_weighted_ensemble/subnetwork_0"
      }
    }
  }
}
node {
  name: "adanet/iteration_1/ensemble_t1_2_layer_dnn_grow_complexity_regularized/t1_2_layer_dnn_grow_complexity_regularized/mixture_weight_norms/adanet/adanet_weighted_ensemble/subnetwork_0"
  op: "ScalarSummary"
  input: "adanet/iteration_1/ensemble_t1_2_layer_dnn_grow_complexity_regularized/t1_2_layer_dnn_grow_complexity_regularized/mixture_weight_norms/adanet/adanet_weighted_ensemble/subnetwork_0/tags"
  input: "adanet/iteration_1/ensemble_t1_2_layer_dnn_grow_complexity_regularized/norm/Squeeze"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_1/ensemble_t1_2_layer_dnn_grow_complexity_regularized/truediv"
  op: "RealDiv"
  input: "adanet/iteration_1/ensemble_t1_2_layer_dnn_grow_complexity_regularized/norm/Squeeze"
  input: "adanet/iteration_1/ensemble_t1_2_layer_dnn_grow_complexity_regularized/add_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_1/ensemble_t1_2_layer_dnn_grow_complexity_regularized/t1_2_layer_dnn_grow_complexity_regularized/mixture_weight_fractions/adanet/adanet_weighted_ensemble/subnetwork_0/tags"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "mixture_weight_fractions/adanet/adanet_weighted_ensemble/subnetwork_0"
      }
    }
  }
}
node {
  name: "adanet/iteration_1/ensemble_t1_2_layer_dnn_grow_complexity_regularized/t1_2_layer_dnn_grow_complexity_regularized/mixture_weight_fractions/adanet/adanet_weighted_ensemble/subnetwork_0"
  op: "ScalarSummary"
  input: "adanet/iteration_1/ensemble_t1_2_layer_dnn_grow_complexity_regularized/t1_2_layer_dnn_grow_complexity_regularized/mixture_weight_fractions/adanet/adanet_weighted_ensemble/subnetwork_0/tags"
  input: "adanet/iteration_1/ensemble_t1_2_layer_dnn_grow_complexity_regularized/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_1/ensemble_t1_2_layer_dnn_grow_complexity_regularized/t1_2_layer_dnn_grow_complexity_regularized/mixture_weight_norms/adanet/adanet_weighted_ensemble/subnetwork_1/tags"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "mixture_weight_norms/adanet/adanet_weighted_ensemble/subnetwork_1"
      }
    }
  }
}
node {
  name: "adanet/iteration_1/ensemble_t1_2_layer_dnn_grow_complexity_regularized/t1_2_layer_dnn_grow_complexity_regularized/mixture_weight_norms/adanet/adanet_weighted_ensemble/subnetwork_1"
  op: "ScalarSummary"
  input: "adanet/iteration_1/ensemble_t1_2_layer_dnn_grow_complexity_regularized/t1_2_layer_dnn_grow_complexity_regularized/mixture_weight_norms/adanet/adanet_weighted_ensemble/subnetwork_1/tags"
  input: "adanet/iteration_1/ensemble_t1_2_layer_dnn_grow_complexity_regularized/norm_1/Squeeze"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_1/ensemble_t1_2_layer_dnn_grow_complexity_regularized/truediv_1"
  op: "RealDiv"
  input: "adanet/iteration_1/ensemble_t1_2_layer_dnn_grow_complexity_regularized/norm_1/Squeeze"
  input: "adanet/iteration_1/ensemble_t1_2_layer_dnn_grow_complexity_regularized/add_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_1/ensemble_t1_2_layer_dnn_grow_complexity_regularized/t1_2_layer_dnn_grow_complexity_regularized/mixture_weight_fractions/adanet/adanet_weighted_ensemble/subnetwork_1/tags"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "mixture_weight_fractions/adanet/adanet_weighted_ensemble/subnetwork_1"
      }
    }
  }
}
node {
  name: "adanet/iteration_1/ensemble_t1_2_layer_dnn_grow_complexity_regularized/t1_2_layer_dnn_grow_complexity_regularized/mixture_weight_fractions/adanet/adanet_weighted_ensemble/subnetwork_1"
  op: "ScalarSummary"
  input: "adanet/iteration_1/ensemble_t1_2_layer_dnn_grow_complexity_regularized/t1_2_layer_dnn_grow_complexity_regularized/mixture_weight_fractions/adanet/adanet_weighted_ensemble/subnetwork_1/tags"
  input: "adanet/iteration_1/ensemble_t1_2_layer_dnn_grow_complexity_regularized/truediv_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_1/ensemble_t1_2_layer_dnn_grow_complexity_regularized/head/logits/Shape"
  op: "Shape"
  input: "adanet/iteration_1/ensemble_t1_2_layer_dnn_grow_complexity_regularized/logits/Add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "adanet/iteration_1/ensemble_t1_2_layer_dnn_grow_complexity_regularized/head/logits/assert_rank_at_least/rank"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "adanet/iteration_1/ensemble_t1_2_layer_dnn_grow_complexity_regularized/head/logits/assert_rank_at_least/assert_type/statically_determined_correct_type"
  op: "NoOp"
}
node {
  name: "adanet/iteration_1/ensemble_t1_2_layer_dnn_grow_complexity_regularized/head/logits/assert_rank_at_least/static_checks_determined_all_ok"
  op: "NoOp"
}
node {
  name: "adanet/iteration_1/ensemble_t1_2_layer_dnn_grow_complexity_regularized/head/predictions/class_ids/dimension"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "adanet/iteration_1/ensemble_t1_2_layer_dnn_grow_complexity_regularized/head/predictions/class_ids"
  op: "ArgMax"
  input: "adanet/iteration_1/ensemble_t1_2_layer_dnn_grow_complexity_regularized/logits/Add_1"
  input: "adanet/iteration_1/ensemble_t1_2_layer_dnn_grow_complexity_regularized/head/predictions/class_ids/dimension"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "output_type"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "adanet/iteration_1/ensemble_t1_2_layer_dnn_grow_complexity_regularized/head/predictions/ExpandDims/dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "adanet/iteration_1/ensemble_t1_2_layer_dnn_grow_complexity_regularized/head/predictions/ExpandDims"
  op: "ExpandDims"
  input: "adanet/iteration_1/ensemble_t1_2_layer_dnn_grow_complexity_regularized/head/predictions/class_ids"
  input: "adanet/iteration_1/ensemble_t1_2_layer_dnn_grow_complexity_regularized/head/predictions/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_1/ensemble_t1_2_layer_dnn_grow_complexity_regularized/head/predictions/str_classes"
  op: "AsString"
  input: "adanet/iteration_1/ensemble_t1_2_layer_dnn_grow_complexity_regularized/head/predictions/ExpandDims"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "fill"
    value {
      s: ""
    }
  }
  attr {
    key: "precision"
    value {
      i: -1
    }
  }
  attr {
    key: "scientific"
    value {
      b: false
    }
  }
  attr {
    key: "shortest"
    value {
      b: false
    }
  }
  attr {
    key: "width"
    value {
      i: -1
    }
  }
}
node {
  name: "adanet/iteration_1/ensemble_t1_2_layer_dnn_grow_complexity_regularized/head/predictions/probabilities"
  op: "Softmax"
  input: "adanet/iteration_1/ensemble_t1_2_layer_dnn_grow_complexity_regularized/logits/Add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_1/ensemble_t1_2_layer_dnn_grow_complexity_regularized/head/labels/ExpandDims/dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "adanet/iteration_1/ensemble_t1_2_layer_dnn_grow_complexity_regularized/head/labels/ExpandDims"
  op: "ExpandDims"
  input: "IteratorGetNext:1"
  input: "adanet/iteration_1/ensemble_t1_2_layer_dnn_grow_complexity_regularized/head/labels/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_1/ensemble_t1_2_layer_dnn_grow_complexity_regularized/head/labels/Shape"
  op: "Shape"
  input: "adanet/iteration_1/ensemble_t1_2_layer_dnn_grow_complexity_regularized/head/labels/ExpandDims"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "adanet/iteration_1/ensemble_t1_2_layer_dnn_grow_complexity_regularized/head/labels/Shape_1"
  op: "Shape"
  input: "adanet/iteration_1/ensemble_t1_2_layer_dnn_grow_complexity_regularized/logits/Add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "adanet/iteration_1/ensemble_t1_2_layer_dnn_grow_complexity_regularized/head/labels/assert_rank_at_least/rank"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "adanet/iteration_1/ensemble_t1_2_layer_dnn_grow_complexity_regularized/head/labels/assert_rank_at_least/Shape"
  op: "Shape"
  input: "adanet/iteration_1/ensemble_t1_2_layer_dnn_grow_complexity_regularized/head/labels/ExpandDims"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "adanet/iteration_1/ensemble_t1_2_layer_dnn_grow_complexity_regularized/head/labels/assert_rank_at_least/assert_type/statically_determined_correct_type"
  op: "NoOp"
}
node {
  name: "adanet/iteration_1/ensemble_t1_2_layer_dnn_grow_complexity_regularized/head/labels/assert_rank_at_least/static_checks_determined_all_ok"
  op: "NoOp"
}
node {
  name: "adanet/iteration_1/ensemble_t1_2_layer_dnn_grow_complexity_regularized/head/labels/strided_slice/stack"
  op: "Const"
  input: "^adanet/iteration_1/ensemble_t1_2_layer_dnn_grow_complexity_regularized/head/labels/assert_rank_at_least/static_checks_determined_all_ok"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "adanet/iteration_1/ensemble_t1_2_layer_dnn_grow_complexity_regularized/head/labels/strided_slice/stack_1"
  op: "Const"
  input: "^adanet/iteration_1/ensemble_t1_2_layer_dnn_grow_complexity_regularized/head/labels/assert_rank_at_least/static_checks_determined_all_ok"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "adanet/iteration_1/ensemble_t1_2_layer_dnn_grow_complexity_regularized/head/labels/strided_slice/stack_2"
  op: "Const"
  input: "^adanet/iteration_1/ensemble_t1_2_layer_dnn_grow_complexity_regularized/head/labels/assert_rank_at_least/static_checks_determined_all_ok"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "adanet/iteration_1/ensemble_t1_2_layer_dnn_grow_complexity_regularized/head/labels/strided_slice"
  op: "StridedSlice"
  input: "adanet/iteration_1/ensemble_t1_2_layer_dnn_grow_complexity_regularized/head/labels/Shape_1"
  input: "adanet/iteration_1/ensemble_t1_2_layer_dnn_grow_complexity_regularized/head/labels/strided_slice/stack"
  input: "adanet/iteration_1/ensemble_t1_2_layer_dnn_grow_complexity_regularized/head/labels/strided_slice/stack_1"
  input: "adanet/iteration_1/ensemble_t1_2_layer_dnn_grow_complexity_regularized/head/labels/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "adanet/iteration_1/ensemble_t1_2_layer_dnn_grow_complexity_regularized/head/labels/concat/values_1"
  op: "Const"
  input: "^adanet/iteration_1/ensemble_t1_2_layer_dnn_grow_complexity_regularized/head/labels/assert_rank_at_least/static_checks_determined_all_ok"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "adanet/iteration_1/ensemble_t1_2_layer_dnn_grow_complexity_regularized/head/labels/concat/axis"
  op: "Const"
  input: "^adanet/iteration_1/ensemble_t1_2_layer_dnn_grow_complexity_regularized/head/labels/assert_rank_at_least/static_checks_determined_all_ok"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "adanet/iteration_1/ensemble_t1_2_layer_dnn_grow_complexity_regularized/head/labels/concat"
  op: "ConcatV2"
  input: "adanet/iteration_1/ensemble_t1_2_layer_dnn_grow_complexity_regularized/head/labels/strided_slice"
  input: "adanet/iteration_1/ensemble_t1_2_layer_dnn_grow_complexity_regularized/head/labels/concat/values_1"
  input: "adanet/iteration_1/ensemble_t1_2_layer_dnn_grow_complexity_regularized/head/labels/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_1/ensemble_t1_2_layer_dnn_grow_complexity_regularized/head/labels/assert_equal/Equal"
  op: "Equal"
  input: "adanet/iteration_1/ensemble_t1_2_layer_dnn_grow_complexity_regularized/head/labels/concat"
  input: "adanet/iteration_1/ensemble_t1_2_layer_dnn_grow_complexity_regularized/head/labels/Shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_1/ensemble_t1_2_layer_dnn_grow_complexity_regularized/head/labels/assert_equal/Const"
  op: "Const"
  input: "^adanet/iteration_1/ensemble_t1_2_layer_dnn_grow_complexity_regularized/head/labels/assert_rank_at_least/static_checks_determined_all_ok"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "adanet/iteration_1/ensemble_t1_2_layer_dnn_grow_complexity_regularized/head/labels/assert_equal/All"
  op: "All"
  input: "adanet/iteration_1/ensemble_t1_2_layer_dnn_grow_complexity_regularized/head/labels/assert_equal/Equal"
  input: "adanet/iteration_1/ensemble_t1_2_layer_dnn_grow_complexity_regularized/head/labels/assert_equal/Const"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "adanet/iteration_1/ensemble_t1_2_layer_dnn_grow_complexity_regularized/head/labels/assert_equal/Assert/Const"
  op: "Const"
  input: "^adanet/iteration_1/ensemble_t1_2_layer_dnn_grow_complexity_regularized/head/labels/assert_rank_at_least/static_checks_determined_all_ok"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "expected_labels_shape: "
      }
    }
  }
}
node {
  name: "adanet/iteration_1/ensemble_t1_2_layer_dnn_grow_complexity_regularized/head/labels/assert_equal/Assert/Const_1"
  op: "Const"
  input: "^adanet/iteration_1/ensemble_t1_2_layer_dnn_grow_complexity_regularized/head/labels/assert_rank_at_least/static_checks_determined_all_ok"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "labels_shape: "
      }
    }
  }
}
node {
  name: "adanet/iteration_1/ensemble_t1_2_layer_dnn_grow_complexity_regularized/head/labels/assert_equal/Assert/Assert/data_0"
  op: "Const"
  input: "^adanet/iteration_1/ensemble_t1_2_layer_dnn_grow_complexity_regularized/head/labels/assert_rank_at_least/static_checks_determined_all_ok"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "expected_labels_shape: "
      }
    }
  }
}
node {
  name: "adanet/iteration_1/ensemble_t1_2_layer_dnn_grow_complexity_regularized/head/labels/assert_equal/Assert/Assert/data_2"
  op: "Const"
  input: "^adanet/iteration_1/ensemble_t1_2_layer_dnn_grow_complexity_regularized/head/labels/assert_rank_at_least/static_checks_determined_all_ok"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "labels_shape: "
      }
    }
  }
}
node {
  name: "adanet/iteration_1/ensemble_t1_2_layer_dnn_grow_complexity_regularized/head/labels/assert_equal/Assert/Assert"
  op: "Assert"
  input: "adanet/iteration_1/ensemble_t1_2_layer_dnn_grow_complexity_regularized/head/labels/assert_equal/All"
  input: "adanet/iteration_1/ensemble_t1_2_layer_dnn_grow_complexity_regularized/head/labels/assert_equal/Assert/Assert/data_0"
  input: "adanet/iteration_1/ensemble_t1_2_layer_dnn_grow_complexity_regularized/head/labels/concat"
  input: "adanet/iteration_1/ensemble_t1_2_layer_dnn_grow_complexity_regularized/head/labels/assert_equal/Assert/Assert/data_2"
  input: "adanet/iteration_1/ensemble_t1_2_layer_dnn_grow_complexity_regularized/head/labels/Shape"
  attr {
    key: "T"
    value {
      list {
        type: DT_STRING
        type: DT_INT32
        type: DT_STRING
        type: DT_INT32
      }
    }
  }
  attr {
    key: "summarize"
    value {
      i: 3
    }
  }
}
node {
  name: "adanet/iteration_1/ensemble_t1_2_layer_dnn_grow_complexity_regularized/head/labels"
  op: "Identity"
  input: "adanet/iteration_1/ensemble_t1_2_layer_dnn_grow_complexity_regularized/head/labels/ExpandDims"
  input: "^adanet/iteration_1/ensemble_t1_2_layer_dnn_grow_complexity_regularized/head/labels/assert_equal/Assert/Assert"
  input: "^adanet/iteration_1/ensemble_t1_2_layer_dnn_grow_complexity_regularized/head/labels/assert_rank_at_least/static_checks_determined_all_ok"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_1/ensemble_t1_2_layer_dnn_grow_complexity_regularized/head/assert_range/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 9
      }
    }
  }
}
node {
  name: "adanet/iteration_1/ensemble_t1_2_layer_dnn_grow_complexity_regularized/head/assert_range/assert_less_equal/LessEqual"
  op: "LessEqual"
  input: "adanet/iteration_1/ensemble_t1_2_layer_dnn_grow_complexity_regularized/head/labels"
  input: "adanet/iteration_1/ensemble_t1_2_layer_dnn_grow_complexity_regularized/head/assert_range/Const"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_1/ensemble_t1_2_layer_dnn_grow_complexity_regularized/head/assert_range/assert_less_equal/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "adanet/iteration_1/ensemble_t1_2_layer_dnn_grow_complexity_regularized/head/assert_range/assert_less_equal/All"
  op: "All"
  input: "adanet/iteration_1/ensemble_t1_2_layer_dnn_grow_complexity_regularized/head/assert_range/assert_less_equal/LessEqual"
  input: "adanet/iteration_1/ensemble_t1_2_layer_dnn_grow_complexity_regularized/head/assert_range/assert_less_equal/Const"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "adanet/iteration_1/ensemble_t1_2_layer_dnn_grow_complexity_regularized/head/assert_range/assert_less_equal/Assert/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "Labels must <= n_classes - 1"
      }
    }
  }
}
node {
  name: "adanet/iteration_1/ensemble_t1_2_layer_dnn_grow_complexity_regularized/head/assert_range/assert_less_equal/Assert/Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "Condition x <= y did not hold element-wise:x (adanet/iteration_1/ensemble_t1_2_layer_dnn_grow_complexity_regularized/head/labels:0) = "
      }
    }
  }
}
node {
  name: "adanet/iteration_1/ensemble_t1_2_layer_dnn_grow_complexity_regularized/head/assert_range/assert_less_equal/Assert/Const_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "y (adanet/iteration_1/ensemble_t1_2_layer_dnn_grow_complexity_regularized/head/assert_range/Const:0) = "
      }
    }
  }
}
node {
  name: "adanet/iteration_1/ensemble_t1_2_layer_dnn_grow_complexity_regularized/head/assert_range/assert_less_equal/Assert/Assert/data_0"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "Labels must <= n_classes - 1"
      }
    }
  }
}
node {
  name: "adanet/iteration_1/ensemble_t1_2_layer_dnn_grow_complexity_regularized/head/assert_range/assert_less_equal/Assert/Assert/data_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "Condition x <= y did not hold element-wise:x (adanet/iteration_1/ensemble_t1_2_layer_dnn_grow_complexity_regularized/head/labels:0) = "
      }
    }
  }
}
node {
  name: "adanet/iteration_1/ensemble_t1_2_layer_dnn_grow_complexity_regularized/head/assert_range/assert_less_equal/Assert/Assert/data_3"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "y (adanet/iteration_1/ensemble_t1_2_layer_dnn_grow_complexity_regularized/head/assert_range/Const:0) = "
      }
    }
  }
}
node {
  name: "adanet/iteration_1/ensemble_t1_2_layer_dnn_grow_complexity_regularized/head/assert_range/assert_less_equal/Assert/Assert"
  op: "Assert"
  input: "adanet/iteration_1/ensemble_t1_2_layer_dnn_grow_complexity_regularized/head/assert_range/assert_less_equal/All"
  input: "adanet/iteration_1/ensemble_t1_2_layer_dnn_grow_complexity_regularized/head/assert_range/assert_less_equal/Assert/Assert/data_0"
  input: "adanet/iteration_1/ensemble_t1_2_layer_dnn_grow_complexity_regularized/head/assert_range/assert_less_equal/Assert/Assert/data_1"
  input: "adanet/iteration_1/ensemble_t1_2_layer_dnn_grow_complexity_regularized/head/labels"
  input: "adanet/iteration_1/ensemble_t1_2_layer_dnn_grow_complexity_regularized/head/assert_range/assert_less_equal/Assert/Assert/data_3"
  input: "adanet/iteration_1/ensemble_t1_2_layer_dnn_grow_complexity_regularized/head/assert_range/Const"
  attr {
    key: "T"
    value {
      list {
        type: DT_STRING
        type: DT_STRING
        type: DT_INT32
        type: DT_STRING
        type: DT_INT32
      }
    }
  }
  attr {
    key: "summarize"
    value {
      i: 3
    }
  }
}
node {
  name: "adanet/iteration_1/ensemble_t1_2_layer_dnn_grow_complexity_regularized/head/assert_range/assert_non_negative/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "adanet/iteration_1/ensemble_t1_2_layer_dnn_grow_complexity_regularized/head/assert_range/assert_non_negative/assert_less_equal/LessEqual"
  op: "LessEqual"
  input: "adanet/iteration_1/ensemble_t1_2_layer_dnn_grow_complexity_regularized/head/assert_range/assert_non_negative/Const"
  input: "adanet/iteration_1/ensemble_t1_2_layer_dnn_grow_complexity_regularized/head/labels"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_1/ensemble_t1_2_layer_dnn_grow_complexity_regularized/head/assert_range/assert_non_negative/assert_less_equal/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "adanet/iteration_1/ensemble_t1_2_layer_dnn_grow_complexity_regularized/head/assert_range/assert_non_negative/assert_less_equal/All"
  op: "All"
  input: "adanet/iteration_1/ensemble_t1_2_layer_dnn_grow_complexity_regularized/head/assert_range/assert_non_negative/assert_less_equal/LessEqual"
  input: "adanet/iteration_1/ensemble_t1_2_layer_dnn_grow_complexity_regularized/head/assert_range/assert_non_negative/assert_less_equal/Const"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "adanet/iteration_1/ensemble_t1_2_layer_dnn_grow_complexity_regularized/head/assert_range/assert_non_negative/assert_less_equal/Assert/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "Labels must >= 0"
      }
    }
  }
}
node {
  name: "adanet/iteration_1/ensemble_t1_2_layer_dnn_grow_complexity_regularized/head/assert_range/assert_non_negative/assert_less_equal/Assert/Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "Condition x >= 0 did not hold element-wise:"
      }
    }
  }
}
node {
  name: "adanet/iteration_1/ensemble_t1_2_layer_dnn_grow_complexity_regularized/head/assert_range/assert_non_negative/assert_less_equal/Assert/Const_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "x (adanet/iteration_1/ensemble_t1_2_layer_dnn_grow_complexity_regularized/head/labels:0) = "
      }
    }
  }
}
node {
  name: "adanet/iteration_1/ensemble_t1_2_layer_dnn_grow_complexity_regularized/head/assert_range/assert_non_negative/assert_less_equal/Assert/Assert/data_0"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "Labels must >= 0"
      }
    }
  }
}
node {
  name: "adanet/iteration_1/ensemble_t1_2_layer_dnn_grow_complexity_regularized/head/assert_range/assert_non_negative/assert_less_equal/Assert/Assert/data_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "Condition x >= 0 did not hold element-wise:"
      }
    }
  }
}
node {
  name: "adanet/iteration_1/ensemble_t1_2_layer_dnn_grow_complexity_regularized/head/assert_range/assert_non_negative/assert_less_equal/Assert/Assert/data_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "x (adanet/iteration_1/ensemble_t1_2_layer_dnn_grow_complexity_regularized/head/labels:0) = "
      }
    }
  }
}
node {
  name: "adanet/iteration_1/ensemble_t1_2_layer_dnn_grow_complexity_regularized/head/assert_range/assert_non_negative/assert_less_equal/Assert/Assert"
  op: "Assert"
  input: "adanet/iteration_1/ensemble_t1_2_layer_dnn_grow_complexity_regularized/head/assert_range/assert_non_negative/assert_less_equal/All"
  input: "adanet/iteration_1/ensemble_t1_2_layer_dnn_grow_complexity_regularized/head/assert_range/assert_non_negative/assert_less_equal/Assert/Assert/data_0"
  input: "adanet/iteration_1/ensemble_t1_2_layer_dnn_grow_complexity_regularized/head/assert_range/assert_non_negative/assert_less_equal/Assert/Assert/data_1"
  input: "adanet/iteration_1/ensemble_t1_2_layer_dnn_grow_complexity_regularized/head/assert_range/assert_non_negative/assert_less_equal/Assert/Assert/data_2"
  input: "adanet/iteration_1/ensemble_t1_2_layer_dnn_grow_complexity_regularized/head/labels"
  attr {
    key: "T"
    value {
      list {
        type: DT_STRING
        type: DT_STRING
        type: DT_STRING
        type: DT_INT32
      }
    }
  }
  attr {
    key: "summarize"
    value {
      i: 3
    }
  }
}
node {
  name: "adanet/iteration_1/ensemble_t1_2_layer_dnn_grow_complexity_regularized/head/assert_range/Identity"
  op: "Identity"
  input: "adanet/iteration_1/ensemble_t1_2_layer_dnn_grow_complexity_regularized/head/labels"
  input: "^adanet/iteration_1/ensemble_t1_2_layer_dnn_grow_complexity_regularized/head/assert_range/assert_less_equal/Assert/Assert"
  input: "^adanet/iteration_1/ensemble_t1_2_layer_dnn_grow_complexity_regularized/head/assert_range/assert_non_negative/assert_less_equal/Assert/Assert"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_1/ensemble_t1_2_layer_dnn_grow_complexity_regularized/head/sparse_softmax_cross_entropy_loss/remove_squeezable_dimensions/Squeeze"
  op: "Squeeze"
  input: "adanet/iteration_1/ensemble_t1_2_layer_dnn_grow_complexity_regularized/head/assert_range/Identity"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: -1
      }
    }
  }
}
node {
  name: "adanet/iteration_1/ensemble_t1_2_layer_dnn_grow_complexity_regularized/head/sparse_softmax_cross_entropy_loss/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "adanet/iteration_1/ensemble_t1_2_layer_dnn_grow_complexity_regularized/head/sparse_softmax_cross_entropy_loss/xentropy/Shape"
  op: "Shape"
  input: "adanet/iteration_1/ensemble_t1_2_layer_dnn_grow_complexity_regularized/head/sparse_softmax_cross_entropy_loss/remove_squeezable_dimensions/Squeeze"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "adanet/iteration_1/ensemble_t1_2_layer_dnn_grow_complexity_regularized/head/sparse_softmax_cross_entropy_loss/xentropy/xentropy"
  op: "SparseSoftmaxCrossEntropyWithLogits"
  input: "adanet/iteration_1/ensemble_t1_2_layer_dnn_grow_complexity_regularized/logits/Add_1"
  input: "adanet/iteration_1/ensemble_t1_2_layer_dnn_grow_complexity_regularized/head/sparse_softmax_cross_entropy_loss/remove_squeezable_dimensions/Squeeze"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tlabels"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_1/ensemble_t1_2_layer_dnn_grow_complexity_regularized/head/sparse_softmax_cross_entropy_loss/assert_broadcastable/weights/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_1/ensemble_t1_2_layer_dnn_grow_complexity_regularized/head/sparse_softmax_cross_entropy_loss/assert_broadcastable/weights/rank"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "adanet/iteration_1/ensemble_t1_2_layer_dnn_grow_complexity_regularized/head/sparse_softmax_cross_entropy_loss/assert_broadcastable/values/shape"
  op: "Shape"
  input: "adanet/iteration_1/ensemble_t1_2_layer_dnn_grow_complexity_regularized/head/sparse_softmax_cross_entropy_loss/xentropy/xentropy"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "adanet/iteration_1/ensemble_t1_2_layer_dnn_grow_complexity_regularized/head/sparse_softmax_cross_entropy_loss/assert_broadcastable/values/rank"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "adanet/iteration_1/ensemble_t1_2_layer_dnn_grow_complexity_regularized/head/sparse_softmax_cross_entropy_loss/assert_broadcastable/static_scalar_check_success"
  op: "NoOp"
}
node {
  name: "adanet/iteration_1/ensemble_t1_2_layer_dnn_grow_complexity_regularized/head/sparse_softmax_cross_entropy_loss/Mul"
  op: "Mul"
  input: "adanet/iteration_1/ensemble_t1_2_layer_dnn_grow_complexity_regularized/head/sparse_softmax_cross_entropy_loss/xentropy/xentropy"
  input: "adanet/iteration_1/ensemble_t1_2_layer_dnn_grow_complexity_regularized/head/sparse_softmax_cross_entropy_loss/Const"
  input: "^adanet/iteration_1/ensemble_t1_2_layer_dnn_grow_complexity_regularized/head/sparse_softmax_cross_entropy_loss/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_1/ensemble_t1_2_layer_dnn_grow_complexity_regularized/head/ExpandDims/dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "adanet/iteration_1/ensemble_t1_2_layer_dnn_grow_complexity_regularized/head/ExpandDims"
  op: "ExpandDims"
  input: "adanet/iteration_1/ensemble_t1_2_layer_dnn_grow_complexity_regularized/head/sparse_softmax_cross_entropy_loss/Mul"
  input: "adanet/iteration_1/ensemble_t1_2_layer_dnn_grow_complexity_regularized/head/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_1/ensemble_t1_2_layer_dnn_grow_complexity_regularized/head/weighted_loss/assert_broadcastable/weights"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "adanet/iteration_1/ensemble_t1_2_layer_dnn_grow_complexity_regularized/head/weighted_loss/assert_broadcastable/weights/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_1/ensemble_t1_2_layer_dnn_grow_complexity_regularized/head/weighted_loss/assert_broadcastable/weights/rank"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "adanet/iteration_1/ensemble_t1_2_layer_dnn_grow_complexity_regularized/head/weighted_loss/assert_broadcastable/values/shape"
  op: "Shape"
  input: "adanet/iteration_1/ensemble_t1_2_layer_dnn_grow_complexity_regularized/head/ExpandDims"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "adanet/iteration_1/ensemble_t1_2_layer_dnn_grow_complexity_regularized/head/weighted_loss/assert_broadcastable/values/rank"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "adanet/iteration_1/ensemble_t1_2_layer_dnn_grow_complexity_regularized/head/weighted_loss/assert_broadcastable/static_scalar_check_success"
  op: "NoOp"
}
node {
  name: "adanet/iteration_1/ensemble_t1_2_layer_dnn_grow_complexity_regularized/head/weighted_loss/ToFloat/x"
  op: "Const"
  input: "^adanet/iteration_1/ensemble_t1_2_layer_dnn_grow_complexity_regularized/head/weighted_loss/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "adanet/iteration_1/ensemble_t1_2_layer_dnn_grow_complexity_regularized/head/weighted_loss/Mul"
  op: "Mul"
  input: "adanet/iteration_1/ensemble_t1_2_layer_dnn_grow_complexity_regularized/head/ExpandDims"
  input: "adanet/iteration_1/ensemble_t1_2_layer_dnn_grow_complexity_regularized/head/weighted_loss/ToFloat/x"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_1/ensemble_t1_2_layer_dnn_grow_complexity_regularized/head/weighted_loss/Const"
  op: "Const"
  input: "^adanet/iteration_1/ensemble_t1_2_layer_dnn_grow_complexity_regularized/head/weighted_loss/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "adanet/iteration_1/ensemble_t1_2_layer_dnn_grow_complexity_regularized/head/weighted_loss/Sum"
  op: "Sum"
  input: "adanet/iteration_1/ensemble_t1_2_layer_dnn_grow_complexity_regularized/head/weighted_loss/Mul"
  input: "adanet/iteration_1/ensemble_t1_2_layer_dnn_grow_complexity_regularized/head/weighted_loss/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "adanet/iteration_1/ensemble_t1_2_layer_dnn_grow_complexity_regularized/head/weighted_loss/num_elements"
  op: "Size"
  input: "adanet/iteration_1/ensemble_t1_2_layer_dnn_grow_complexity_regularized/head/ExpandDims"
  input: "^adanet/iteration_1/ensemble_t1_2_layer_dnn_grow_complexity_regularized/head/weighted_loss/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "adanet/iteration_1/ensemble_t1_2_layer_dnn_grow_complexity_regularized/head/weighted_loss/num_elements/Cast"
  op: "Cast"
  input: "adanet/iteration_1/ensemble_t1_2_layer_dnn_grow_complexity_regularized/head/weighted_loss/num_elements"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_1/ensemble_t1_2_layer_dnn_grow_complexity_regularized/head/weighted_loss/Const_1"
  op: "Const"
  input: "^adanet/iteration_1/ensemble_t1_2_layer_dnn_grow_complexity_regularized/head/weighted_loss/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_1/ensemble_t1_2_layer_dnn_grow_complexity_regularized/head/weighted_loss/Sum_1"
  op: "Sum"
  input: "adanet/iteration_1/ensemble_t1_2_layer_dnn_grow_complexity_regularized/head/weighted_loss/Sum"
  input: "adanet/iteration_1/ensemble_t1_2_layer_dnn_grow_complexity_regularized/head/weighted_loss/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "adanet/iteration_1/ensemble_t1_2_layer_dnn_grow_complexity_regularized/head/weighted_loss/value"
  op: "DivNoNan"
  input: "adanet/iteration_1/ensemble_t1_2_layer_dnn_grow_complexity_regularized/head/weighted_loss/Sum_1"
  input: "adanet/iteration_1/ensemble_t1_2_layer_dnn_grow_complexity_regularized/head/weighted_loss/num_elements/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_1/ensemble_t1_2_layer_dnn_grow_complexity_regularized/head/NoOp"
  op: "NoOp"
}
node {
  name: "loss_3/tags"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "loss_3"
      }
    }
  }
}
node {
  name: "loss_3"
  op: "ScalarSummary"
  input: "loss_3/tags"
  input: "adanet/iteration_1/ensemble_t1_2_layer_dnn_grow_complexity_regularized/head/weighted_loss/value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_1/ensemble_t1_2_layer_dnn_grow_complexity_regularized/add_4"
  op: "Add"
  input: "adanet/iteration_1/ensemble_t1_2_layer_dnn_grow_complexity_regularized/head/weighted_loss/value"
  input: "adanet/iteration_1/ensemble_t1_2_layer_dnn_grow_complexity_regularized/add_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_1/ensemble_t1_2_layer_dnn_grow_complexity_regularized/t1_2_layer_dnn_grow_complexity_regularized/loss/tags"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "loss"
      }
    }
  }
}
node {
  name: "adanet/iteration_1/ensemble_t1_2_layer_dnn_grow_complexity_regularized/t1_2_layer_dnn_grow_complexity_regularized/loss"
  op: "ScalarSummary"
  input: "adanet/iteration_1/ensemble_t1_2_layer_dnn_grow_complexity_regularized/t1_2_layer_dnn_grow_complexity_regularized/loss/tags"
  input: "adanet/iteration_1/ensemble_t1_2_layer_dnn_grow_complexity_regularized/head/weighted_loss/value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_1/ensemble_t1_2_layer_dnn_grow_complexity_regularized/train_mixture_weights/mixture_weights_train_op"
  op: "NoOp"
}
node {
  name: "adanet/iteration_1/candidate_t1_2_layer_dnn_grow_complexity_regularized/adanet_loss/initial_value"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "adanet/iteration_1/candidate_t1_2_layer_dnn_grow_complexity_regularized/adanet_loss"
  op: "VariableV2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "adanet/iteration_1/candidate_t1_2_layer_dnn_grow_complexity_regularized/adanet_loss/Assign"
  op: "Assign"
  input: "adanet/iteration_1/candidate_t1_2_layer_dnn_grow_complexity_regularized/adanet_loss"
  input: "adanet/iteration_1/candidate_t1_2_layer_dnn_grow_complexity_regularized/adanet_loss/initial_value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_1/candidate_t1_2_layer_dnn_grow_complexity_regularized/adanet_loss"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "adanet/iteration_1/candidate_t1_2_layer_dnn_grow_complexity_regularized/adanet_loss/read"
  op: "Identity"
  input: "adanet/iteration_1/candidate_t1_2_layer_dnn_grow_complexity_regularized/adanet_loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_1/candidate_t1_2_layer_dnn_grow_complexity_regularized/adanet_loss"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_1/candidate_t1_2_layer_dnn_grow_complexity_regularized/add/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 1
      }
    }
  }
}
node {
  name: "adanet/iteration_1/candidate_t1_2_layer_dnn_grow_complexity_regularized/add"
  op: "Add"
  input: "adanet/iteration_1/step/read"
  input: "adanet/iteration_1/candidate_t1_2_layer_dnn_grow_complexity_regularized/add/y"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_1/candidate_t1_2_layer_dnn_grow_complexity_regularized/is_training/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 2500
      }
    }
  }
}
node {
  name: "adanet/iteration_1/candidate_t1_2_layer_dnn_grow_complexity_regularized/is_training"
  op: "Less"
  input: "adanet/iteration_1/candidate_t1_2_layer_dnn_grow_complexity_regularized/add"
  input: "adanet/iteration_1/candidate_t1_2_layer_dnn_grow_complexity_regularized/is_training/y"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_1/candidate_t1_2_layer_dnn_grow_complexity_regularized/AssignMovingAvg/decay"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_1/candidate_t1_2_layer_dnn_grow_complexity_regularized/adanet_loss"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.10000000149011612
      }
    }
  }
}
node {
  name: "adanet/iteration_1/candidate_t1_2_layer_dnn_grow_complexity_regularized/AssignMovingAvg/adanet/iteration_1/candidate_t1_2_layer_dnn_grow_complexity_regularized/adanet_loss/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_1/candidate_t1_2_layer_dnn_grow_complexity_regularized/adanet_loss"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "adanet/iteration_1/candidate_t1_2_layer_dnn_grow_complexity_regularized/adanet/iteration_1/candidate_t1_2_layer_dnn_grow_complexity_regularized/adanet_loss/biased"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_1/candidate_t1_2_layer_dnn_grow_complexity_regularized/adanet_loss"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "adanet/iteration_1/candidate_t1_2_layer_dnn_grow_complexity_regularized/adanet/iteration_1/candidate_t1_2_layer_dnn_grow_complexity_regularized/adanet_loss/biased/Assign"
  op: "Assign"
  input: "adanet/iteration_1/candidate_t1_2_layer_dnn_grow_complexity_regularized/adanet/iteration_1/candidate_t1_2_layer_dnn_grow_complexity_regularized/adanet_loss/biased"
  input: "adanet/iteration_1/candidate_t1_2_layer_dnn_grow_complexity_regularized/AssignMovingAvg/adanet/iteration_1/candidate_t1_2_layer_dnn_grow_complexity_regularized/adanet_loss/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_1/candidate_t1_2_layer_dnn_grow_complexity_regularized/adanet_loss"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "adanet/iteration_1/candidate_t1_2_layer_dnn_grow_complexity_regularized/adanet/iteration_1/candidate_t1_2_layer_dnn_grow_complexity_regularized/adanet_loss/biased/read"
  op: "Identity"
  input: "adanet/iteration_1/candidate_t1_2_layer_dnn_grow_complexity_regularized/adanet/iteration_1/candidate_t1_2_layer_dnn_grow_complexity_regularized/adanet_loss/biased"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_1/candidate_t1_2_layer_dnn_grow_complexity_regularized/adanet_loss"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_1/candidate_t1_2_layer_dnn_grow_complexity_regularized/adanet/iteration_1/candidate_t1_2_layer_dnn_grow_complexity_regularized/adanet_loss/local_step/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_1/candidate_t1_2_layer_dnn_grow_complexity_regularized/adanet_loss"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "adanet/iteration_1/candidate_t1_2_layer_dnn_grow_complexity_regularized/adanet/iteration_1/candidate_t1_2_layer_dnn_grow_complexity_regularized/adanet_loss/local_step"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_1/candidate_t1_2_layer_dnn_grow_complexity_regularized/adanet_loss"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "adanet/iteration_1/candidate_t1_2_layer_dnn_grow_complexity_regularized/adanet/iteration_1/candidate_t1_2_layer_dnn_grow_complexity_regularized/adanet_loss/local_step/Assign"
  op: "Assign"
  input: "adanet/iteration_1/candidate_t1_2_layer_dnn_grow_complexity_regularized/adanet/iteration_1/candidate_t1_2_layer_dnn_grow_complexity_regularized/adanet_loss/local_step"
  input: "adanet/iteration_1/candidate_t1_2_layer_dnn_grow_complexity_regularized/adanet/iteration_1/candidate_t1_2_layer_dnn_grow_complexity_regularized/adanet_loss/local_step/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_1/candidate_t1_2_layer_dnn_grow_complexity_regularized/adanet_loss"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "adanet/iteration_1/candidate_t1_2_layer_dnn_grow_complexity_regularized/adanet/iteration_1/candidate_t1_2_layer_dnn_grow_complexity_regularized/adanet_loss/local_step/read"
  op: "Identity"
  input: "adanet/iteration_1/candidate_t1_2_layer_dnn_grow_complexity_regularized/adanet/iteration_1/candidate_t1_2_layer_dnn_grow_complexity_regularized/adanet_loss/local_step"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_1/candidate_t1_2_layer_dnn_grow_complexity_regularized/adanet_loss"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_1/candidate_t1_2_layer_dnn_grow_complexity_regularized/AssignMovingAvg/adanet/iteration_1/candidate_t1_2_layer_dnn_grow_complexity_regularized/adanet_loss/sub"
  op: "Sub"
  input: "adanet/iteration_1/candidate_t1_2_layer_dnn_grow_complexity_regularized/adanet/iteration_1/candidate_t1_2_layer_dnn_grow_complexity_regularized/adanet_loss/biased/read"
  input: "adanet/iteration_1/ensemble_t1_2_layer_dnn_grow_complexity_regularized/add_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_1/candidate_t1_2_layer_dnn_grow_complexity_regularized/adanet_loss"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_1/candidate_t1_2_layer_dnn_grow_complexity_regularized/AssignMovingAvg/adanet/iteration_1/candidate_t1_2_layer_dnn_grow_complexity_regularized/adanet_loss/mul"
  op: "Mul"
  input: "adanet/iteration_1/candidate_t1_2_layer_dnn_grow_complexity_regularized/AssignMovingAvg/adanet/iteration_1/candidate_t1_2_layer_dnn_grow_complexity_regularized/adanet_loss/sub"
  input: "adanet/iteration_1/candidate_t1_2_layer_dnn_grow_complexity_regularized/AssignMovingAvg/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_1/candidate_t1_2_layer_dnn_grow_complexity_regularized/adanet_loss"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_1/candidate_t1_2_layer_dnn_grow_complexity_regularized/AssignMovingAvg/adanet/iteration_1/candidate_t1_2_layer_dnn_grow_complexity_regularized/adanet_loss/adanet/iteration_1/candidate_t1_2_layer_dnn_grow_complexity_regularized/adanet/iteration_1/candidate_t1_2_layer_dnn_grow_complexity_regularized/adanet_loss"
  op: "AssignSub"
  input: "adanet/iteration_1/candidate_t1_2_layer_dnn_grow_complexity_regularized/adanet/iteration_1/candidate_t1_2_layer_dnn_grow_complexity_regularized/adanet_loss/biased"
  input: "adanet/iteration_1/candidate_t1_2_layer_dnn_grow_complexity_regularized/AssignMovingAvg/adanet/iteration_1/candidate_t1_2_layer_dnn_grow_complexity_regularized/adanet_loss/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_1/candidate_t1_2_layer_dnn_grow_complexity_regularized/adanet_loss"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "adanet/iteration_1/candidate_t1_2_layer_dnn_grow_complexity_regularized/AssignMovingAvg/adanet/iteration_1/candidate_t1_2_layer_dnn_grow_complexity_regularized/adanet_loss/AssignAdd/value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_1/candidate_t1_2_layer_dnn_grow_complexity_regularized/adanet_loss"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "adanet/iteration_1/candidate_t1_2_layer_dnn_grow_complexity_regularized/AssignMovingAvg/adanet/iteration_1/candidate_t1_2_layer_dnn_grow_complexity_regularized/adanet_loss/AssignAdd"
  op: "AssignAdd"
  input: "adanet/iteration_1/candidate_t1_2_layer_dnn_grow_complexity_regularized/adanet/iteration_1/candidate_t1_2_layer_dnn_grow_complexity_regularized/adanet_loss/local_step"
  input: "adanet/iteration_1/candidate_t1_2_layer_dnn_grow_complexity_regularized/AssignMovingAvg/adanet/iteration_1/candidate_t1_2_layer_dnn_grow_complexity_regularized/adanet_loss/AssignAdd/value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_1/candidate_t1_2_layer_dnn_grow_complexity_regularized/adanet_loss"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "adanet/iteration_1/candidate_t1_2_layer_dnn_grow_complexity_regularized/AssignMovingAvg/adanet/iteration_1/candidate_t1_2_layer_dnn_grow_complexity_regularized/adanet_loss/read"
  op: "Identity"
  input: "adanet/iteration_1/candidate_t1_2_layer_dnn_grow_complexity_regularized/adanet/iteration_1/candidate_t1_2_layer_dnn_grow_complexity_regularized/adanet_loss/biased"
  input: "^adanet/iteration_1/candidate_t1_2_layer_dnn_grow_complexity_regularized/AssignMovingAvg/adanet/iteration_1/candidate_t1_2_layer_dnn_grow_complexity_regularized/adanet_loss/AssignAdd"
  input: "^adanet/iteration_1/candidate_t1_2_layer_dnn_grow_complexity_regularized/AssignMovingAvg/adanet/iteration_1/candidate_t1_2_layer_dnn_grow_complexity_regularized/adanet_loss/adanet/iteration_1/candidate_t1_2_layer_dnn_grow_complexity_regularized/adanet/iteration_1/candidate_t1_2_layer_dnn_grow_complexity_regularized/adanet_loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_1/candidate_t1_2_layer_dnn_grow_complexity_regularized/adanet_loss"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_1/candidate_t1_2_layer_dnn_grow_complexity_regularized/AssignMovingAvg/adanet/iteration_1/candidate_t1_2_layer_dnn_grow_complexity_regularized/adanet_loss/sub_1/x"
  op: "Const"
  input: "^adanet/iteration_1/candidate_t1_2_layer_dnn_grow_complexity_regularized/AssignMovingAvg/adanet/iteration_1/candidate_t1_2_layer_dnn_grow_complexity_regularized/adanet_loss/AssignAdd"
  input: "^adanet/iteration_1/candidate_t1_2_layer_dnn_grow_complexity_regularized/AssignMovingAvg/adanet/iteration_1/candidate_t1_2_layer_dnn_grow_complexity_regularized/adanet_loss/adanet/iteration_1/candidate_t1_2_layer_dnn_grow_complexity_regularized/adanet/iteration_1/candidate_t1_2_layer_dnn_grow_complexity_regularized/adanet_loss"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_1/candidate_t1_2_layer_dnn_grow_complexity_regularized/adanet_loss"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "adanet/iteration_1/candidate_t1_2_layer_dnn_grow_complexity_regularized/AssignMovingAvg/adanet/iteration_1/candidate_t1_2_layer_dnn_grow_complexity_regularized/adanet_loss/sub_1"
  op: "Sub"
  input: "adanet/iteration_1/candidate_t1_2_layer_dnn_grow_complexity_regularized/AssignMovingAvg/adanet/iteration_1/candidate_t1_2_layer_dnn_grow_complexity_regularized/adanet_loss/sub_1/x"
  input: "adanet/iteration_1/candidate_t1_2_layer_dnn_grow_complexity_regularized/AssignMovingAvg/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_1/candidate_t1_2_layer_dnn_grow_complexity_regularized/adanet_loss"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_1/candidate_t1_2_layer_dnn_grow_complexity_regularized/AssignMovingAvg/adanet/iteration_1/candidate_t1_2_layer_dnn_grow_complexity_regularized/adanet_loss/read_1"
  op: "Identity"
  input: "adanet/iteration_1/candidate_t1_2_layer_dnn_grow_complexity_regularized/adanet/iteration_1/candidate_t1_2_layer_dnn_grow_complexity_regularized/adanet_loss/local_step"
  input: "^adanet/iteration_1/candidate_t1_2_layer_dnn_grow_complexity_regularized/AssignMovingAvg/adanet/iteration_1/candidate_t1_2_layer_dnn_grow_complexity_regularized/adanet_loss/AssignAdd"
  input: "^adanet/iteration_1/candidate_t1_2_layer_dnn_grow_complexity_regularized/AssignMovingAvg/adanet/iteration_1/candidate_t1_2_layer_dnn_grow_complexity_regularized/adanet_loss/adanet/iteration_1/candidate_t1_2_layer_dnn_grow_complexity_regularized/adanet/iteration_1/candidate_t1_2_layer_dnn_grow_complexity_regularized/adanet_loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_1/candidate_t1_2_layer_dnn_grow_complexity_regularized/adanet_loss"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_1/candidate_t1_2_layer_dnn_grow_complexity_regularized/AssignMovingAvg/adanet/iteration_1/candidate_t1_2_layer_dnn_grow_complexity_regularized/adanet_loss/Pow"
  op: "Pow"
  input: "adanet/iteration_1/candidate_t1_2_layer_dnn_grow_complexity_regularized/AssignMovingAvg/adanet/iteration_1/candidate_t1_2_layer_dnn_grow_complexity_regularized/adanet_loss/sub_1"
  input: "adanet/iteration_1/candidate_t1_2_layer_dnn_grow_complexity_regularized/AssignMovingAvg/adanet/iteration_1/candidate_t1_2_layer_dnn_grow_complexity_regularized/adanet_loss/read_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_1/candidate_t1_2_layer_dnn_grow_complexity_regularized/adanet_loss"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_1/candidate_t1_2_layer_dnn_grow_complexity_regularized/AssignMovingAvg/adanet/iteration_1/candidate_t1_2_layer_dnn_grow_complexity_regularized/adanet_loss/sub_2/x"
  op: "Const"
  input: "^adanet/iteration_1/candidate_t1_2_layer_dnn_grow_complexity_regularized/AssignMovingAvg/adanet/iteration_1/candidate_t1_2_layer_dnn_grow_complexity_regularized/adanet_loss/AssignAdd"
  input: "^adanet/iteration_1/candidate_t1_2_layer_dnn_grow_complexity_regularized/AssignMovingAvg/adanet/iteration_1/candidate_t1_2_layer_dnn_grow_complexity_regularized/adanet_loss/adanet/iteration_1/candidate_t1_2_layer_dnn_grow_complexity_regularized/adanet/iteration_1/candidate_t1_2_layer_dnn_grow_complexity_regularized/adanet_loss"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_1/candidate_t1_2_layer_dnn_grow_complexity_regularized/adanet_loss"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "adanet/iteration_1/candidate_t1_2_layer_dnn_grow_complexity_regularized/AssignMovingAvg/adanet/iteration_1/candidate_t1_2_layer_dnn_grow_complexity_regularized/adanet_loss/sub_2"
  op: "Sub"
  input: "adanet/iteration_1/candidate_t1_2_layer_dnn_grow_complexity_regularized/AssignMovingAvg/adanet/iteration_1/candidate_t1_2_layer_dnn_grow_complexity_regularized/adanet_loss/sub_2/x"
  input: "adanet/iteration_1/candidate_t1_2_layer_dnn_grow_complexity_regularized/AssignMovingAvg/adanet/iteration_1/candidate_t1_2_layer_dnn_grow_complexity_regularized/adanet_loss/Pow"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_1/candidate_t1_2_layer_dnn_grow_complexity_regularized/adanet_loss"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_1/candidate_t1_2_layer_dnn_grow_complexity_regularized/AssignMovingAvg/adanet/iteration_1/candidate_t1_2_layer_dnn_grow_complexity_regularized/adanet_loss/truediv"
  op: "RealDiv"
  input: "adanet/iteration_1/candidate_t1_2_layer_dnn_grow_complexity_regularized/AssignMovingAvg/adanet/iteration_1/candidate_t1_2_layer_dnn_grow_complexity_regularized/adanet_loss/read"
  input: "adanet/iteration_1/candidate_t1_2_layer_dnn_grow_complexity_regularized/AssignMovingAvg/adanet/iteration_1/candidate_t1_2_layer_dnn_grow_complexity_regularized/adanet_loss/sub_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_1/candidate_t1_2_layer_dnn_grow_complexity_regularized/adanet_loss"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_1/candidate_t1_2_layer_dnn_grow_complexity_regularized/AssignMovingAvg/adanet/iteration_1/candidate_t1_2_layer_dnn_grow_complexity_regularized/adanet_loss/sub_3"
  op: "Sub"
  input: "adanet/iteration_1/candidate_t1_2_layer_dnn_grow_complexity_regularized/adanet_loss/read"
  input: "adanet/iteration_1/candidate_t1_2_layer_dnn_grow_complexity_regularized/AssignMovingAvg/adanet/iteration_1/candidate_t1_2_layer_dnn_grow_complexity_regularized/adanet_loss/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_1/candidate_t1_2_layer_dnn_grow_complexity_regularized/adanet_loss"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_1/candidate_t1_2_layer_dnn_grow_complexity_regularized/AssignMovingAvg"
  op: "AssignSub"
  input: "adanet/iteration_1/candidate_t1_2_layer_dnn_grow_complexity_regularized/adanet_loss"
  input: "adanet/iteration_1/candidate_t1_2_layer_dnn_grow_complexity_regularized/AssignMovingAvg/adanet/iteration_1/candidate_t1_2_layer_dnn_grow_complexity_regularized/adanet_loss/sub_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_1/candidate_t1_2_layer_dnn_grow_complexity_regularized/adanet_loss"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "adanet/iteration_1/candidate_t1_2_layer_dnn_grow_complexity_regularized/read"
  op: "Identity"
  input: "adanet/iteration_1/candidate_t1_2_layer_dnn_grow_complexity_regularized/adanet_loss"
  input: "^adanet/iteration_1/candidate_t1_2_layer_dnn_grow_complexity_regularized/AssignMovingAvg"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_1/candidate_t1_2_layer_dnn_grow_complexity_regularized/t1_2_layer_dnn_grow_complexity_regularized/adanet_loss/adanet/adanet_weighted_ensemble/tags"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "adanet_loss/adanet/adanet_weighted_ensemble"
      }
    }
  }
}
node {
  name: "adanet/iteration_1/candidate_t1_2_layer_dnn_grow_complexity_regularized/t1_2_layer_dnn_grow_complexity_regularized/adanet_loss/adanet/adanet_weighted_ensemble"
  op: "ScalarSummary"
  input: "adanet/iteration_1/candidate_t1_2_layer_dnn_grow_complexity_regularized/t1_2_layer_dnn_grow_complexity_regularized/adanet_loss/adanet/adanet_weighted_ensemble/tags"
  input: "adanet/iteration_1/candidate_t1_2_layer_dnn_grow_complexity_regularized/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_1/mean_1/total/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_1/mean_1/total"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "adanet/iteration_1/mean_1/total"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_1/mean_1/total"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "adanet/iteration_1/mean_1/total/Assign"
  op: "Assign"
  input: "adanet/iteration_1/mean_1/total"
  input: "adanet/iteration_1/mean_1/total/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_1/mean_1/total"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "adanet/iteration_1/mean_1/total/read"
  op: "Identity"
  input: "adanet/iteration_1/mean_1/total"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_1/mean_1/total"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_1/mean_1/count/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_1/mean_1/count"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "adanet/iteration_1/mean_1/count"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_1/mean_1/count"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "adanet/iteration_1/mean_1/count/Assign"
  op: "Assign"
  input: "adanet/iteration_1/mean_1/count"
  input: "adanet/iteration_1/mean_1/count/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_1/mean_1/count"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "adanet/iteration_1/mean_1/count/read"
  op: "Identity"
  input: "adanet/iteration_1/mean_1/count"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_1/mean_1/count"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_1/mean_1/Size"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "adanet/iteration_1/mean_1/ToFloat"
  op: "Cast"
  input: "adanet/iteration_1/mean_1/Size"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_1/mean_1/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_1/mean_1/Sum"
  op: "Sum"
  input: "adanet/iteration_1/ensemble_t1_2_layer_dnn_grow_complexity_regularized/add_4"
  input: "adanet/iteration_1/mean_1/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "adanet/iteration_1/mean_1/AssignAdd"
  op: "AssignAdd"
  input: "adanet/iteration_1/mean_1/total"
  input: "adanet/iteration_1/mean_1/Sum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_1/mean_1/total"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "adanet/iteration_1/mean_1/AssignAdd_1"
  op: "AssignAdd"
  input: "adanet/iteration_1/mean_1/count"
  input: "adanet/iteration_1/mean_1/ToFloat"
  input: "^adanet/iteration_1/ensemble_t1_2_layer_dnn_grow_complexity_regularized/add_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_1/mean_1/count"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "adanet/iteration_1/mean_1/Maximum/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "adanet/iteration_1/mean_1/Maximum"
  op: "Maximum"
  input: "adanet/iteration_1/mean_1/count/read"
  input: "adanet/iteration_1/mean_1/Maximum/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_1/mean_1/value"
  op: "DivNoNan"
  input: "adanet/iteration_1/mean_1/total/read"
  input: "adanet/iteration_1/mean_1/Maximum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_1/mean_1/Maximum_1/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "adanet/iteration_1/mean_1/Maximum_1"
  op: "Maximum"
  input: "adanet/iteration_1/mean_1/AssignAdd_1"
  input: "adanet/iteration_1/mean_1/Maximum_1/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_1/mean_1/update_op"
  op: "DivNoNan"
  input: "adanet/iteration_1/mean_1/AssignAdd"
  input: "adanet/iteration_1/mean_1/Maximum_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_1/best_candidate_index/ArgMin/input"
  op: "Pack"
  input: "adanet/iteration_1/candidate_t0_1_layer_dnn_grow_complexity_regularized/read"
  input: "adanet/iteration_1/candidate_t1_1_layer_dnn_grow_complexity_regularized/read"
  input: "adanet/iteration_1/candidate_t1_2_layer_dnn_grow_complexity_regularized/read"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "adanet/iteration_1/best_candidate_index/ArgMin/dimension"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "adanet/iteration_1/best_candidate_index/ArgMin"
  op: "ArgMin"
  input: "adanet/iteration_1/best_candidate_index/ArgMin/input"
  input: "adanet/iteration_1/best_candidate_index/ArgMin/dimension"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "output_type"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "adanet/iteration_1/best_predictions/stack"
  op: "Pack"
  input: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/head/predictions/ExpandDims"
  input: "adanet/iteration_1/ensemble_t1_1_layer_dnn_grow_complexity_regularized/head/predictions/ExpandDims"
  input: "adanet/iteration_1/ensemble_t1_2_layer_dnn_grow_complexity_regularized/head/predictions/ExpandDims"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "adanet/iteration_1/best_predictions/add/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 1
      }
    }
  }
}
node {
  name: "adanet/iteration_1/best_predictions/add"
  op: "Add"
  input: "adanet/iteration_1/best_candidate_index/ArgMin"
  input: "adanet/iteration_1/best_predictions/add/y"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_1/best_predictions/strided_slice/stack"
  op: "Pack"
  input: "adanet/iteration_1/best_candidate_index/ArgMin"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "adanet/iteration_1/best_predictions/strided_slice/stack_1"
  op: "Pack"
  input: "adanet/iteration_1/best_predictions/add"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "adanet/iteration_1/best_predictions/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "adanet/iteration_1/best_predictions/strided_slice/Cast"
  op: "Cast"
  input: "adanet/iteration_1/best_predictions/strided_slice/stack_2"
  attr {
    key: "DstT"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_1/best_predictions/strided_slice"
  op: "StridedSlice"
  input: "adanet/iteration_1/best_predictions/stack"
  input: "adanet/iteration_1/best_predictions/strided_slice/stack"
  input: "adanet/iteration_1/best_predictions/strided_slice/stack_1"
  input: "adanet/iteration_1/best_predictions/strided_slice/Cast"
  attr {
    key: "Index"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "adanet/iteration_1/best_predictions/stack_1"
  op: "Pack"
  input: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/head/predictions/str_classes"
  input: "adanet/iteration_1/ensemble_t1_1_layer_dnn_grow_complexity_regularized/head/predictions/str_classes"
  input: "adanet/iteration_1/ensemble_t1_2_layer_dnn_grow_complexity_regularized/head/predictions/str_classes"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "adanet/iteration_1/best_predictions/add_1/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 1
      }
    }
  }
}
node {
  name: "adanet/iteration_1/best_predictions/add_1"
  op: "Add"
  input: "adanet/iteration_1/best_candidate_index/ArgMin"
  input: "adanet/iteration_1/best_predictions/add_1/y"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_1/best_predictions/strided_slice_1/stack"
  op: "Pack"
  input: "adanet/iteration_1/best_candidate_index/ArgMin"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "adanet/iteration_1/best_predictions/strided_slice_1/stack_1"
  op: "Pack"
  input: "adanet/iteration_1/best_predictions/add_1"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "adanet/iteration_1/best_predictions/strided_slice_1/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "adanet/iteration_1/best_predictions/strided_slice_1/Cast"
  op: "Cast"
  input: "adanet/iteration_1/best_predictions/strided_slice_1/stack_2"
  attr {
    key: "DstT"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_1/best_predictions/strided_slice_1"
  op: "StridedSlice"
  input: "adanet/iteration_1/best_predictions/stack_1"
  input: "adanet/iteration_1/best_predictions/strided_slice_1/stack"
  input: "adanet/iteration_1/best_predictions/strided_slice_1/stack_1"
  input: "adanet/iteration_1/best_predictions/strided_slice_1/Cast"
  attr {
    key: "Index"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "adanet/iteration_1/best_predictions/stack_2"
  op: "Pack"
  input: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/logits/Add"
  input: "adanet/iteration_1/ensemble_t1_1_layer_dnn_grow_complexity_regularized/logits/Add_1"
  input: "adanet/iteration_1/ensemble_t1_2_layer_dnn_grow_complexity_regularized/logits/Add_1"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: -1
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "adanet/iteration_1/best_predictions/add_2/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 1
      }
    }
  }
}
node {
  name: "adanet/iteration_1/best_predictions/add_2"
  op: "Add"
  input: "adanet/iteration_1/best_candidate_index/ArgMin"
  input: "adanet/iteration_1/best_predictions/add_2/y"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_1/best_predictions/strided_slice_2/stack"
  op: "Pack"
  input: "adanet/iteration_1/best_candidate_index/ArgMin"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "adanet/iteration_1/best_predictions/strided_slice_2/stack_1"
  op: "Pack"
  input: "adanet/iteration_1/best_predictions/add_2"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "adanet/iteration_1/best_predictions/strided_slice_2/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "adanet/iteration_1/best_predictions/strided_slice_2/Cast"
  op: "Cast"
  input: "adanet/iteration_1/best_predictions/strided_slice_2/stack_2"
  attr {
    key: "DstT"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_1/best_predictions/strided_slice_2"
  op: "StridedSlice"
  input: "adanet/iteration_1/best_predictions/stack_2"
  input: "adanet/iteration_1/best_predictions/strided_slice_2/stack"
  input: "adanet/iteration_1/best_predictions/strided_slice_2/stack_1"
  input: "adanet/iteration_1/best_predictions/strided_slice_2/Cast"
  attr {
    key: "Index"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "adanet/iteration_1/best_predictions/stack_3"
  op: "Pack"
  input: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/head/predictions/probabilities"
  input: "adanet/iteration_1/ensemble_t1_1_layer_dnn_grow_complexity_regularized/head/predictions/probabilities"
  input: "adanet/iteration_1/ensemble_t1_2_layer_dnn_grow_complexity_regularized/head/predictions/probabilities"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: -1
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "adanet/iteration_1/best_predictions/add_3/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 1
      }
    }
  }
}
node {
  name: "adanet/iteration_1/best_predictions/add_3"
  op: "Add"
  input: "adanet/iteration_1/best_candidate_index/ArgMin"
  input: "adanet/iteration_1/best_predictions/add_3/y"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_1/best_predictions/strided_slice_3/stack"
  op: "Pack"
  input: "adanet/iteration_1/best_candidate_index/ArgMin"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "adanet/iteration_1/best_predictions/strided_slice_3/stack_1"
  op: "Pack"
  input: "adanet/iteration_1/best_predictions/add_3"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "adanet/iteration_1/best_predictions/strided_slice_3/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "adanet/iteration_1/best_predictions/strided_slice_3/Cast"
  op: "Cast"
  input: "adanet/iteration_1/best_predictions/strided_slice_3/stack_2"
  attr {
    key: "DstT"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_1/best_predictions/strided_slice_3"
  op: "StridedSlice"
  input: "adanet/iteration_1/best_predictions/stack_3"
  input: "adanet/iteration_1/best_predictions/strided_slice_3/stack"
  input: "adanet/iteration_1/best_predictions/strided_slice_3/stack_1"
  input: "adanet/iteration_1/best_predictions/strided_slice_3/Cast"
  attr {
    key: "Index"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "adanet/iteration_1/best_loss/stack"
  op: "Pack"
  input: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/head/weighted_loss/value"
  input: "adanet/iteration_1/ensemble_t1_1_layer_dnn_grow_complexity_regularized/head/weighted_loss/value"
  input: "adanet/iteration_1/ensemble_t1_2_layer_dnn_grow_complexity_regularized/head/weighted_loss/value"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "adanet/iteration_1/best_loss/Slice/begin"
  op: "Pack"
  input: "adanet/iteration_1/best_candidate_index/ArgMin"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "adanet/iteration_1/best_loss/Slice/size"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
          dim {
            size: 1
          }
        }
        int64_val: 1
      }
    }
  }
}
node {
  name: "adanet/iteration_1/best_loss/Slice"
  op: "Slice"
  input: "adanet/iteration_1/best_loss/stack"
  input: "adanet/iteration_1/best_loss/Slice/begin"
  input: "adanet/iteration_1/best_loss/Slice/size"
  attr {
    key: "Index"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_1/best_loss/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_1/best_loss/Reshape"
  op: "Reshape"
  input: "adanet/iteration_1/best_loss/Slice"
  input: "adanet/iteration_1/best_loss/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_1/iteration/adanet/iteration/tags"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "iteration/adanet/iteration"
      }
    }
  }
}
node {
  name: "adanet/iteration_1/iteration/adanet/iteration/values"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 1
      }
    }
  }
}
node {
  name: "adanet/iteration_1/iteration/adanet/iteration"
  op: "ScalarSummary"
  input: "adanet/iteration_1/iteration/adanet/iteration/tags"
  input: "adanet/iteration_1/iteration/adanet/iteration/values"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_1/iteration_step/adanet/iteration_step/tags"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "iteration_step/adanet/iteration_step"
      }
    }
  }
}
node {
  name: "adanet/iteration_1/iteration_step/adanet/iteration_step"
  op: "ScalarSummary"
  input: "adanet/iteration_1/iteration_step/adanet/iteration_step/tags"
  input: "adanet/iteration_1/step/read"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_1/loss/tags"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "loss"
      }
    }
  }
}
node {
  name: "adanet/iteration_1/loss"
  op: "ScalarSummary"
  input: "adanet/iteration_1/loss/tags"
  input: "adanet/iteration_1/best_loss/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_1/train_op/is_over/LogicalNot"
  op: "LogicalNot"
  input: "adanet/iteration_1/candidate_t0_1_layer_dnn_grow_complexity_regularized/is_training"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_1/train_op/is_over/LogicalAnd/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_BOOL
        tensor_shape {
        }
        bool_val: true
      }
    }
  }
}
node {
  name: "adanet/iteration_1/train_op/is_over/LogicalAnd"
  op: "LogicalAnd"
  input: "adanet/iteration_1/train_op/is_over/LogicalAnd/x"
  input: "adanet/iteration_1/train_op/is_over/LogicalNot"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_1/train_op/is_over/LogicalNot_1"
  op: "LogicalNot"
  input: "adanet/iteration_1/candidate_t1_1_layer_dnn_grow_complexity_regularized/is_training"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_1/train_op/is_over/LogicalAnd_1"
  op: "LogicalAnd"
  input: "adanet/iteration_1/train_op/is_over/LogicalAnd"
  input: "adanet/iteration_1/train_op/is_over/LogicalNot_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_1/train_op/is_over/LogicalNot_2"
  op: "LogicalNot"
  input: "adanet/iteration_1/candidate_t1_2_layer_dnn_grow_complexity_regularized/is_training"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_1/train_op/is_over/LogicalAnd_2"
  op: "LogicalAnd"
  input: "adanet/iteration_1/train_op/is_over/LogicalAnd_1"
  input: "adanet/iteration_1/train_op/is_over/LogicalNot_2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_1/train_op/is_over/is_over_var_template/is_over_var/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_1/train_op/is_over/is_over_var_template/is_over_var"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_BOOL
        tensor_shape {
        }
        bool_val: false
      }
    }
  }
}
node {
  name: "adanet/iteration_1/train_op/is_over/is_over_var_template/is_over_var"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_1/train_op/is_over/is_over_var_template/is_over_var"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "adanet/iteration_1/train_op/is_over/is_over_var_template/is_over_var/Assign"
  op: "Assign"
  input: "adanet/iteration_1/train_op/is_over/is_over_var_template/is_over_var"
  input: "adanet/iteration_1/train_op/is_over/is_over_var_template/is_over_var/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_1/train_op/is_over/is_over_var_template/is_over_var"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "adanet/iteration_1/train_op/is_over/is_over_var_template/is_over_var/read"
  op: "Identity"
  input: "adanet/iteration_1/train_op/is_over/is_over_var_template/is_over_var"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_1/train_op/is_over/is_over_var_template/is_over_var"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_1/train_op/is_over/cond/Switch"
  op: "Switch"
  input: "adanet/iteration_1/train_op/is_over/LogicalAnd_2"
  input: "adanet/iteration_1/train_op/is_over/LogicalAnd_2"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_1/train_op/is_over/cond/switch_t"
  op: "Identity"
  input: "adanet/iteration_1/train_op/is_over/cond/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_1/train_op/is_over/cond/switch_f"
  op: "Identity"
  input: "adanet/iteration_1/train_op/is_over/cond/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_1/train_op/is_over/cond/pred_id"
  op: "Identity"
  input: "adanet/iteration_1/train_op/is_over/LogicalAnd_2"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_1/train_op/is_over/cond/assign_is_over/value"
  op: "Const"
  input: "^adanet/iteration_1/train_op/is_over/cond/switch_t"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_BOOL
        tensor_shape {
        }
        bool_val: true
      }
    }
  }
}
node {
  name: "adanet/iteration_1/train_op/is_over/cond/assign_is_over"
  op: "Assign"
  input: "adanet/iteration_1/train_op/is_over/cond/assign_is_over/Switch:1"
  input: "adanet/iteration_1/train_op/is_over/cond/assign_is_over/value"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_1/train_op/is_over/is_over_var_template/is_over_var"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "adanet/iteration_1/train_op/is_over/cond/assign_is_over/Switch"
  op: "RefSwitch"
  input: "adanet/iteration_1/train_op/is_over/is_over_var_template/is_over_var"
  input: "adanet/iteration_1/train_op/is_over/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_1/train_op/is_over/is_over_var_template/is_over_var"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_1/train_op/is_over/cond/noassign_is_over"
  op: "NoOp"
  input: "^adanet/iteration_1/train_op/is_over/cond/switch_f"
}
node {
  name: "adanet/iteration_1/train_op/is_over/cond/control_dependency"
  op: "Identity"
  input: "adanet/iteration_1/train_op/is_over/cond/switch_f"
  input: "^adanet/iteration_1/train_op/is_over/cond/noassign_is_over"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_1/train_op/is_over/cond/switch_f"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_1/train_op/is_over/cond/Merge"
  op: "Merge"
  input: "adanet/iteration_1/train_op/is_over/cond/control_dependency"
  input: "adanet/iteration_1/train_op/is_over/cond/assign_is_over"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_1/train_op/AssignAdd/value"
  op: "Const"
  input: "^adanet/iteration_1/ensemble_t1_1_layer_dnn_grow_complexity_regularized/train_mixture_weights/mixture_weights_train_op"
  input: "^adanet/iteration_1/ensemble_t1_2_layer_dnn_grow_complexity_regularized/train_mixture_weights/mixture_weights_train_op"
  input: "^adanet/iteration_1/subnetwork_t1_1_layer_dnn/RMSProp"
  input: "^adanet/iteration_1/subnetwork_t1_2_layer_dnn/RMSProp"
  input: "^adanet/iteration_1/train_op/is_over/cond/Merge"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 1
      }
    }
  }
}
node {
  name: "adanet/iteration_1/train_op/AssignAdd"
  op: "AssignAdd"
  input: "global_step"
  input: "adanet/iteration_1/train_op/AssignAdd/value"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "adanet/iteration_1/train_op/AssignAdd_1/value"
  op: "Const"
  input: "^adanet/iteration_1/ensemble_t1_1_layer_dnn_grow_complexity_regularized/train_mixture_weights/mixture_weights_train_op"
  input: "^adanet/iteration_1/ensemble_t1_2_layer_dnn_grow_complexity_regularized/train_mixture_weights/mixture_weights_train_op"
  input: "^adanet/iteration_1/subnetwork_t1_1_layer_dnn/RMSProp"
  input: "^adanet/iteration_1/subnetwork_t1_2_layer_dnn/RMSProp"
  input: "^adanet/iteration_1/train_op/is_over/cond/Merge"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 1
      }
    }
  }
}
node {
  name: "adanet/iteration_1/train_op/AssignAdd_1"
  op: "AssignAdd"
  input: "adanet/iteration_1/step"
  input: "adanet/iteration_1/train_op/AssignAdd_1/value"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_1/step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "adanet/iteration_1/train_op/group_deps"
  op: "NoOp"
  input: "^adanet/iteration_1/ensemble_t1_1_layer_dnn_grow_complexity_regularized/train_mixture_weights/mixture_weights_train_op"
  input: "^adanet/iteration_1/ensemble_t1_2_layer_dnn_grow_complexity_regularized/train_mixture_weights/mixture_weights_train_op"
  input: "^adanet/iteration_1/subnetwork_t1_1_layer_dnn/RMSProp"
  input: "^adanet/iteration_1/subnetwork_t1_2_layer_dnn/RMSProp"
  input: "^adanet/iteration_1/train_op/AssignAdd"
  input: "^adanet/iteration_1/train_op/AssignAdd_1"
  input: "^adanet/iteration_1/train_op/is_over/cond/Merge"
}
node {
  name: "current_iteration/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@current_iteration"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 0
      }
    }
  }
}
node {
  name: "current_iteration"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@current_iteration"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "current_iteration/Assign"
  op: "Assign"
  input: "current_iteration"
  input: "current_iteration/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@current_iteration"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "current_iteration/read"
  op: "Identity"
  input: "current_iteration"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@current_iteration"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Const_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "init"
  op: "NoOp"
  input: "^adanet/iteration_0/candidate_t0_1_layer_dnn_grow_complexity_regularized/adanet/iteration_0/candidate_t0_1_layer_dnn_grow_complexity_regularized/adanet_loss/biased/Assign"
  input: "^adanet/iteration_0/candidate_t0_1_layer_dnn_grow_complexity_regularized/adanet/iteration_0/candidate_t0_1_layer_dnn_grow_complexity_regularized/adanet_loss/local_step/Assign"
  input: "^adanet/iteration_0/candidate_t0_1_layer_dnn_grow_complexity_regularized/adanet_loss/Assign"
  input: "^adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/bias/Assign"
  input: "^adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/weighted_subnetwork_0/logits/mixture_weight/Assign"
  input: "^adanet/iteration_0/step/Assign"
  input: "^adanet/iteration_0/subnetwork_t0_1_layer_dnn/dense/bias/Assign"
  input: "^adanet/iteration_0/subnetwork_t0_1_layer_dnn/dense/kernel/Assign"
  input: "^adanet/iteration_0/subnetwork_t0_1_layer_dnn/dense_1/bias/Assign"
  input: "^adanet/iteration_0/subnetwork_t0_1_layer_dnn/dense_1/kernel/Assign"
  input: "^adanet/iteration_0/train_op/is_over/is_over_var_template/is_over_var/Assign"
  input: "^adanet/iteration_1/candidate_t0_1_layer_dnn_grow_complexity_regularized/adanet/iteration_1/candidate_t0_1_layer_dnn_grow_complexity_regularized/adanet_loss/biased/Assign"
  input: "^adanet/iteration_1/candidate_t0_1_layer_dnn_grow_complexity_regularized/adanet/iteration_1/candidate_t0_1_layer_dnn_grow_complexity_regularized/adanet_loss/local_step/Assign"
  input: "^adanet/iteration_1/candidate_t0_1_layer_dnn_grow_complexity_regularized/adanet_loss/Assign"
  input: "^adanet/iteration_1/candidate_t1_1_layer_dnn_grow_complexity_regularized/adanet/iteration_1/candidate_t1_1_layer_dnn_grow_complexity_regularized/adanet_loss/biased/Assign"
  input: "^adanet/iteration_1/candidate_t1_1_layer_dnn_grow_complexity_regularized/adanet/iteration_1/candidate_t1_1_layer_dnn_grow_complexity_regularized/adanet_loss/local_step/Assign"
  input: "^adanet/iteration_1/candidate_t1_1_layer_dnn_grow_complexity_regularized/adanet_loss/Assign"
  input: "^adanet/iteration_1/candidate_t1_2_layer_dnn_grow_complexity_regularized/adanet/iteration_1/candidate_t1_2_layer_dnn_grow_complexity_regularized/adanet_loss/biased/Assign"
  input: "^adanet/iteration_1/candidate_t1_2_layer_dnn_grow_complexity_regularized/adanet/iteration_1/candidate_t1_2_layer_dnn_grow_complexity_regularized/adanet_loss/local_step/Assign"
  input: "^adanet/iteration_1/candidate_t1_2_layer_dnn_grow_complexity_regularized/adanet_loss/Assign"
  input: "^adanet/iteration_1/ensemble_t1_1_layer_dnn_grow_complexity_regularized/bias/Assign"
  input: "^adanet/iteration_1/ensemble_t1_1_layer_dnn_grow_complexity_regularized/weighted_subnetwork_0/logits/mixture_weight/Assign"
  input: "^adanet/iteration_1/ensemble_t1_1_layer_dnn_grow_complexity_regularized/weighted_subnetwork_1/logits/mixture_weight/Assign"
  input: "^adanet/iteration_1/ensemble_t1_2_layer_dnn_grow_complexity_regularized/bias/Assign"
  input: "^adanet/iteration_1/ensemble_t1_2_layer_dnn_grow_complexity_regularized/weighted_subnetwork_0/logits/mixture_weight/Assign"
  input: "^adanet/iteration_1/ensemble_t1_2_layer_dnn_grow_complexity_regularized/weighted_subnetwork_1/logits/mixture_weight/Assign"
  input: "^adanet/iteration_1/step/Assign"
  input: "^adanet/iteration_1/subnetwork_t1_1_layer_dnn/adanet/iteration_1/subnetwork_t1_1_layer_dnn/dense/bias/RMSProp/Assign"
  input: "^adanet/iteration_1/subnetwork_t1_1_layer_dnn/adanet/iteration_1/subnetwork_t1_1_layer_dnn/dense/bias/RMSProp_1/Assign"
  input: "^adanet/iteration_1/subnetwork_t1_1_layer_dnn/adanet/iteration_1/subnetwork_t1_1_layer_dnn/dense/kernel/RMSProp/Assign"
  input: "^adanet/iteration_1/subnetwork_t1_1_layer_dnn/adanet/iteration_1/subnetwork_t1_1_layer_dnn/dense/kernel/RMSProp_1/Assign"
  input: "^adanet/iteration_1/subnetwork_t1_1_layer_dnn/adanet/iteration_1/subnetwork_t1_1_layer_dnn/dense_1/bias/RMSProp/Assign"
  input: "^adanet/iteration_1/subnetwork_t1_1_layer_dnn/adanet/iteration_1/subnetwork_t1_1_layer_dnn/dense_1/bias/RMSProp_1/Assign"
  input: "^adanet/iteration_1/subnetwork_t1_1_layer_dnn/adanet/iteration_1/subnetwork_t1_1_layer_dnn/dense_1/kernel/RMSProp/Assign"
  input: "^adanet/iteration_1/subnetwork_t1_1_layer_dnn/adanet/iteration_1/subnetwork_t1_1_layer_dnn/dense_1/kernel/RMSProp_1/Assign"
  input: "^adanet/iteration_1/subnetwork_t1_1_layer_dnn/dense/bias/Assign"
  input: "^adanet/iteration_1/subnetwork_t1_1_layer_dnn/dense/kernel/Assign"
  input: "^adanet/iteration_1/subnetwork_t1_1_layer_dnn/dense_1/bias/Assign"
  input: "^adanet/iteration_1/subnetwork_t1_1_layer_dnn/dense_1/kernel/Assign"
  input: "^adanet/iteration_1/subnetwork_t1_2_layer_dnn/adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense/bias/RMSProp/Assign"
  input: "^adanet/iteration_1/subnetwork_t1_2_layer_dnn/adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense/bias/RMSProp_1/Assign"
  input: "^adanet/iteration_1/subnetwork_t1_2_layer_dnn/adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense/kernel/RMSProp/Assign"
  input: "^adanet/iteration_1/subnetwork_t1_2_layer_dnn/adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense/kernel/RMSProp_1/Assign"
  input: "^adanet/iteration_1/subnetwork_t1_2_layer_dnn/adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense_1/bias/RMSProp/Assign"
  input: "^adanet/iteration_1/subnetwork_t1_2_layer_dnn/adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense_1/bias/RMSProp_1/Assign"
  input: "^adanet/iteration_1/subnetwork_t1_2_layer_dnn/adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense_1/kernel/RMSProp/Assign"
  input: "^adanet/iteration_1/subnetwork_t1_2_layer_dnn/adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense_1/kernel/RMSProp_1/Assign"
  input: "^adanet/iteration_1/subnetwork_t1_2_layer_dnn/adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense_2/bias/RMSProp/Assign"
  input: "^adanet/iteration_1/subnetwork_t1_2_layer_dnn/adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense_2/bias/RMSProp_1/Assign"
  input: "^adanet/iteration_1/subnetwork_t1_2_layer_dnn/adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense_2/kernel/RMSProp/Assign"
  input: "^adanet/iteration_1/subnetwork_t1_2_layer_dnn/adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense_2/kernel/RMSProp_1/Assign"
  input: "^adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense/bias/Assign"
  input: "^adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense/kernel/Assign"
  input: "^adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense_1/bias/Assign"
  input: "^adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense_1/kernel/Assign"
  input: "^adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense_2/bias/Assign"
  input: "^adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense_2/kernel/Assign"
  input: "^adanet/iteration_1/train_op/is_over/is_over_var_template/is_over_var/Assign"
  input: "^current_iteration/Assign"
  input: "^global_step/Assign"
}
node {
  name: "init_1"
  op: "NoOp"
}
node {
  name: "group_deps"
  op: "NoOp"
  input: "^init"
  input: "^init_1"
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized"
  op: "IsVariableInitialized"
  input: "global_step"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_1"
  op: "IsVariableInitialized"
  input: "adanet/iteration_0/step"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_2"
  op: "IsVariableInitialized"
  input: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/dense/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/subnetwork_t0_1_layer_dnn/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_3"
  op: "IsVariableInitialized"
  input: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/dense/bias"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/subnetwork_t0_1_layer_dnn/dense/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_4"
  op: "IsVariableInitialized"
  input: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/dense_1/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/subnetwork_t0_1_layer_dnn/dense_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_5"
  op: "IsVariableInitialized"
  input: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/dense_1/bias"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/subnetwork_t0_1_layer_dnn/dense_1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_6"
  op: "IsVariableInitialized"
  input: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/weighted_subnetwork_0/logits/mixture_weight"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/weighted_subnetwork_0/logits/mixture_weight"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_7"
  op: "IsVariableInitialized"
  input: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/bias"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_8"
  op: "IsVariableInitialized"
  input: "adanet/iteration_0/candidate_t0_1_layer_dnn_grow_complexity_regularized/adanet_loss"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/candidate_t0_1_layer_dnn_grow_complexity_regularized/adanet_loss"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_9"
  op: "IsVariableInitialized"
  input: "adanet/iteration_0/candidate_t0_1_layer_dnn_grow_complexity_regularized/adanet/iteration_0/candidate_t0_1_layer_dnn_grow_complexity_regularized/adanet_loss/biased"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/candidate_t0_1_layer_dnn_grow_complexity_regularized/adanet_loss"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_10"
  op: "IsVariableInitialized"
  input: "adanet/iteration_0/candidate_t0_1_layer_dnn_grow_complexity_regularized/adanet/iteration_0/candidate_t0_1_layer_dnn_grow_complexity_regularized/adanet_loss/local_step"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/candidate_t0_1_layer_dnn_grow_complexity_regularized/adanet_loss"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_11"
  op: "IsVariableInitialized"
  input: "adanet/iteration_0/train_op/is_over/is_over_var_template/is_over_var"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/train_op/is_over/is_over_var_template/is_over_var"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_12"
  op: "IsVariableInitialized"
  input: "adanet/iteration_1/step"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_1/step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_13"
  op: "IsVariableInitialized"
  input: "adanet/iteration_1/candidate_t0_1_layer_dnn_grow_complexity_regularized/adanet_loss"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_1/candidate_t0_1_layer_dnn_grow_complexity_regularized/adanet_loss"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_14"
  op: "IsVariableInitialized"
  input: "adanet/iteration_1/candidate_t0_1_layer_dnn_grow_complexity_regularized/adanet/iteration_1/candidate_t0_1_layer_dnn_grow_complexity_regularized/adanet_loss/biased"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_1/candidate_t0_1_layer_dnn_grow_complexity_regularized/adanet_loss"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_15"
  op: "IsVariableInitialized"
  input: "adanet/iteration_1/candidate_t0_1_layer_dnn_grow_complexity_regularized/adanet/iteration_1/candidate_t0_1_layer_dnn_grow_complexity_regularized/adanet_loss/local_step"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_1/candidate_t0_1_layer_dnn_grow_complexity_regularized/adanet_loss"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_16"
  op: "IsVariableInitialized"
  input: "adanet/iteration_1/subnetwork_t1_1_layer_dnn/dense/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_1/subnetwork_t1_1_layer_dnn/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_17"
  op: "IsVariableInitialized"
  input: "adanet/iteration_1/subnetwork_t1_1_layer_dnn/dense/bias"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_1/subnetwork_t1_1_layer_dnn/dense/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_18"
  op: "IsVariableInitialized"
  input: "adanet/iteration_1/subnetwork_t1_1_layer_dnn/dense_1/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_1/subnetwork_t1_1_layer_dnn/dense_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_19"
  op: "IsVariableInitialized"
  input: "adanet/iteration_1/subnetwork_t1_1_layer_dnn/dense_1/bias"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_1/subnetwork_t1_1_layer_dnn/dense_1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_20"
  op: "IsVariableInitialized"
  input: "adanet/iteration_1/subnetwork_t1_1_layer_dnn/adanet/iteration_1/subnetwork_t1_1_layer_dnn/dense/kernel/RMSProp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_1/subnetwork_t1_1_layer_dnn/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_21"
  op: "IsVariableInitialized"
  input: "adanet/iteration_1/subnetwork_t1_1_layer_dnn/adanet/iteration_1/subnetwork_t1_1_layer_dnn/dense/kernel/RMSProp_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_1/subnetwork_t1_1_layer_dnn/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_22"
  op: "IsVariableInitialized"
  input: "adanet/iteration_1/subnetwork_t1_1_layer_dnn/adanet/iteration_1/subnetwork_t1_1_layer_dnn/dense/bias/RMSProp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_1/subnetwork_t1_1_layer_dnn/dense/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_23"
  op: "IsVariableInitialized"
  input: "adanet/iteration_1/subnetwork_t1_1_layer_dnn/adanet/iteration_1/subnetwork_t1_1_layer_dnn/dense/bias/RMSProp_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_1/subnetwork_t1_1_layer_dnn/dense/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_24"
  op: "IsVariableInitialized"
  input: "adanet/iteration_1/subnetwork_t1_1_layer_dnn/adanet/iteration_1/subnetwork_t1_1_layer_dnn/dense_1/kernel/RMSProp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_1/subnetwork_t1_1_layer_dnn/dense_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_25"
  op: "IsVariableInitialized"
  input: "adanet/iteration_1/subnetwork_t1_1_layer_dnn/adanet/iteration_1/subnetwork_t1_1_layer_dnn/dense_1/kernel/RMSProp_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_1/subnetwork_t1_1_layer_dnn/dense_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_26"
  op: "IsVariableInitialized"
  input: "adanet/iteration_1/subnetwork_t1_1_layer_dnn/adanet/iteration_1/subnetwork_t1_1_layer_dnn/dense_1/bias/RMSProp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_1/subnetwork_t1_1_layer_dnn/dense_1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_27"
  op: "IsVariableInitialized"
  input: "adanet/iteration_1/subnetwork_t1_1_layer_dnn/adanet/iteration_1/subnetwork_t1_1_layer_dnn/dense_1/bias/RMSProp_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_1/subnetwork_t1_1_layer_dnn/dense_1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_28"
  op: "IsVariableInitialized"
  input: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_29"
  op: "IsVariableInitialized"
  input: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense/bias"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_30"
  op: "IsVariableInitialized"
  input: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense_1/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_31"
  op: "IsVariableInitialized"
  input: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense_1/bias"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense_1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_32"
  op: "IsVariableInitialized"
  input: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense_2/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense_2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_33"
  op: "IsVariableInitialized"
  input: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense_2/bias"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense_2/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_34"
  op: "IsVariableInitialized"
  input: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense/kernel/RMSProp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_35"
  op: "IsVariableInitialized"
  input: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense/kernel/RMSProp_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_36"
  op: "IsVariableInitialized"
  input: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense/bias/RMSProp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_37"
  op: "IsVariableInitialized"
  input: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense/bias/RMSProp_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_38"
  op: "IsVariableInitialized"
  input: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense_1/kernel/RMSProp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_39"
  op: "IsVariableInitialized"
  input: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense_1/kernel/RMSProp_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_40"
  op: "IsVariableInitialized"
  input: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense_1/bias/RMSProp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense_1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_41"
  op: "IsVariableInitialized"
  input: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense_1/bias/RMSProp_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense_1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_42"
  op: "IsVariableInitialized"
  input: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense_2/kernel/RMSProp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense_2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_43"
  op: "IsVariableInitialized"
  input: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense_2/kernel/RMSProp_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense_2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_44"
  op: "IsVariableInitialized"
  input: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense_2/bias/RMSProp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense_2/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_45"
  op: "IsVariableInitialized"
  input: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense_2/bias/RMSProp_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense_2/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_46"
  op: "IsVariableInitialized"
  input: "adanet/iteration_1/ensemble_t1_1_layer_dnn_grow_complexity_regularized/weighted_subnetwork_0/logits/mixture_weight"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_1/ensemble_t1_1_layer_dnn_grow_complexity_regularized/weighted_subnetwork_0/logits/mixture_weight"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_47"
  op: "IsVariableInitialized"
  input: "adanet/iteration_1/ensemble_t1_1_layer_dnn_grow_complexity_regularized/weighted_subnetwork_1/logits/mixture_weight"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_1/ensemble_t1_1_layer_dnn_grow_complexity_regularized/weighted_subnetwork_1/logits/mixture_weight"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_48"
  op: "IsVariableInitialized"
  input: "adanet/iteration_1/ensemble_t1_1_layer_dnn_grow_complexity_regularized/bias"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_1/ensemble_t1_1_layer_dnn_grow_complexity_regularized/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_49"
  op: "IsVariableInitialized"
  input: "adanet/iteration_1/candidate_t1_1_layer_dnn_grow_complexity_regularized/adanet_loss"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_1/candidate_t1_1_layer_dnn_grow_complexity_regularized/adanet_loss"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_50"
  op: "IsVariableInitialized"
  input: "adanet/iteration_1/candidate_t1_1_layer_dnn_grow_complexity_regularized/adanet/iteration_1/candidate_t1_1_layer_dnn_grow_complexity_regularized/adanet_loss/biased"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_1/candidate_t1_1_layer_dnn_grow_complexity_regularized/adanet_loss"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_51"
  op: "IsVariableInitialized"
  input: "adanet/iteration_1/candidate_t1_1_layer_dnn_grow_complexity_regularized/adanet/iteration_1/candidate_t1_1_layer_dnn_grow_complexity_regularized/adanet_loss/local_step"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_1/candidate_t1_1_layer_dnn_grow_complexity_regularized/adanet_loss"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_52"
  op: "IsVariableInitialized"
  input: "adanet/iteration_1/ensemble_t1_2_layer_dnn_grow_complexity_regularized/weighted_subnetwork_0/logits/mixture_weight"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_1/ensemble_t1_2_layer_dnn_grow_complexity_regularized/weighted_subnetwork_0/logits/mixture_weight"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_53"
  op: "IsVariableInitialized"
  input: "adanet/iteration_1/ensemble_t1_2_layer_dnn_grow_complexity_regularized/weighted_subnetwork_1/logits/mixture_weight"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_1/ensemble_t1_2_layer_dnn_grow_complexity_regularized/weighted_subnetwork_1/logits/mixture_weight"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_54"
  op: "IsVariableInitialized"
  input: "adanet/iteration_1/ensemble_t1_2_layer_dnn_grow_complexity_regularized/bias"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_1/ensemble_t1_2_layer_dnn_grow_complexity_regularized/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_55"
  op: "IsVariableInitialized"
  input: "adanet/iteration_1/candidate_t1_2_layer_dnn_grow_complexity_regularized/adanet_loss"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_1/candidate_t1_2_layer_dnn_grow_complexity_regularized/adanet_loss"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_56"
  op: "IsVariableInitialized"
  input: "adanet/iteration_1/candidate_t1_2_layer_dnn_grow_complexity_regularized/adanet/iteration_1/candidate_t1_2_layer_dnn_grow_complexity_regularized/adanet_loss/biased"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_1/candidate_t1_2_layer_dnn_grow_complexity_regularized/adanet_loss"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_57"
  op: "IsVariableInitialized"
  input: "adanet/iteration_1/candidate_t1_2_layer_dnn_grow_complexity_regularized/adanet/iteration_1/candidate_t1_2_layer_dnn_grow_complexity_regularized/adanet_loss/local_step"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_1/candidate_t1_2_layer_dnn_grow_complexity_regularized/adanet_loss"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_58"
  op: "IsVariableInitialized"
  input: "adanet/iteration_1/train_op/is_over/is_over_var_template/is_over_var"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_1/train_op/is_over/is_over_var_template/is_over_var"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_59"
  op: "IsVariableInitialized"
  input: "current_iteration"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@current_iteration"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_60"
  op: "IsVariableInitialized"
  input: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/metrics/average_loss/total"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/subnetwork_t0_1_layer_dnn/metrics/average_loss/total"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_61"
  op: "IsVariableInitialized"
  input: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/metrics/average_loss/count"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/subnetwork_t0_1_layer_dnn/metrics/average_loss/count"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_62"
  op: "IsVariableInitialized"
  input: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/metrics/accuracy/total"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/subnetwork_t0_1_layer_dnn/metrics/accuracy/total"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_63"
  op: "IsVariableInitialized"
  input: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/metrics/accuracy/count"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/subnetwork_t0_1_layer_dnn/metrics/accuracy/count"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_64"
  op: "IsVariableInitialized"
  input: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/mean/total"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/subnetwork_t0_1_layer_dnn/mean/total"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_65"
  op: "IsVariableInitialized"
  input: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/mean/count"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/subnetwork_t0_1_layer_dnn/mean/count"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_66"
  op: "IsVariableInitialized"
  input: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/metrics/average_loss/total"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/metrics/average_loss/total"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_67"
  op: "IsVariableInitialized"
  input: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/metrics/average_loss/count"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/metrics/average_loss/count"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_68"
  op: "IsVariableInitialized"
  input: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/metrics/accuracy/total"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/metrics/accuracy/total"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_69"
  op: "IsVariableInitialized"
  input: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/metrics/accuracy/count"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/metrics/accuracy/count"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_70"
  op: "IsVariableInitialized"
  input: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/mean/total"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/mean/total"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_71"
  op: "IsVariableInitialized"
  input: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/mean/count"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/mean/count"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_72"
  op: "IsVariableInitialized"
  input: "adanet/iteration_0/mean/total"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/mean/total"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_73"
  op: "IsVariableInitialized"
  input: "adanet/iteration_0/mean/count"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/mean/count"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_74"
  op: "IsVariableInitialized"
  input: "adanet/iteration_1/mean/total"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_1/mean/total"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_75"
  op: "IsVariableInitialized"
  input: "adanet/iteration_1/mean/count"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_1/mean/count"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_76"
  op: "IsVariableInitialized"
  input: "adanet/iteration_1/mean_1/total"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_1/mean_1/total"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_77"
  op: "IsVariableInitialized"
  input: "adanet/iteration_1/mean_1/count"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_1/mean_1/count"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/stack"
  op: "Pack"
  input: "report_uninitialized_variables/IsVariableInitialized"
  input: "report_uninitialized_variables/IsVariableInitialized_1"
  input: "report_uninitialized_variables/IsVariableInitialized_2"
  input: "report_uninitialized_variables/IsVariableInitialized_3"
  input: "report_uninitialized_variables/IsVariableInitialized_4"
  input: "report_uninitialized_variables/IsVariableInitialized_5"
  input: "report_uninitialized_variables/IsVariableInitialized_6"
  input: "report_uninitialized_variables/IsVariableInitialized_7"
  input: "report_uninitialized_variables/IsVariableInitialized_8"
  input: "report_uninitialized_variables/IsVariableInitialized_9"
  input: "report_uninitialized_variables/IsVariableInitialized_10"
  input: "report_uninitialized_variables/IsVariableInitialized_11"
  input: "report_uninitialized_variables/IsVariableInitialized_12"
  input: "report_uninitialized_variables/IsVariableInitialized_13"
  input: "report_uninitialized_variables/IsVariableInitialized_14"
  input: "report_uninitialized_variables/IsVariableInitialized_15"
  input: "report_uninitialized_variables/IsVariableInitialized_16"
  input: "report_uninitialized_variables/IsVariableInitialized_17"
  input: "report_uninitialized_variables/IsVariableInitialized_18"
  input: "report_uninitialized_variables/IsVariableInitialized_19"
  input: "report_uninitialized_variables/IsVariableInitialized_20"
  input: "report_uninitialized_variables/IsVariableInitialized_21"
  input: "report_uninitialized_variables/IsVariableInitialized_22"
  input: "report_uninitialized_variables/IsVariableInitialized_23"
  input: "report_uninitialized_variables/IsVariableInitialized_24"
  input: "report_uninitialized_variables/IsVariableInitialized_25"
  input: "report_uninitialized_variables/IsVariableInitialized_26"
  input: "report_uninitialized_variables/IsVariableInitialized_27"
  input: "report_uninitialized_variables/IsVariableInitialized_28"
  input: "report_uninitialized_variables/IsVariableInitialized_29"
  input: "report_uninitialized_variables/IsVariableInitialized_30"
  input: "report_uninitialized_variables/IsVariableInitialized_31"
  input: "report_uninitialized_variables/IsVariableInitialized_32"
  input: "report_uninitialized_variables/IsVariableInitialized_33"
  input: "report_uninitialized_variables/IsVariableInitialized_34"
  input: "report_uninitialized_variables/IsVariableInitialized_35"
  input: "report_uninitialized_variables/IsVariableInitialized_36"
  input: "report_uninitialized_variables/IsVariableInitialized_37"
  input: "report_uninitialized_variables/IsVariableInitialized_38"
  input: "report_uninitialized_variables/IsVariableInitialized_39"
  input: "report_uninitialized_variables/IsVariableInitialized_40"
  input: "report_uninitialized_variables/IsVariableInitialized_41"
  input: "report_uninitialized_variables/IsVariableInitialized_42"
  input: "report_uninitialized_variables/IsVariableInitialized_43"
  input: "report_uninitialized_variables/IsVariableInitialized_44"
  input: "report_uninitialized_variables/IsVariableInitialized_45"
  input: "report_uninitialized_variables/IsVariableInitialized_46"
  input: "report_uninitialized_variables/IsVariableInitialized_47"
  input: "report_uninitialized_variables/IsVariableInitialized_48"
  input: "report_uninitialized_variables/IsVariableInitialized_49"
  input: "report_uninitialized_variables/IsVariableInitialized_50"
  input: "report_uninitialized_variables/IsVariableInitialized_51"
  input: "report_uninitialized_variables/IsVariableInitialized_52"
  input: "report_uninitialized_variables/IsVariableInitialized_53"
  input: "report_uninitialized_variables/IsVariableInitialized_54"
  input: "report_uninitialized_variables/IsVariableInitialized_55"
  input: "report_uninitialized_variables/IsVariableInitialized_56"
  input: "report_uninitialized_variables/IsVariableInitialized_57"
  input: "report_uninitialized_variables/IsVariableInitialized_58"
  input: "report_uninitialized_variables/IsVariableInitialized_59"
  input: "report_uninitialized_variables/IsVariableInitialized_60"
  input: "report_uninitialized_variables/IsVariableInitialized_61"
  input: "report_uninitialized_variables/IsVariableInitialized_62"
  input: "report_uninitialized_variables/IsVariableInitialized_63"
  input: "report_uninitialized_variables/IsVariableInitialized_64"
  input: "report_uninitialized_variables/IsVariableInitialized_65"
  input: "report_uninitialized_variables/IsVariableInitialized_66"
  input: "report_uninitialized_variables/IsVariableInitialized_67"
  input: "report_uninitialized_variables/IsVariableInitialized_68"
  input: "report_uninitialized_variables/IsVariableInitialized_69"
  input: "report_uninitialized_variables/IsVariableInitialized_70"
  input: "report_uninitialized_variables/IsVariableInitialized_71"
  input: "report_uninitialized_variables/IsVariableInitialized_72"
  input: "report_uninitialized_variables/IsVariableInitialized_73"
  input: "report_uninitialized_variables/IsVariableInitialized_74"
  input: "report_uninitialized_variables/IsVariableInitialized_75"
  input: "report_uninitialized_variables/IsVariableInitialized_76"
  input: "report_uninitialized_variables/IsVariableInitialized_77"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 78
    }
  }
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 78
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "report_uninitialized_variables/LogicalNot"
  op: "LogicalNot"
  input: "report_uninitialized_variables/stack"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 78
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/Const"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 78
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 78
          }
        }
        string_val: "global_step"
        string_val: "adanet/iteration_0/step"
        string_val: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/dense/kernel"
        string_val: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/dense/bias"
        string_val: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/dense_1/kernel"
        string_val: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/dense_1/bias"
        string_val: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/weighted_subnetwork_0/logits/mixture_weight"
        string_val: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/bias"
        string_val: "adanet/iteration_0/candidate_t0_1_layer_dnn_grow_complexity_regularized/adanet_loss"
        string_val: "adanet/iteration_0/candidate_t0_1_layer_dnn_grow_complexity_regularized/adanet/iteration_0/candidate_t0_1_layer_dnn_grow_complexity_regularized/adanet_loss/biased"
        string_val: "adanet/iteration_0/candidate_t0_1_layer_dnn_grow_complexity_regularized/adanet/iteration_0/candidate_t0_1_layer_dnn_grow_complexity_regularized/adanet_loss/local_step"
        string_val: "adanet/iteration_0/train_op/is_over/is_over_var_template/is_over_var"
        string_val: "adanet/iteration_1/step"
        string_val: "adanet/iteration_1/candidate_t0_1_layer_dnn_grow_complexity_regularized/adanet_loss"
        string_val: "adanet/iteration_1/candidate_t0_1_layer_dnn_grow_complexity_regularized/adanet/iteration_1/candidate_t0_1_layer_dnn_grow_complexity_regularized/adanet_loss/biased"
        string_val: "adanet/iteration_1/candidate_t0_1_layer_dnn_grow_complexity_regularized/adanet/iteration_1/candidate_t0_1_layer_dnn_grow_complexity_regularized/adanet_loss/local_step"
        string_val: "adanet/iteration_1/subnetwork_t1_1_layer_dnn/dense/kernel"
        string_val: "adanet/iteration_1/subnetwork_t1_1_layer_dnn/dense/bias"
        string_val: "adanet/iteration_1/subnetwork_t1_1_layer_dnn/dense_1/kernel"
        string_val: "adanet/iteration_1/subnetwork_t1_1_layer_dnn/dense_1/bias"
        string_val: "adanet/iteration_1/subnetwork_t1_1_layer_dnn/adanet/iteration_1/subnetwork_t1_1_layer_dnn/dense/kernel/RMSProp"
        string_val: "adanet/iteration_1/subnetwork_t1_1_layer_dnn/adanet/iteration_1/subnetwork_t1_1_layer_dnn/dense/kernel/RMSProp_1"
        string_val: "adanet/iteration_1/subnetwork_t1_1_layer_dnn/adanet/iteration_1/subnetwork_t1_1_layer_dnn/dense/bias/RMSProp"
        string_val: "adanet/iteration_1/subnetwork_t1_1_layer_dnn/adanet/iteration_1/subnetwork_t1_1_layer_dnn/dense/bias/RMSProp_1"
        string_val: "adanet/iteration_1/subnetwork_t1_1_layer_dnn/adanet/iteration_1/subnetwork_t1_1_layer_dnn/dense_1/kernel/RMSProp"
        string_val: "adanet/iteration_1/subnetwork_t1_1_layer_dnn/adanet/iteration_1/subnetwork_t1_1_layer_dnn/dense_1/kernel/RMSProp_1"
        string_val: "adanet/iteration_1/subnetwork_t1_1_layer_dnn/adanet/iteration_1/subnetwork_t1_1_layer_dnn/dense_1/bias/RMSProp"
        string_val: "adanet/iteration_1/subnetwork_t1_1_layer_dnn/adanet/iteration_1/subnetwork_t1_1_layer_dnn/dense_1/bias/RMSProp_1"
        string_val: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense/kernel"
        string_val: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense/bias"
        string_val: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense_1/kernel"
        string_val: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense_1/bias"
        string_val: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense_2/kernel"
        string_val: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense_2/bias"
        string_val: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense/kernel/RMSProp"
        string_val: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense/kernel/RMSProp_1"
        string_val: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense/bias/RMSProp"
        string_val: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense/bias/RMSProp_1"
        string_val: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense_1/kernel/RMSProp"
        string_val: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense_1/kernel/RMSProp_1"
        string_val: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense_1/bias/RMSProp"
        string_val: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense_1/bias/RMSProp_1"
        string_val: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense_2/kernel/RMSProp"
        string_val: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense_2/kernel/RMSProp_1"
        string_val: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense_2/bias/RMSProp"
        string_val: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense_2/bias/RMSProp_1"
        string_val: "adanet/iteration_1/ensemble_t1_1_layer_dnn_grow_complexity_regularized/weighted_subnetwork_0/logits/mixture_weight"
        string_val: "adanet/iteration_1/ensemble_t1_1_layer_dnn_grow_complexity_regularized/weighted_subnetwork_1/logits/mixture_weight"
        string_val: "adanet/iteration_1/ensemble_t1_1_layer_dnn_grow_complexity_regularized/bias"
        string_val: "adanet/iteration_1/candidate_t1_1_layer_dnn_grow_complexity_regularized/adanet_loss"
        string_val: "adanet/iteration_1/candidate_t1_1_layer_dnn_grow_complexity_regularized/adanet/iteration_1/candidate_t1_1_layer_dnn_grow_complexity_regularized/adanet_loss/biased"
        string_val: "adanet/iteration_1/candidate_t1_1_layer_dnn_grow_complexity_regularized/adanet/iteration_1/candidate_t1_1_layer_dnn_grow_complexity_regularized/adanet_loss/local_step"
        string_val: "adanet/iteration_1/ensemble_t1_2_layer_dnn_grow_complexity_regularized/weighted_subnetwork_0/logits/mixture_weight"
        string_val: "adanet/iteration_1/ensemble_t1_2_layer_dnn_grow_complexity_regularized/weighted_subnetwork_1/logits/mixture_weight"
        string_val: "adanet/iteration_1/ensemble_t1_2_layer_dnn_grow_complexity_regularized/bias"
        string_val: "adanet/iteration_1/candidate_t1_2_layer_dnn_grow_complexity_regularized/adanet_loss"
        string_val: "adanet/iteration_1/candidate_t1_2_layer_dnn_grow_complexity_regularized/adanet/iteration_1/candidate_t1_2_layer_dnn_grow_complexity_regularized/adanet_loss/biased"
        string_val: "adanet/iteration_1/candidate_t1_2_layer_dnn_grow_complexity_regularized/adanet/iteration_1/candidate_t1_2_layer_dnn_grow_complexity_regularized/adanet_loss/local_step"
        string_val: "adanet/iteration_1/train_op/is_over/is_over_var_template/is_over_var"
        string_val: "current_iteration"
        string_val: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/metrics/average_loss/total"
        string_val: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/metrics/average_loss/count"
        string_val: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/metrics/accuracy/total"
        string_val: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/metrics/accuracy/count"
        string_val: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/mean/total"
        string_val: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/mean/count"
        string_val: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/metrics/average_loss/total"
        string_val: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/metrics/average_loss/count"
        string_val: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/metrics/accuracy/total"
        string_val: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/metrics/accuracy/count"
        string_val: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/mean/total"
        string_val: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/mean/count"
        string_val: "adanet/iteration_0/mean/total"
        string_val: "adanet/iteration_0/mean/count"
        string_val: "adanet/iteration_1/mean/total"
        string_val: "adanet/iteration_1/mean/count"
        string_val: "adanet/iteration_1/mean_1/total"
        string_val: "adanet/iteration_1/mean_1/count"
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Shape"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 78
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice/stack"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice/stack_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice/stack_2"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice"
  op: "StridedSlice"
  input: "report_uninitialized_variables/boolean_mask/Shape"
  input: "report_uninitialized_variables/boolean_mask/strided_slice/stack"
  input: "report_uninitialized_variables/boolean_mask/strided_slice/stack_1"
  input: "report_uninitialized_variables/boolean_mask/strided_slice/stack_2"
  device: "/device:CPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Prod/reduction_indices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Prod"
  op: "Prod"
  input: "report_uninitialized_variables/boolean_mask/strided_slice"
  input: "report_uninitialized_variables/boolean_mask/Prod/reduction_indices"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Shape_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 78
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice_1/stack"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice_1/stack_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice_1/stack_2"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice_1"
  op: "StridedSlice"
  input: "report_uninitialized_variables/boolean_mask/Shape_1"
  input: "report_uninitialized_variables/boolean_mask/strided_slice_1/stack"
  input: "report_uninitialized_variables/boolean_mask/strided_slice_1/stack_1"
  input: "report_uninitialized_variables/boolean_mask/strided_slice_1/stack_2"
  device: "/device:CPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Shape_2"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 78
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice_2/stack"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice_2/stack_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice_2/stack_2"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice_2"
  op: "StridedSlice"
  input: "report_uninitialized_variables/boolean_mask/Shape_2"
  input: "report_uninitialized_variables/boolean_mask/strided_slice_2/stack"
  input: "report_uninitialized_variables/boolean_mask/strided_slice_2/stack_1"
  input: "report_uninitialized_variables/boolean_mask/strided_slice_2/stack_2"
  device: "/device:CPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/concat/values_1"
  op: "Pack"
  input: "report_uninitialized_variables/boolean_mask/Prod"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/concat/axis"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/concat"
  op: "ConcatV2"
  input: "report_uninitialized_variables/boolean_mask/strided_slice_1"
  input: "report_uninitialized_variables/boolean_mask/concat/values_1"
  input: "report_uninitialized_variables/boolean_mask/strided_slice_2"
  input: "report_uninitialized_variables/boolean_mask/concat/axis"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Reshape"
  op: "Reshape"
  input: "report_uninitialized_variables/Const"
  input: "report_uninitialized_variables/boolean_mask/concat"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 78
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Reshape_1/shape"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Reshape_1"
  op: "Reshape"
  input: "report_uninitialized_variables/LogicalNot"
  input: "report_uninitialized_variables/boolean_mask/Reshape_1/shape"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 78
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Where"
  op: "Where"
  input: "report_uninitialized_variables/boolean_mask/Reshape_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Squeeze"
  op: "Squeeze"
  input: "report_uninitialized_variables/boolean_mask/Where"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/GatherV2/axis"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/GatherV2"
  op: "GatherV2"
  input: "report_uninitialized_variables/boolean_mask/Reshape"
  input: "report_uninitialized_variables/boolean_mask/Squeeze"
  input: "report_uninitialized_variables/boolean_mask/GatherV2/axis"
  device: "/device:CPU:0"
  attr {
    key: "Taxis"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tindices"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_resources/Const"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "concat/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "concat"
  op: "ConcatV2"
  input: "report_uninitialized_variables/boolean_mask/GatherV2"
  input: "report_uninitialized_resources/Const"
  input: "concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized"
  op: "IsVariableInitialized"
  input: "global_step"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_1"
  op: "IsVariableInitialized"
  input: "adanet/iteration_0/step"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_2"
  op: "IsVariableInitialized"
  input: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/dense/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/subnetwork_t0_1_layer_dnn/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_3"
  op: "IsVariableInitialized"
  input: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/dense/bias"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/subnetwork_t0_1_layer_dnn/dense/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_4"
  op: "IsVariableInitialized"
  input: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/dense_1/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/subnetwork_t0_1_layer_dnn/dense_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_5"
  op: "IsVariableInitialized"
  input: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/dense_1/bias"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/subnetwork_t0_1_layer_dnn/dense_1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_6"
  op: "IsVariableInitialized"
  input: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/weighted_subnetwork_0/logits/mixture_weight"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/weighted_subnetwork_0/logits/mixture_weight"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_7"
  op: "IsVariableInitialized"
  input: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/bias"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_8"
  op: "IsVariableInitialized"
  input: "adanet/iteration_0/candidate_t0_1_layer_dnn_grow_complexity_regularized/adanet_loss"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/candidate_t0_1_layer_dnn_grow_complexity_regularized/adanet_loss"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_9"
  op: "IsVariableInitialized"
  input: "adanet/iteration_0/candidate_t0_1_layer_dnn_grow_complexity_regularized/adanet/iteration_0/candidate_t0_1_layer_dnn_grow_complexity_regularized/adanet_loss/biased"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/candidate_t0_1_layer_dnn_grow_complexity_regularized/adanet_loss"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_10"
  op: "IsVariableInitialized"
  input: "adanet/iteration_0/candidate_t0_1_layer_dnn_grow_complexity_regularized/adanet/iteration_0/candidate_t0_1_layer_dnn_grow_complexity_regularized/adanet_loss/local_step"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/candidate_t0_1_layer_dnn_grow_complexity_regularized/adanet_loss"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_11"
  op: "IsVariableInitialized"
  input: "adanet/iteration_0/train_op/is_over/is_over_var_template/is_over_var"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/train_op/is_over/is_over_var_template/is_over_var"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_12"
  op: "IsVariableInitialized"
  input: "adanet/iteration_1/step"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_1/step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_13"
  op: "IsVariableInitialized"
  input: "adanet/iteration_1/candidate_t0_1_layer_dnn_grow_complexity_regularized/adanet_loss"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_1/candidate_t0_1_layer_dnn_grow_complexity_regularized/adanet_loss"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_14"
  op: "IsVariableInitialized"
  input: "adanet/iteration_1/candidate_t0_1_layer_dnn_grow_complexity_regularized/adanet/iteration_1/candidate_t0_1_layer_dnn_grow_complexity_regularized/adanet_loss/biased"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_1/candidate_t0_1_layer_dnn_grow_complexity_regularized/adanet_loss"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_15"
  op: "IsVariableInitialized"
  input: "adanet/iteration_1/candidate_t0_1_layer_dnn_grow_complexity_regularized/adanet/iteration_1/candidate_t0_1_layer_dnn_grow_complexity_regularized/adanet_loss/local_step"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_1/candidate_t0_1_layer_dnn_grow_complexity_regularized/adanet_loss"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_16"
  op: "IsVariableInitialized"
  input: "adanet/iteration_1/subnetwork_t1_1_layer_dnn/dense/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_1/subnetwork_t1_1_layer_dnn/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_17"
  op: "IsVariableInitialized"
  input: "adanet/iteration_1/subnetwork_t1_1_layer_dnn/dense/bias"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_1/subnetwork_t1_1_layer_dnn/dense/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_18"
  op: "IsVariableInitialized"
  input: "adanet/iteration_1/subnetwork_t1_1_layer_dnn/dense_1/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_1/subnetwork_t1_1_layer_dnn/dense_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_19"
  op: "IsVariableInitialized"
  input: "adanet/iteration_1/subnetwork_t1_1_layer_dnn/dense_1/bias"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_1/subnetwork_t1_1_layer_dnn/dense_1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_20"
  op: "IsVariableInitialized"
  input: "adanet/iteration_1/subnetwork_t1_1_layer_dnn/adanet/iteration_1/subnetwork_t1_1_layer_dnn/dense/kernel/RMSProp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_1/subnetwork_t1_1_layer_dnn/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_21"
  op: "IsVariableInitialized"
  input: "adanet/iteration_1/subnetwork_t1_1_layer_dnn/adanet/iteration_1/subnetwork_t1_1_layer_dnn/dense/kernel/RMSProp_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_1/subnetwork_t1_1_layer_dnn/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_22"
  op: "IsVariableInitialized"
  input: "adanet/iteration_1/subnetwork_t1_1_layer_dnn/adanet/iteration_1/subnetwork_t1_1_layer_dnn/dense/bias/RMSProp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_1/subnetwork_t1_1_layer_dnn/dense/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_23"
  op: "IsVariableInitialized"
  input: "adanet/iteration_1/subnetwork_t1_1_layer_dnn/adanet/iteration_1/subnetwork_t1_1_layer_dnn/dense/bias/RMSProp_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_1/subnetwork_t1_1_layer_dnn/dense/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_24"
  op: "IsVariableInitialized"
  input: "adanet/iteration_1/subnetwork_t1_1_layer_dnn/adanet/iteration_1/subnetwork_t1_1_layer_dnn/dense_1/kernel/RMSProp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_1/subnetwork_t1_1_layer_dnn/dense_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_25"
  op: "IsVariableInitialized"
  input: "adanet/iteration_1/subnetwork_t1_1_layer_dnn/adanet/iteration_1/subnetwork_t1_1_layer_dnn/dense_1/kernel/RMSProp_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_1/subnetwork_t1_1_layer_dnn/dense_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_26"
  op: "IsVariableInitialized"
  input: "adanet/iteration_1/subnetwork_t1_1_layer_dnn/adanet/iteration_1/subnetwork_t1_1_layer_dnn/dense_1/bias/RMSProp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_1/subnetwork_t1_1_layer_dnn/dense_1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_27"
  op: "IsVariableInitialized"
  input: "adanet/iteration_1/subnetwork_t1_1_layer_dnn/adanet/iteration_1/subnetwork_t1_1_layer_dnn/dense_1/bias/RMSProp_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_1/subnetwork_t1_1_layer_dnn/dense_1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_28"
  op: "IsVariableInitialized"
  input: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_29"
  op: "IsVariableInitialized"
  input: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense/bias"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_30"
  op: "IsVariableInitialized"
  input: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense_1/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_31"
  op: "IsVariableInitialized"
  input: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense_1/bias"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense_1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_32"
  op: "IsVariableInitialized"
  input: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense_2/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense_2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_33"
  op: "IsVariableInitialized"
  input: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense_2/bias"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense_2/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_34"
  op: "IsVariableInitialized"
  input: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense/kernel/RMSProp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_35"
  op: "IsVariableInitialized"
  input: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense/kernel/RMSProp_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_36"
  op: "IsVariableInitialized"
  input: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense/bias/RMSProp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_37"
  op: "IsVariableInitialized"
  input: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense/bias/RMSProp_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_38"
  op: "IsVariableInitialized"
  input: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense_1/kernel/RMSProp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_39"
  op: "IsVariableInitialized"
  input: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense_1/kernel/RMSProp_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_40"
  op: "IsVariableInitialized"
  input: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense_1/bias/RMSProp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense_1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_41"
  op: "IsVariableInitialized"
  input: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense_1/bias/RMSProp_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense_1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_42"
  op: "IsVariableInitialized"
  input: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense_2/kernel/RMSProp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense_2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_43"
  op: "IsVariableInitialized"
  input: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense_2/kernel/RMSProp_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense_2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_44"
  op: "IsVariableInitialized"
  input: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense_2/bias/RMSProp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense_2/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_45"
  op: "IsVariableInitialized"
  input: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense_2/bias/RMSProp_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense_2/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_46"
  op: "IsVariableInitialized"
  input: "adanet/iteration_1/ensemble_t1_1_layer_dnn_grow_complexity_regularized/weighted_subnetwork_0/logits/mixture_weight"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_1/ensemble_t1_1_layer_dnn_grow_complexity_regularized/weighted_subnetwork_0/logits/mixture_weight"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_47"
  op: "IsVariableInitialized"
  input: "adanet/iteration_1/ensemble_t1_1_layer_dnn_grow_complexity_regularized/weighted_subnetwork_1/logits/mixture_weight"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_1/ensemble_t1_1_layer_dnn_grow_complexity_regularized/weighted_subnetwork_1/logits/mixture_weight"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_48"
  op: "IsVariableInitialized"
  input: "adanet/iteration_1/ensemble_t1_1_layer_dnn_grow_complexity_regularized/bias"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_1/ensemble_t1_1_layer_dnn_grow_complexity_regularized/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_49"
  op: "IsVariableInitialized"
  input: "adanet/iteration_1/candidate_t1_1_layer_dnn_grow_complexity_regularized/adanet_loss"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_1/candidate_t1_1_layer_dnn_grow_complexity_regularized/adanet_loss"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_50"
  op: "IsVariableInitialized"
  input: "adanet/iteration_1/candidate_t1_1_layer_dnn_grow_complexity_regularized/adanet/iteration_1/candidate_t1_1_layer_dnn_grow_complexity_regularized/adanet_loss/biased"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_1/candidate_t1_1_layer_dnn_grow_complexity_regularized/adanet_loss"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_51"
  op: "IsVariableInitialized"
  input: "adanet/iteration_1/candidate_t1_1_layer_dnn_grow_complexity_regularized/adanet/iteration_1/candidate_t1_1_layer_dnn_grow_complexity_regularized/adanet_loss/local_step"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_1/candidate_t1_1_layer_dnn_grow_complexity_regularized/adanet_loss"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_52"
  op: "IsVariableInitialized"
  input: "adanet/iteration_1/ensemble_t1_2_layer_dnn_grow_complexity_regularized/weighted_subnetwork_0/logits/mixture_weight"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_1/ensemble_t1_2_layer_dnn_grow_complexity_regularized/weighted_subnetwork_0/logits/mixture_weight"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_53"
  op: "IsVariableInitialized"
  input: "adanet/iteration_1/ensemble_t1_2_layer_dnn_grow_complexity_regularized/weighted_subnetwork_1/logits/mixture_weight"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_1/ensemble_t1_2_layer_dnn_grow_complexity_regularized/weighted_subnetwork_1/logits/mixture_weight"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_54"
  op: "IsVariableInitialized"
  input: "adanet/iteration_1/ensemble_t1_2_layer_dnn_grow_complexity_regularized/bias"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_1/ensemble_t1_2_layer_dnn_grow_complexity_regularized/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_55"
  op: "IsVariableInitialized"
  input: "adanet/iteration_1/candidate_t1_2_layer_dnn_grow_complexity_regularized/adanet_loss"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_1/candidate_t1_2_layer_dnn_grow_complexity_regularized/adanet_loss"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_56"
  op: "IsVariableInitialized"
  input: "adanet/iteration_1/candidate_t1_2_layer_dnn_grow_complexity_regularized/adanet/iteration_1/candidate_t1_2_layer_dnn_grow_complexity_regularized/adanet_loss/biased"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_1/candidate_t1_2_layer_dnn_grow_complexity_regularized/adanet_loss"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_57"
  op: "IsVariableInitialized"
  input: "adanet/iteration_1/candidate_t1_2_layer_dnn_grow_complexity_regularized/adanet/iteration_1/candidate_t1_2_layer_dnn_grow_complexity_regularized/adanet_loss/local_step"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_1/candidate_t1_2_layer_dnn_grow_complexity_regularized/adanet_loss"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_58"
  op: "IsVariableInitialized"
  input: "adanet/iteration_1/train_op/is_over/is_over_var_template/is_over_var"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_1/train_op/is_over/is_over_var_template/is_over_var"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_59"
  op: "IsVariableInitialized"
  input: "current_iteration"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@current_iteration"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "report_uninitialized_variables_1/stack"
  op: "Pack"
  input: "report_uninitialized_variables_1/IsVariableInitialized"
  input: "report_uninitialized_variables_1/IsVariableInitialized_1"
  input: "report_uninitialized_variables_1/IsVariableInitialized_2"
  input: "report_uninitialized_variables_1/IsVariableInitialized_3"
  input: "report_uninitialized_variables_1/IsVariableInitialized_4"
  input: "report_uninitialized_variables_1/IsVariableInitialized_5"
  input: "report_uninitialized_variables_1/IsVariableInitialized_6"
  input: "report_uninitialized_variables_1/IsVariableInitialized_7"
  input: "report_uninitialized_variables_1/IsVariableInitialized_8"
  input: "report_uninitialized_variables_1/IsVariableInitialized_9"
  input: "report_uninitialized_variables_1/IsVariableInitialized_10"
  input: "report_uninitialized_variables_1/IsVariableInitialized_11"
  input: "report_uninitialized_variables_1/IsVariableInitialized_12"
  input: "report_uninitialized_variables_1/IsVariableInitialized_13"
  input: "report_uninitialized_variables_1/IsVariableInitialized_14"
  input: "report_uninitialized_variables_1/IsVariableInitialized_15"
  input: "report_uninitialized_variables_1/IsVariableInitialized_16"
  input: "report_uninitialized_variables_1/IsVariableInitialized_17"
  input: "report_uninitialized_variables_1/IsVariableInitialized_18"
  input: "report_uninitialized_variables_1/IsVariableInitialized_19"
  input: "report_uninitialized_variables_1/IsVariableInitialized_20"
  input: "report_uninitialized_variables_1/IsVariableInitialized_21"
  input: "report_uninitialized_variables_1/IsVariableInitialized_22"
  input: "report_uninitialized_variables_1/IsVariableInitialized_23"
  input: "report_uninitialized_variables_1/IsVariableInitialized_24"
  input: "report_uninitialized_variables_1/IsVariableInitialized_25"
  input: "report_uninitialized_variables_1/IsVariableInitialized_26"
  input: "report_uninitialized_variables_1/IsVariableInitialized_27"
  input: "report_uninitialized_variables_1/IsVariableInitialized_28"
  input: "report_uninitialized_variables_1/IsVariableInitialized_29"
  input: "report_uninitialized_variables_1/IsVariableInitialized_30"
  input: "report_uninitialized_variables_1/IsVariableInitialized_31"
  input: "report_uninitialized_variables_1/IsVariableInitialized_32"
  input: "report_uninitialized_variables_1/IsVariableInitialized_33"
  input: "report_uninitialized_variables_1/IsVariableInitialized_34"
  input: "report_uninitialized_variables_1/IsVariableInitialized_35"
  input: "report_uninitialized_variables_1/IsVariableInitialized_36"
  input: "report_uninitialized_variables_1/IsVariableInitialized_37"
  input: "report_uninitialized_variables_1/IsVariableInitialized_38"
  input: "report_uninitialized_variables_1/IsVariableInitialized_39"
  input: "report_uninitialized_variables_1/IsVariableInitialized_40"
  input: "report_uninitialized_variables_1/IsVariableInitialized_41"
  input: "report_uninitialized_variables_1/IsVariableInitialized_42"
  input: "report_uninitialized_variables_1/IsVariableInitialized_43"
  input: "report_uninitialized_variables_1/IsVariableInitialized_44"
  input: "report_uninitialized_variables_1/IsVariableInitialized_45"
  input: "report_uninitialized_variables_1/IsVariableInitialized_46"
  input: "report_uninitialized_variables_1/IsVariableInitialized_47"
  input: "report_uninitialized_variables_1/IsVariableInitialized_48"
  input: "report_uninitialized_variables_1/IsVariableInitialized_49"
  input: "report_uninitialized_variables_1/IsVariableInitialized_50"
  input: "report_uninitialized_variables_1/IsVariableInitialized_51"
  input: "report_uninitialized_variables_1/IsVariableInitialized_52"
  input: "report_uninitialized_variables_1/IsVariableInitialized_53"
  input: "report_uninitialized_variables_1/IsVariableInitialized_54"
  input: "report_uninitialized_variables_1/IsVariableInitialized_55"
  input: "report_uninitialized_variables_1/IsVariableInitialized_56"
  input: "report_uninitialized_variables_1/IsVariableInitialized_57"
  input: "report_uninitialized_variables_1/IsVariableInitialized_58"
  input: "report_uninitialized_variables_1/IsVariableInitialized_59"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 60
    }
  }
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 60
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "report_uninitialized_variables_1/LogicalNot"
  op: "LogicalNot"
  input: "report_uninitialized_variables_1/stack"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 60
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/Const"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 60
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 60
          }
        }
        string_val: "global_step"
        string_val: "adanet/iteration_0/step"
        string_val: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/dense/kernel"
        string_val: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/dense/bias"
        string_val: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/dense_1/kernel"
        string_val: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/dense_1/bias"
        string_val: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/weighted_subnetwork_0/logits/mixture_weight"
        string_val: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/bias"
        string_val: "adanet/iteration_0/candidate_t0_1_layer_dnn_grow_complexity_regularized/adanet_loss"
        string_val: "adanet/iteration_0/candidate_t0_1_layer_dnn_grow_complexity_regularized/adanet/iteration_0/candidate_t0_1_layer_dnn_grow_complexity_regularized/adanet_loss/biased"
        string_val: "adanet/iteration_0/candidate_t0_1_layer_dnn_grow_complexity_regularized/adanet/iteration_0/candidate_t0_1_layer_dnn_grow_complexity_regularized/adanet_loss/local_step"
        string_val: "adanet/iteration_0/train_op/is_over/is_over_var_template/is_over_var"
        string_val: "adanet/iteration_1/step"
        string_val: "adanet/iteration_1/candidate_t0_1_layer_dnn_grow_complexity_regularized/adanet_loss"
        string_val: "adanet/iteration_1/candidate_t0_1_layer_dnn_grow_complexity_regularized/adanet/iteration_1/candidate_t0_1_layer_dnn_grow_complexity_regularized/adanet_loss/biased"
        string_val: "adanet/iteration_1/candidate_t0_1_layer_dnn_grow_complexity_regularized/adanet/iteration_1/candidate_t0_1_layer_dnn_grow_complexity_regularized/adanet_loss/local_step"
        string_val: "adanet/iteration_1/subnetwork_t1_1_layer_dnn/dense/kernel"
        string_val: "adanet/iteration_1/subnetwork_t1_1_layer_dnn/dense/bias"
        string_val: "adanet/iteration_1/subnetwork_t1_1_layer_dnn/dense_1/kernel"
        string_val: "adanet/iteration_1/subnetwork_t1_1_layer_dnn/dense_1/bias"
        string_val: "adanet/iteration_1/subnetwork_t1_1_layer_dnn/adanet/iteration_1/subnetwork_t1_1_layer_dnn/dense/kernel/RMSProp"
        string_val: "adanet/iteration_1/subnetwork_t1_1_layer_dnn/adanet/iteration_1/subnetwork_t1_1_layer_dnn/dense/kernel/RMSProp_1"
        string_val: "adanet/iteration_1/subnetwork_t1_1_layer_dnn/adanet/iteration_1/subnetwork_t1_1_layer_dnn/dense/bias/RMSProp"
        string_val: "adanet/iteration_1/subnetwork_t1_1_layer_dnn/adanet/iteration_1/subnetwork_t1_1_layer_dnn/dense/bias/RMSProp_1"
        string_val: "adanet/iteration_1/subnetwork_t1_1_layer_dnn/adanet/iteration_1/subnetwork_t1_1_layer_dnn/dense_1/kernel/RMSProp"
        string_val: "adanet/iteration_1/subnetwork_t1_1_layer_dnn/adanet/iteration_1/subnetwork_t1_1_layer_dnn/dense_1/kernel/RMSProp_1"
        string_val: "adanet/iteration_1/subnetwork_t1_1_layer_dnn/adanet/iteration_1/subnetwork_t1_1_layer_dnn/dense_1/bias/RMSProp"
        string_val: "adanet/iteration_1/subnetwork_t1_1_layer_dnn/adanet/iteration_1/subnetwork_t1_1_layer_dnn/dense_1/bias/RMSProp_1"
        string_val: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense/kernel"
        string_val: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense/bias"
        string_val: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense_1/kernel"
        string_val: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense_1/bias"
        string_val: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense_2/kernel"
        string_val: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense_2/bias"
        string_val: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense/kernel/RMSProp"
        string_val: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense/kernel/RMSProp_1"
        string_val: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense/bias/RMSProp"
        string_val: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense/bias/RMSProp_1"
        string_val: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense_1/kernel/RMSProp"
        string_val: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense_1/kernel/RMSProp_1"
        string_val: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense_1/bias/RMSProp"
        string_val: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense_1/bias/RMSProp_1"
        string_val: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense_2/kernel/RMSProp"
        string_val: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense_2/kernel/RMSProp_1"
        string_val: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense_2/bias/RMSProp"
        string_val: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense_2/bias/RMSProp_1"
        string_val: "adanet/iteration_1/ensemble_t1_1_layer_dnn_grow_complexity_regularized/weighted_subnetwork_0/logits/mixture_weight"
        string_val: "adanet/iteration_1/ensemble_t1_1_layer_dnn_grow_complexity_regularized/weighted_subnetwork_1/logits/mixture_weight"
        string_val: "adanet/iteration_1/ensemble_t1_1_layer_dnn_grow_complexity_regularized/bias"
        string_val: "adanet/iteration_1/candidate_t1_1_layer_dnn_grow_complexity_regularized/adanet_loss"
        string_val: "adanet/iteration_1/candidate_t1_1_layer_dnn_grow_complexity_regularized/adanet/iteration_1/candidate_t1_1_layer_dnn_grow_complexity_regularized/adanet_loss/biased"
        string_val: "adanet/iteration_1/candidate_t1_1_layer_dnn_grow_complexity_regularized/adanet/iteration_1/candidate_t1_1_layer_dnn_grow_complexity_regularized/adanet_loss/local_step"
        string_val: "adanet/iteration_1/ensemble_t1_2_layer_dnn_grow_complexity_regularized/weighted_subnetwork_0/logits/mixture_weight"
        string_val: "adanet/iteration_1/ensemble_t1_2_layer_dnn_grow_complexity_regularized/weighted_subnetwork_1/logits/mixture_weight"
        string_val: "adanet/iteration_1/ensemble_t1_2_layer_dnn_grow_complexity_regularized/bias"
        string_val: "adanet/iteration_1/candidate_t1_2_layer_dnn_grow_complexity_regularized/adanet_loss"
        string_val: "adanet/iteration_1/candidate_t1_2_layer_dnn_grow_complexity_regularized/adanet/iteration_1/candidate_t1_2_layer_dnn_grow_complexity_regularized/adanet_loss/biased"
        string_val: "adanet/iteration_1/candidate_t1_2_layer_dnn_grow_complexity_regularized/adanet/iteration_1/candidate_t1_2_layer_dnn_grow_complexity_regularized/adanet_loss/local_step"
        string_val: "adanet/iteration_1/train_op/is_over/is_over_var_template/is_over_var"
        string_val: "current_iteration"
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/Shape"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 60
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/strided_slice/stack"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/strided_slice/stack_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/strided_slice/stack_2"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/strided_slice"
  op: "StridedSlice"
  input: "report_uninitialized_variables_1/boolean_mask/Shape"
  input: "report_uninitialized_variables_1/boolean_mask/strided_slice/stack"
  input: "report_uninitialized_variables_1/boolean_mask/strided_slice/stack_1"
  input: "report_uninitialized_variables_1/boolean_mask/strided_slice/stack_2"
  device: "/device:CPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/Prod/reduction_indices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/Prod"
  op: "Prod"
  input: "report_uninitialized_variables_1/boolean_mask/strided_slice"
  input: "report_uninitialized_variables_1/boolean_mask/Prod/reduction_indices"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/Shape_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 60
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/strided_slice_1/stack"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/strided_slice_1/stack_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/strided_slice_1/stack_2"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/strided_slice_1"
  op: "StridedSlice"
  input: "report_uninitialized_variables_1/boolean_mask/Shape_1"
  input: "report_uninitialized_variables_1/boolean_mask/strided_slice_1/stack"
  input: "report_uninitialized_variables_1/boolean_mask/strided_slice_1/stack_1"
  input: "report_uninitialized_variables_1/boolean_mask/strided_slice_1/stack_2"
  device: "/device:CPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/Shape_2"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 60
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/strided_slice_2/stack"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/strided_slice_2/stack_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/strided_slice_2/stack_2"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/strided_slice_2"
  op: "StridedSlice"
  input: "report_uninitialized_variables_1/boolean_mask/Shape_2"
  input: "report_uninitialized_variables_1/boolean_mask/strided_slice_2/stack"
  input: "report_uninitialized_variables_1/boolean_mask/strided_slice_2/stack_1"
  input: "report_uninitialized_variables_1/boolean_mask/strided_slice_2/stack_2"
  device: "/device:CPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/concat/values_1"
  op: "Pack"
  input: "report_uninitialized_variables_1/boolean_mask/Prod"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/concat/axis"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/concat"
  op: "ConcatV2"
  input: "report_uninitialized_variables_1/boolean_mask/strided_slice_1"
  input: "report_uninitialized_variables_1/boolean_mask/concat/values_1"
  input: "report_uninitialized_variables_1/boolean_mask/strided_slice_2"
  input: "report_uninitialized_variables_1/boolean_mask/concat/axis"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/Reshape"
  op: "Reshape"
  input: "report_uninitialized_variables_1/Const"
  input: "report_uninitialized_variables_1/boolean_mask/concat"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 60
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/Reshape_1/shape"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/Reshape_1"
  op: "Reshape"
  input: "report_uninitialized_variables_1/LogicalNot"
  input: "report_uninitialized_variables_1/boolean_mask/Reshape_1/shape"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 60
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/Where"
  op: "Where"
  input: "report_uninitialized_variables_1/boolean_mask/Reshape_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/Squeeze"
  op: "Squeeze"
  input: "report_uninitialized_variables_1/boolean_mask/Where"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/GatherV2/axis"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/GatherV2"
  op: "GatherV2"
  input: "report_uninitialized_variables_1/boolean_mask/Reshape"
  input: "report_uninitialized_variables_1/boolean_mask/Squeeze"
  input: "report_uninitialized_variables_1/boolean_mask/GatherV2/axis"
  device: "/device:CPU:0"
  attr {
    key: "Taxis"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tindices"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_resources_1/Const"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "concat_1/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "concat_1"
  op: "ConcatV2"
  input: "report_uninitialized_variables_1/boolean_mask/GatherV2"
  input: "report_uninitialized_resources_1/Const"
  input: "concat_1/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "init_2"
  op: "NoOp"
  input: "^adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/mean/count/Assign"
  input: "^adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/mean/total/Assign"
  input: "^adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/metrics/accuracy/count/Assign"
  input: "^adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/metrics/accuracy/total/Assign"
  input: "^adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/metrics/average_loss/count/Assign"
  input: "^adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/metrics/average_loss/total/Assign"
  input: "^adanet/iteration_0/mean/count/Assign"
  input: "^adanet/iteration_0/mean/total/Assign"
  input: "^adanet/iteration_0/subnetwork_t0_1_layer_dnn/mean/count/Assign"
  input: "^adanet/iteration_0/subnetwork_t0_1_layer_dnn/mean/total/Assign"
  input: "^adanet/iteration_0/subnetwork_t0_1_layer_dnn/metrics/accuracy/count/Assign"
  input: "^adanet/iteration_0/subnetwork_t0_1_layer_dnn/metrics/accuracy/total/Assign"
  input: "^adanet/iteration_0/subnetwork_t0_1_layer_dnn/metrics/average_loss/count/Assign"
  input: "^adanet/iteration_0/subnetwork_t0_1_layer_dnn/metrics/average_loss/total/Assign"
  input: "^adanet/iteration_1/mean/count/Assign"
  input: "^adanet/iteration_1/mean/total/Assign"
  input: "^adanet/iteration_1/mean_1/count/Assign"
  input: "^adanet/iteration_1/mean_1/total/Assign"
}
node {
  name: "init_all_tables"
  op: "NoOp"
}
node {
  name: "init_3"
  op: "NoOp"
}
node {
  name: "group_deps_1"
  op: "NoOp"
  input: "^init_2"
  input: "^init_3"
  input: "^init_all_tables"
}
node {
  name: "save/filename/input"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "model"
      }
    }
  }
}
node {
  name: "save/filename"
  op: "PlaceholderWithDefault"
  input: "save/filename/input"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
}
node {
  name: "save/Const"
  op: "PlaceholderWithDefault"
  input: "save/filename"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
}
node {
  name: "save/StringJoin/inputs_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "_temp_e78e248a462047b09a04ffd84261e78f/part"
      }
    }
  }
}
node {
  name: "save/StringJoin"
  op: "StringJoin"
  input: "save/Const"
  input: "save/StringJoin/inputs_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "separator"
    value {
      s: ""
    }
  }
}
node {
  name: "save/num_shards"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "save/ShardedFilename/shard"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "save/ShardedFilename"
  op: "ShardedFilename"
  input: "save/StringJoin"
  input: "save/ShardedFilename/shard"
  input: "save/num_shards"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "save/SaveV2/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 60
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 60
          }
        }
        string_val: "adanet/iteration_0/candidate_t0_1_layer_dnn_grow_complexity_regularized/adanet/iteration_0/candidate_t0_1_layer_dnn_grow_complexity_regularized/adanet_loss/biased"
        string_val: "adanet/iteration_0/candidate_t0_1_layer_dnn_grow_complexity_regularized/adanet/iteration_0/candidate_t0_1_layer_dnn_grow_complexity_regularized/adanet_loss/local_step"
        string_val: "adanet/iteration_0/candidate_t0_1_layer_dnn_grow_complexity_regularized/adanet_loss"
        string_val: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/bias"
        string_val: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/weighted_subnetwork_0/logits/mixture_weight"
        string_val: "adanet/iteration_0/step"
        string_val: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/dense/bias"
        string_val: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/dense/kernel"
        string_val: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/dense_1/bias"
        string_val: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/dense_1/kernel"
        string_val: "adanet/iteration_0/train_op/is_over/is_over_var_template/is_over_var"
        string_val: "adanet/iteration_1/candidate_t0_1_layer_dnn_grow_complexity_regularized/adanet/iteration_1/candidate_t0_1_layer_dnn_grow_complexity_regularized/adanet_loss/biased"
        string_val: "adanet/iteration_1/candidate_t0_1_layer_dnn_grow_complexity_regularized/adanet/iteration_1/candidate_t0_1_layer_dnn_grow_complexity_regularized/adanet_loss/local_step"
        string_val: "adanet/iteration_1/candidate_t0_1_layer_dnn_grow_complexity_regularized/adanet_loss"
        string_val: "adanet/iteration_1/candidate_t1_1_layer_dnn_grow_complexity_regularized/adanet/iteration_1/candidate_t1_1_layer_dnn_grow_complexity_regularized/adanet_loss/biased"
        string_val: "adanet/iteration_1/candidate_t1_1_layer_dnn_grow_complexity_regularized/adanet/iteration_1/candidate_t1_1_layer_dnn_grow_complexity_regularized/adanet_loss/local_step"
        string_val: "adanet/iteration_1/candidate_t1_1_layer_dnn_grow_complexity_regularized/adanet_loss"
        string_val: "adanet/iteration_1/candidate_t1_2_layer_dnn_grow_complexity_regularized/adanet/iteration_1/candidate_t1_2_layer_dnn_grow_complexity_regularized/adanet_loss/biased"
        string_val: "adanet/iteration_1/candidate_t1_2_layer_dnn_grow_complexity_regularized/adanet/iteration_1/candidate_t1_2_layer_dnn_grow_complexity_regularized/adanet_loss/local_step"
        string_val: "adanet/iteration_1/candidate_t1_2_layer_dnn_grow_complexity_regularized/adanet_loss"
        string_val: "adanet/iteration_1/ensemble_t1_1_layer_dnn_grow_complexity_regularized/bias"
        string_val: "adanet/iteration_1/ensemble_t1_1_layer_dnn_grow_complexity_regularized/weighted_subnetwork_0/logits/mixture_weight"
        string_val: "adanet/iteration_1/ensemble_t1_1_layer_dnn_grow_complexity_regularized/weighted_subnetwork_1/logits/mixture_weight"
        string_val: "adanet/iteration_1/ensemble_t1_2_layer_dnn_grow_complexity_regularized/bias"
        string_val: "adanet/iteration_1/ensemble_t1_2_layer_dnn_grow_complexity_regularized/weighted_subnetwork_0/logits/mixture_weight"
        string_val: "adanet/iteration_1/ensemble_t1_2_layer_dnn_grow_complexity_regularized/weighted_subnetwork_1/logits/mixture_weight"
        string_val: "adanet/iteration_1/step"
        string_val: "adanet/iteration_1/subnetwork_t1_1_layer_dnn/adanet/iteration_1/subnetwork_t1_1_layer_dnn/dense/bias/RMSProp"
        string_val: "adanet/iteration_1/subnetwork_t1_1_layer_dnn/adanet/iteration_1/subnetwork_t1_1_layer_dnn/dense/bias/RMSProp_1"
        string_val: "adanet/iteration_1/subnetwork_t1_1_layer_dnn/adanet/iteration_1/subnetwork_t1_1_layer_dnn/dense/kernel/RMSProp"
        string_val: "adanet/iteration_1/subnetwork_t1_1_layer_dnn/adanet/iteration_1/subnetwork_t1_1_layer_dnn/dense/kernel/RMSProp_1"
        string_val: "adanet/iteration_1/subnetwork_t1_1_layer_dnn/adanet/iteration_1/subnetwork_t1_1_layer_dnn/dense_1/bias/RMSProp"
        string_val: "adanet/iteration_1/subnetwork_t1_1_layer_dnn/adanet/iteration_1/subnetwork_t1_1_layer_dnn/dense_1/bias/RMSProp_1"
        string_val: "adanet/iteration_1/subnetwork_t1_1_layer_dnn/adanet/iteration_1/subnetwork_t1_1_layer_dnn/dense_1/kernel/RMSProp"
        string_val: "adanet/iteration_1/subnetwork_t1_1_layer_dnn/adanet/iteration_1/subnetwork_t1_1_layer_dnn/dense_1/kernel/RMSProp_1"
        string_val: "adanet/iteration_1/subnetwork_t1_1_layer_dnn/dense/bias"
        string_val: "adanet/iteration_1/subnetwork_t1_1_layer_dnn/dense/kernel"
        string_val: "adanet/iteration_1/subnetwork_t1_1_layer_dnn/dense_1/bias"
        string_val: "adanet/iteration_1/subnetwork_t1_1_layer_dnn/dense_1/kernel"
        string_val: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense/bias/RMSProp"
        string_val: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense/bias/RMSProp_1"
        string_val: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense/kernel/RMSProp"
        string_val: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense/kernel/RMSProp_1"
        string_val: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense_1/bias/RMSProp"
        string_val: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense_1/bias/RMSProp_1"
        string_val: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense_1/kernel/RMSProp"
        string_val: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense_1/kernel/RMSProp_1"
        string_val: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense_2/bias/RMSProp"
        string_val: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense_2/bias/RMSProp_1"
        string_val: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense_2/kernel/RMSProp"
        string_val: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense_2/kernel/RMSProp_1"
        string_val: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense/bias"
        string_val: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense/kernel"
        string_val: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense_1/bias"
        string_val: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense_1/kernel"
        string_val: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense_2/bias"
        string_val: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense_2/kernel"
        string_val: "adanet/iteration_1/train_op/is_over/is_over_var_template/is_over_var"
        string_val: "current_iteration"
        string_val: "global_step"
      }
    }
  }
}
node {
  name: "save/SaveV2/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 60
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 60
          }
        }
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
      }
    }
  }
}
node {
  name: "save/SaveV2"
  op: "SaveV2"
  input: "save/ShardedFilename"
  input: "save/SaveV2/tensor_names"
  input: "save/SaveV2/shape_and_slices"
  input: "adanet/iteration_0/candidate_t0_1_layer_dnn_grow_complexity_regularized/adanet/iteration_0/candidate_t0_1_layer_dnn_grow_complexity_regularized/adanet_loss/biased"
  input: "adanet/iteration_0/candidate_t0_1_layer_dnn_grow_complexity_regularized/adanet/iteration_0/candidate_t0_1_layer_dnn_grow_complexity_regularized/adanet_loss/local_step"
  input: "adanet/iteration_0/candidate_t0_1_layer_dnn_grow_complexity_regularized/adanet_loss"
  input: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/bias"
  input: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/weighted_subnetwork_0/logits/mixture_weight"
  input: "adanet/iteration_0/step"
  input: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/dense/bias"
  input: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/dense/kernel"
  input: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/dense_1/bias"
  input: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/dense_1/kernel"
  input: "adanet/iteration_0/train_op/is_over/is_over_var_template/is_over_var"
  input: "adanet/iteration_1/candidate_t0_1_layer_dnn_grow_complexity_regularized/adanet/iteration_1/candidate_t0_1_layer_dnn_grow_complexity_regularized/adanet_loss/biased"
  input: "adanet/iteration_1/candidate_t0_1_layer_dnn_grow_complexity_regularized/adanet/iteration_1/candidate_t0_1_layer_dnn_grow_complexity_regularized/adanet_loss/local_step"
  input: "adanet/iteration_1/candidate_t0_1_layer_dnn_grow_complexity_regularized/adanet_loss"
  input: "adanet/iteration_1/candidate_t1_1_layer_dnn_grow_complexity_regularized/adanet/iteration_1/candidate_t1_1_layer_dnn_grow_complexity_regularized/adanet_loss/biased"
  input: "adanet/iteration_1/candidate_t1_1_layer_dnn_grow_complexity_regularized/adanet/iteration_1/candidate_t1_1_layer_dnn_grow_complexity_regularized/adanet_loss/local_step"
  input: "adanet/iteration_1/candidate_t1_1_layer_dnn_grow_complexity_regularized/adanet_loss"
  input: "adanet/iteration_1/candidate_t1_2_layer_dnn_grow_complexity_regularized/adanet/iteration_1/candidate_t1_2_layer_dnn_grow_complexity_regularized/adanet_loss/biased"
  input: "adanet/iteration_1/candidate_t1_2_layer_dnn_grow_complexity_regularized/adanet/iteration_1/candidate_t1_2_layer_dnn_grow_complexity_regularized/adanet_loss/local_step"
  input: "adanet/iteration_1/candidate_t1_2_layer_dnn_grow_complexity_regularized/adanet_loss"
  input: "adanet/iteration_1/ensemble_t1_1_layer_dnn_grow_complexity_regularized/bias"
  input: "adanet/iteration_1/ensemble_t1_1_layer_dnn_grow_complexity_regularized/weighted_subnetwork_0/logits/mixture_weight"
  input: "adanet/iteration_1/ensemble_t1_1_layer_dnn_grow_complexity_regularized/weighted_subnetwork_1/logits/mixture_weight"
  input: "adanet/iteration_1/ensemble_t1_2_layer_dnn_grow_complexity_regularized/bias"
  input: "adanet/iteration_1/ensemble_t1_2_layer_dnn_grow_complexity_regularized/weighted_subnetwork_0/logits/mixture_weight"
  input: "adanet/iteration_1/ensemble_t1_2_layer_dnn_grow_complexity_regularized/weighted_subnetwork_1/logits/mixture_weight"
  input: "adanet/iteration_1/step"
  input: "adanet/iteration_1/subnetwork_t1_1_layer_dnn/adanet/iteration_1/subnetwork_t1_1_layer_dnn/dense/bias/RMSProp"
  input: "adanet/iteration_1/subnetwork_t1_1_layer_dnn/adanet/iteration_1/subnetwork_t1_1_layer_dnn/dense/bias/RMSProp_1"
  input: "adanet/iteration_1/subnetwork_t1_1_layer_dnn/adanet/iteration_1/subnetwork_t1_1_layer_dnn/dense/kernel/RMSProp"
  input: "adanet/iteration_1/subnetwork_t1_1_layer_dnn/adanet/iteration_1/subnetwork_t1_1_layer_dnn/dense/kernel/RMSProp_1"
  input: "adanet/iteration_1/subnetwork_t1_1_layer_dnn/adanet/iteration_1/subnetwork_t1_1_layer_dnn/dense_1/bias/RMSProp"
  input: "adanet/iteration_1/subnetwork_t1_1_layer_dnn/adanet/iteration_1/subnetwork_t1_1_layer_dnn/dense_1/bias/RMSProp_1"
  input: "adanet/iteration_1/subnetwork_t1_1_layer_dnn/adanet/iteration_1/subnetwork_t1_1_layer_dnn/dense_1/kernel/RMSProp"
  input: "adanet/iteration_1/subnetwork_t1_1_layer_dnn/adanet/iteration_1/subnetwork_t1_1_layer_dnn/dense_1/kernel/RMSProp_1"
  input: "adanet/iteration_1/subnetwork_t1_1_layer_dnn/dense/bias"
  input: "adanet/iteration_1/subnetwork_t1_1_layer_dnn/dense/kernel"
  input: "adanet/iteration_1/subnetwork_t1_1_layer_dnn/dense_1/bias"
  input: "adanet/iteration_1/subnetwork_t1_1_layer_dnn/dense_1/kernel"
  input: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense/bias/RMSProp"
  input: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense/bias/RMSProp_1"
  input: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense/kernel/RMSProp"
  input: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense/kernel/RMSProp_1"
  input: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense_1/bias/RMSProp"
  input: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense_1/bias/RMSProp_1"
  input: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense_1/kernel/RMSProp"
  input: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense_1/kernel/RMSProp_1"
  input: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense_2/bias/RMSProp"
  input: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense_2/bias/RMSProp_1"
  input: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense_2/kernel/RMSProp"
  input: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense_2/kernel/RMSProp_1"
  input: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense/bias"
  input: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense/kernel"
  input: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense_1/bias"
  input: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense_1/kernel"
  input: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense_2/bias"
  input: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense_2/kernel"
  input: "adanet/iteration_1/train_op/is_over/is_over_var_template/is_over_var"
  input: "current_iteration"
  input: "global_step"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_INT64
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_BOOL
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_INT64
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_BOOL
        type: DT_INT64
        type: DT_INT64
      }
    }
  }
}
node {
  name: "save/control_dependency"
  op: "Identity"
  input: "save/ShardedFilename"
  input: "^save/SaveV2"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@save/ShardedFilename"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "save/MergeV2Checkpoints/checkpoint_prefixes"
  op: "Pack"
  input: "save/ShardedFilename"
  input: "^save/control_dependency"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "save/MergeV2Checkpoints"
  op: "MergeV2Checkpoints"
  input: "save/MergeV2Checkpoints/checkpoint_prefixes"
  input: "save/Const"
  device: "/device:CPU:0"
  attr {
    key: "delete_old_dirs"
    value {
      b: true
    }
  }
}
node {
  name: "save/Identity"
  op: "Identity"
  input: "save/Const"
  input: "^save/MergeV2Checkpoints"
  input: "^save/control_dependency"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "save/RestoreV2/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 60
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 60
          }
        }
        string_val: "adanet/iteration_0/candidate_t0_1_layer_dnn_grow_complexity_regularized/adanet/iteration_0/candidate_t0_1_layer_dnn_grow_complexity_regularized/adanet_loss/biased"
        string_val: "adanet/iteration_0/candidate_t0_1_layer_dnn_grow_complexity_regularized/adanet/iteration_0/candidate_t0_1_layer_dnn_grow_complexity_regularized/adanet_loss/local_step"
        string_val: "adanet/iteration_0/candidate_t0_1_layer_dnn_grow_complexity_regularized/adanet_loss"
        string_val: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/bias"
        string_val: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/weighted_subnetwork_0/logits/mixture_weight"
        string_val: "adanet/iteration_0/step"
        string_val: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/dense/bias"
        string_val: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/dense/kernel"
        string_val: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/dense_1/bias"
        string_val: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/dense_1/kernel"
        string_val: "adanet/iteration_0/train_op/is_over/is_over_var_template/is_over_var"
        string_val: "adanet/iteration_1/candidate_t0_1_layer_dnn_grow_complexity_regularized/adanet/iteration_1/candidate_t0_1_layer_dnn_grow_complexity_regularized/adanet_loss/biased"
        string_val: "adanet/iteration_1/candidate_t0_1_layer_dnn_grow_complexity_regularized/adanet/iteration_1/candidate_t0_1_layer_dnn_grow_complexity_regularized/adanet_loss/local_step"
        string_val: "adanet/iteration_1/candidate_t0_1_layer_dnn_grow_complexity_regularized/adanet_loss"
        string_val: "adanet/iteration_1/candidate_t1_1_layer_dnn_grow_complexity_regularized/adanet/iteration_1/candidate_t1_1_layer_dnn_grow_complexity_regularized/adanet_loss/biased"
        string_val: "adanet/iteration_1/candidate_t1_1_layer_dnn_grow_complexity_regularized/adanet/iteration_1/candidate_t1_1_layer_dnn_grow_complexity_regularized/adanet_loss/local_step"
        string_val: "adanet/iteration_1/candidate_t1_1_layer_dnn_grow_complexity_regularized/adanet_loss"
        string_val: "adanet/iteration_1/candidate_t1_2_layer_dnn_grow_complexity_regularized/adanet/iteration_1/candidate_t1_2_layer_dnn_grow_complexity_regularized/adanet_loss/biased"
        string_val: "adanet/iteration_1/candidate_t1_2_layer_dnn_grow_complexity_regularized/adanet/iteration_1/candidate_t1_2_layer_dnn_grow_complexity_regularized/adanet_loss/local_step"
        string_val: "adanet/iteration_1/candidate_t1_2_layer_dnn_grow_complexity_regularized/adanet_loss"
        string_val: "adanet/iteration_1/ensemble_t1_1_layer_dnn_grow_complexity_regularized/bias"
        string_val: "adanet/iteration_1/ensemble_t1_1_layer_dnn_grow_complexity_regularized/weighted_subnetwork_0/logits/mixture_weight"
        string_val: "adanet/iteration_1/ensemble_t1_1_layer_dnn_grow_complexity_regularized/weighted_subnetwork_1/logits/mixture_weight"
        string_val: "adanet/iteration_1/ensemble_t1_2_layer_dnn_grow_complexity_regularized/bias"
        string_val: "adanet/iteration_1/ensemble_t1_2_layer_dnn_grow_complexity_regularized/weighted_subnetwork_0/logits/mixture_weight"
        string_val: "adanet/iteration_1/ensemble_t1_2_layer_dnn_grow_complexity_regularized/weighted_subnetwork_1/logits/mixture_weight"
        string_val: "adanet/iteration_1/step"
        string_val: "adanet/iteration_1/subnetwork_t1_1_layer_dnn/adanet/iteration_1/subnetwork_t1_1_layer_dnn/dense/bias/RMSProp"
        string_val: "adanet/iteration_1/subnetwork_t1_1_layer_dnn/adanet/iteration_1/subnetwork_t1_1_layer_dnn/dense/bias/RMSProp_1"
        string_val: "adanet/iteration_1/subnetwork_t1_1_layer_dnn/adanet/iteration_1/subnetwork_t1_1_layer_dnn/dense/kernel/RMSProp"
        string_val: "adanet/iteration_1/subnetwork_t1_1_layer_dnn/adanet/iteration_1/subnetwork_t1_1_layer_dnn/dense/kernel/RMSProp_1"
        string_val: "adanet/iteration_1/subnetwork_t1_1_layer_dnn/adanet/iteration_1/subnetwork_t1_1_layer_dnn/dense_1/bias/RMSProp"
        string_val: "adanet/iteration_1/subnetwork_t1_1_layer_dnn/adanet/iteration_1/subnetwork_t1_1_layer_dnn/dense_1/bias/RMSProp_1"
        string_val: "adanet/iteration_1/subnetwork_t1_1_layer_dnn/adanet/iteration_1/subnetwork_t1_1_layer_dnn/dense_1/kernel/RMSProp"
        string_val: "adanet/iteration_1/subnetwork_t1_1_layer_dnn/adanet/iteration_1/subnetwork_t1_1_layer_dnn/dense_1/kernel/RMSProp_1"
        string_val: "adanet/iteration_1/subnetwork_t1_1_layer_dnn/dense/bias"
        string_val: "adanet/iteration_1/subnetwork_t1_1_layer_dnn/dense/kernel"
        string_val: "adanet/iteration_1/subnetwork_t1_1_layer_dnn/dense_1/bias"
        string_val: "adanet/iteration_1/subnetwork_t1_1_layer_dnn/dense_1/kernel"
        string_val: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense/bias/RMSProp"
        string_val: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense/bias/RMSProp_1"
        string_val: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense/kernel/RMSProp"
        string_val: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense/kernel/RMSProp_1"
        string_val: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense_1/bias/RMSProp"
        string_val: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense_1/bias/RMSProp_1"
        string_val: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense_1/kernel/RMSProp"
        string_val: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense_1/kernel/RMSProp_1"
        string_val: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense_2/bias/RMSProp"
        string_val: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense_2/bias/RMSProp_1"
        string_val: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense_2/kernel/RMSProp"
        string_val: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense_2/kernel/RMSProp_1"
        string_val: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense/bias"
        string_val: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense/kernel"
        string_val: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense_1/bias"
        string_val: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense_1/kernel"
        string_val: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense_2/bias"
        string_val: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense_2/kernel"
        string_val: "adanet/iteration_1/train_op/is_over/is_over_var_template/is_over_var"
        string_val: "current_iteration"
        string_val: "global_step"
      }
    }
  }
}
node {
  name: "save/RestoreV2/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 60
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 60
          }
        }
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2/tensor_names"
  input: "save/RestoreV2/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_INT64
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_BOOL
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_INT64
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_BOOL
        type: DT_INT64
        type: DT_INT64
      }
    }
  }
}
node {
  name: "save/Assign"
  op: "Assign"
  input: "adanet/iteration_0/candidate_t0_1_layer_dnn_grow_complexity_regularized/adanet/iteration_0/candidate_t0_1_layer_dnn_grow_complexity_regularized/adanet_loss/biased"
  input: "save/RestoreV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/candidate_t0_1_layer_dnn_grow_complexity_regularized/adanet_loss"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_1"
  op: "Assign"
  input: "adanet/iteration_0/candidate_t0_1_layer_dnn_grow_complexity_regularized/adanet/iteration_0/candidate_t0_1_layer_dnn_grow_complexity_regularized/adanet_loss/local_step"
  input: "save/RestoreV2:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/candidate_t0_1_layer_dnn_grow_complexity_regularized/adanet_loss"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_2"
  op: "Assign"
  input: "adanet/iteration_0/candidate_t0_1_layer_dnn_grow_complexity_regularized/adanet_loss"
  input: "save/RestoreV2:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/candidate_t0_1_layer_dnn_grow_complexity_regularized/adanet_loss"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_3"
  op: "Assign"
  input: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/bias"
  input: "save/RestoreV2:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_4"
  op: "Assign"
  input: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/weighted_subnetwork_0/logits/mixture_weight"
  input: "save/RestoreV2:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/weighted_subnetwork_0/logits/mixture_weight"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_5"
  op: "Assign"
  input: "adanet/iteration_0/step"
  input: "save/RestoreV2:5"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_6"
  op: "Assign"
  input: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/dense/bias"
  input: "save/RestoreV2:6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/subnetwork_t0_1_layer_dnn/dense/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_7"
  op: "Assign"
  input: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/dense/kernel"
  input: "save/RestoreV2:7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/subnetwork_t0_1_layer_dnn/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 784
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_8"
  op: "Assign"
  input: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/dense_1/bias"
  input: "save/RestoreV2:8"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/subnetwork_t0_1_layer_dnn/dense_1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_9"
  op: "Assign"
  input: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/dense_1/kernel"
  input: "save/RestoreV2:9"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/subnetwork_t0_1_layer_dnn/dense_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_10"
  op: "Assign"
  input: "adanet/iteration_0/train_op/is_over/is_over_var_template/is_over_var"
  input: "save/RestoreV2:10"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/train_op/is_over/is_over_var_template/is_over_var"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_11"
  op: "Assign"
  input: "adanet/iteration_1/candidate_t0_1_layer_dnn_grow_complexity_regularized/adanet/iteration_1/candidate_t0_1_layer_dnn_grow_complexity_regularized/adanet_loss/biased"
  input: "save/RestoreV2:11"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_1/candidate_t0_1_layer_dnn_grow_complexity_regularized/adanet_loss"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_12"
  op: "Assign"
  input: "adanet/iteration_1/candidate_t0_1_layer_dnn_grow_complexity_regularized/adanet/iteration_1/candidate_t0_1_layer_dnn_grow_complexity_regularized/adanet_loss/local_step"
  input: "save/RestoreV2:12"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_1/candidate_t0_1_layer_dnn_grow_complexity_regularized/adanet_loss"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_13"
  op: "Assign"
  input: "adanet/iteration_1/candidate_t0_1_layer_dnn_grow_complexity_regularized/adanet_loss"
  input: "save/RestoreV2:13"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_1/candidate_t0_1_layer_dnn_grow_complexity_regularized/adanet_loss"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_14"
  op: "Assign"
  input: "adanet/iteration_1/candidate_t1_1_layer_dnn_grow_complexity_regularized/adanet/iteration_1/candidate_t1_1_layer_dnn_grow_complexity_regularized/adanet_loss/biased"
  input: "save/RestoreV2:14"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_1/candidate_t1_1_layer_dnn_grow_complexity_regularized/adanet_loss"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_15"
  op: "Assign"
  input: "adanet/iteration_1/candidate_t1_1_layer_dnn_grow_complexity_regularized/adanet/iteration_1/candidate_t1_1_layer_dnn_grow_complexity_regularized/adanet_loss/local_step"
  input: "save/RestoreV2:15"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_1/candidate_t1_1_layer_dnn_grow_complexity_regularized/adanet_loss"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_16"
  op: "Assign"
  input: "adanet/iteration_1/candidate_t1_1_layer_dnn_grow_complexity_regularized/adanet_loss"
  input: "save/RestoreV2:16"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_1/candidate_t1_1_layer_dnn_grow_complexity_regularized/adanet_loss"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_17"
  op: "Assign"
  input: "adanet/iteration_1/candidate_t1_2_layer_dnn_grow_complexity_regularized/adanet/iteration_1/candidate_t1_2_layer_dnn_grow_complexity_regularized/adanet_loss/biased"
  input: "save/RestoreV2:17"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_1/candidate_t1_2_layer_dnn_grow_complexity_regularized/adanet_loss"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_18"
  op: "Assign"
  input: "adanet/iteration_1/candidate_t1_2_layer_dnn_grow_complexity_regularized/adanet/iteration_1/candidate_t1_2_layer_dnn_grow_complexity_regularized/adanet_loss/local_step"
  input: "save/RestoreV2:18"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_1/candidate_t1_2_layer_dnn_grow_complexity_regularized/adanet_loss"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_19"
  op: "Assign"
  input: "adanet/iteration_1/candidate_t1_2_layer_dnn_grow_complexity_regularized/adanet_loss"
  input: "save/RestoreV2:19"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_1/candidate_t1_2_layer_dnn_grow_complexity_regularized/adanet_loss"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_20"
  op: "Assign"
  input: "adanet/iteration_1/ensemble_t1_1_layer_dnn_grow_complexity_regularized/bias"
  input: "save/RestoreV2:20"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_1/ensemble_t1_1_layer_dnn_grow_complexity_regularized/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_21"
  op: "Assign"
  input: "adanet/iteration_1/ensemble_t1_1_layer_dnn_grow_complexity_regularized/weighted_subnetwork_0/logits/mixture_weight"
  input: "save/RestoreV2:21"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_1/ensemble_t1_1_layer_dnn_grow_complexity_regularized/weighted_subnetwork_0/logits/mixture_weight"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_22"
  op: "Assign"
  input: "adanet/iteration_1/ensemble_t1_1_layer_dnn_grow_complexity_regularized/weighted_subnetwork_1/logits/mixture_weight"
  input: "save/RestoreV2:22"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_1/ensemble_t1_1_layer_dnn_grow_complexity_regularized/weighted_subnetwork_1/logits/mixture_weight"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_23"
  op: "Assign"
  input: "adanet/iteration_1/ensemble_t1_2_layer_dnn_grow_complexity_regularized/bias"
  input: "save/RestoreV2:23"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_1/ensemble_t1_2_layer_dnn_grow_complexity_regularized/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_24"
  op: "Assign"
  input: "adanet/iteration_1/ensemble_t1_2_layer_dnn_grow_complexity_regularized/weighted_subnetwork_0/logits/mixture_weight"
  input: "save/RestoreV2:24"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_1/ensemble_t1_2_layer_dnn_grow_complexity_regularized/weighted_subnetwork_0/logits/mixture_weight"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_25"
  op: "Assign"
  input: "adanet/iteration_1/ensemble_t1_2_layer_dnn_grow_complexity_regularized/weighted_subnetwork_1/logits/mixture_weight"
  input: "save/RestoreV2:25"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_1/ensemble_t1_2_layer_dnn_grow_complexity_regularized/weighted_subnetwork_1/logits/mixture_weight"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_26"
  op: "Assign"
  input: "adanet/iteration_1/step"
  input: "save/RestoreV2:26"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_1/step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_27"
  op: "Assign"
  input: "adanet/iteration_1/subnetwork_t1_1_layer_dnn/adanet/iteration_1/subnetwork_t1_1_layer_dnn/dense/bias/RMSProp"
  input: "save/RestoreV2:27"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_1/subnetwork_t1_1_layer_dnn/dense/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_28"
  op: "Assign"
  input: "adanet/iteration_1/subnetwork_t1_1_layer_dnn/adanet/iteration_1/subnetwork_t1_1_layer_dnn/dense/bias/RMSProp_1"
  input: "save/RestoreV2:28"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_1/subnetwork_t1_1_layer_dnn/dense/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_29"
  op: "Assign"
  input: "adanet/iteration_1/subnetwork_t1_1_layer_dnn/adanet/iteration_1/subnetwork_t1_1_layer_dnn/dense/kernel/RMSProp"
  input: "save/RestoreV2:29"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_1/subnetwork_t1_1_layer_dnn/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 784
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_30"
  op: "Assign"
  input: "adanet/iteration_1/subnetwork_t1_1_layer_dnn/adanet/iteration_1/subnetwork_t1_1_layer_dnn/dense/kernel/RMSProp_1"
  input: "save/RestoreV2:30"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_1/subnetwork_t1_1_layer_dnn/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 784
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_31"
  op: "Assign"
  input: "adanet/iteration_1/subnetwork_t1_1_layer_dnn/adanet/iteration_1/subnetwork_t1_1_layer_dnn/dense_1/bias/RMSProp"
  input: "save/RestoreV2:31"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_1/subnetwork_t1_1_layer_dnn/dense_1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_32"
  op: "Assign"
  input: "adanet/iteration_1/subnetwork_t1_1_layer_dnn/adanet/iteration_1/subnetwork_t1_1_layer_dnn/dense_1/bias/RMSProp_1"
  input: "save/RestoreV2:32"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_1/subnetwork_t1_1_layer_dnn/dense_1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_33"
  op: "Assign"
  input: "adanet/iteration_1/subnetwork_t1_1_layer_dnn/adanet/iteration_1/subnetwork_t1_1_layer_dnn/dense_1/kernel/RMSProp"
  input: "save/RestoreV2:33"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_1/subnetwork_t1_1_layer_dnn/dense_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_34"
  op: "Assign"
  input: "adanet/iteration_1/subnetwork_t1_1_layer_dnn/adanet/iteration_1/subnetwork_t1_1_layer_dnn/dense_1/kernel/RMSProp_1"
  input: "save/RestoreV2:34"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_1/subnetwork_t1_1_layer_dnn/dense_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_35"
  op: "Assign"
  input: "adanet/iteration_1/subnetwork_t1_1_layer_dnn/dense/bias"
  input: "save/RestoreV2:35"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_1/subnetwork_t1_1_layer_dnn/dense/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_36"
  op: "Assign"
  input: "adanet/iteration_1/subnetwork_t1_1_layer_dnn/dense/kernel"
  input: "save/RestoreV2:36"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_1/subnetwork_t1_1_layer_dnn/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 784
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_37"
  op: "Assign"
  input: "adanet/iteration_1/subnetwork_t1_1_layer_dnn/dense_1/bias"
  input: "save/RestoreV2:37"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_1/subnetwork_t1_1_layer_dnn/dense_1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_38"
  op: "Assign"
  input: "adanet/iteration_1/subnetwork_t1_1_layer_dnn/dense_1/kernel"
  input: "save/RestoreV2:38"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_1/subnetwork_t1_1_layer_dnn/dense_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_39"
  op: "Assign"
  input: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense/bias/RMSProp"
  input: "save/RestoreV2:39"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_40"
  op: "Assign"
  input: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense/bias/RMSProp_1"
  input: "save/RestoreV2:40"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_41"
  op: "Assign"
  input: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense/kernel/RMSProp"
  input: "save/RestoreV2:41"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 784
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_42"
  op: "Assign"
  input: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense/kernel/RMSProp_1"
  input: "save/RestoreV2:42"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 784
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_43"
  op: "Assign"
  input: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense_1/bias/RMSProp"
  input: "save/RestoreV2:43"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense_1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_44"
  op: "Assign"
  input: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense_1/bias/RMSProp_1"
  input: "save/RestoreV2:44"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense_1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_45"
  op: "Assign"
  input: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense_1/kernel/RMSProp"
  input: "save/RestoreV2:45"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_46"
  op: "Assign"
  input: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense_1/kernel/RMSProp_1"
  input: "save/RestoreV2:46"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_47"
  op: "Assign"
  input: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense_2/bias/RMSProp"
  input: "save/RestoreV2:47"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense_2/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_48"
  op: "Assign"
  input: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense_2/bias/RMSProp_1"
  input: "save/RestoreV2:48"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense_2/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_49"
  op: "Assign"
  input: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense_2/kernel/RMSProp"
  input: "save/RestoreV2:49"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense_2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_50"
  op: "Assign"
  input: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense_2/kernel/RMSProp_1"
  input: "save/RestoreV2:50"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense_2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_51"
  op: "Assign"
  input: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense/bias"
  input: "save/RestoreV2:51"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_52"
  op: "Assign"
  input: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense/kernel"
  input: "save/RestoreV2:52"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 784
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_53"
  op: "Assign"
  input: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense_1/bias"
  input: "save/RestoreV2:53"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense_1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_54"
  op: "Assign"
  input: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense_1/kernel"
  input: "save/RestoreV2:54"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_55"
  op: "Assign"
  input: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense_2/bias"
  input: "save/RestoreV2:55"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense_2/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_56"
  op: "Assign"
  input: "adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense_2/kernel"
  input: "save/RestoreV2:56"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_1/subnetwork_t1_2_layer_dnn/dense_2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_57"
  op: "Assign"
  input: "adanet/iteration_1/train_op/is_over/is_over_var_template/is_over_var"
  input: "save/RestoreV2:57"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_1/train_op/is_over/is_over_var_template/is_over_var"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_58"
  op: "Assign"
  input: "current_iteration"
  input: "save/RestoreV2:58"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@current_iteration"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_59"
  op: "Assign"
  input: "global_step"
  input: "save/RestoreV2:59"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_shard"
  op: "NoOp"
  input: "^save/Assign"
  input: "^save/Assign_1"
  input: "^save/Assign_10"
  input: "^save/Assign_11"
  input: "^save/Assign_12"
  input: "^save/Assign_13"
  input: "^save/Assign_14"
  input: "^save/Assign_15"
  input: "^save/Assign_16"
  input: "^save/Assign_17"
  input: "^save/Assign_18"
  input: "^save/Assign_19"
  input: "^save/Assign_2"
  input: "^save/Assign_20"
  input: "^save/Assign_21"
  input: "^save/Assign_22"
  input: "^save/Assign_23"
  input: "^save/Assign_24"
  input: "^save/Assign_25"
  input: "^save/Assign_26"
  input: "^save/Assign_27"
  input: "^save/Assign_28"
  input: "^save/Assign_29"
  input: "^save/Assign_3"
  input: "^save/Assign_30"
  input: "^save/Assign_31"
  input: "^save/Assign_32"
  input: "^save/Assign_33"
  input: "^save/Assign_34"
  input: "^save/Assign_35"
  input: "^save/Assign_36"
  input: "^save/Assign_37"
  input: "^save/Assign_38"
  input: "^save/Assign_39"
  input: "^save/Assign_4"
  input: "^save/Assign_40"
  input: "^save/Assign_41"
  input: "^save/Assign_42"
  input: "^save/Assign_43"
  input: "^save/Assign_44"
  input: "^save/Assign_45"
  input: "^save/Assign_46"
  input: "^save/Assign_47"
  input: "^save/Assign_48"
  input: "^save/Assign_49"
  input: "^save/Assign_5"
  input: "^save/Assign_50"
  input: "^save/Assign_51"
  input: "^save/Assign_52"
  input: "^save/Assign_53"
  input: "^save/Assign_54"
  input: "^save/Assign_55"
  input: "^save/Assign_56"
  input: "^save/Assign_57"
  input: "^save/Assign_58"
  input: "^save/Assign_59"
  input: "^save/Assign_6"
  input: "^save/Assign_7"
  input: "^save/Assign_8"
  input: "^save/Assign_9"
}
node {
  name: "save/restore_all"
  op: "NoOp"
  input: "^save/restore_shard"
}
library {
  function {
    signature {
      name: "Dataset_map_preprocess_image_5677"
      input_arg {
        name: "arg0"
        type: DT_FLOAT
      }
      input_arg {
        name: "arg1_0"
        type: DT_INT32
      }
      output_arg {
        name: "reshape"
        type: DT_FLOAT
      }
      output_arg {
        name: "arg1"
        type: DT_INT32
      }
      description: "Wrapper for passing nested structures to and from tf.data functions."
    }
    node_def {
      name: "truediv/y"
      op: "Const"
      device: "/device:CPU:0"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 255.0
          }
        }
      }
    }
    node_def {
      name: "truediv"
      op: "RealDiv"
      input: "arg0"
      input: "truediv/y:output:0"
      device: "/device:CPU:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "Reshape/shape"
      op: "Const"
      device: "/device:CPU:0"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 3
              }
            }
            tensor_content: "\034\000\000\000\034\000\000\000\001\000\000\000"
          }
        }
      }
    }
    node_def {
      name: "Reshape"
      op: "Reshape"
      input: "truediv:z:0"
      input: "Reshape/shape:output:0"
      device: "/device:CPU:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
    }
    ret {
      key: "arg1"
      value: "arg1_0"
    }
    ret {
      key: "reshape"
      value: "Reshape:output:0"
    }
  }
  function {
    signature {
      name: "Dataset_from_generator_get_iterator_id_fn_5652"
      input_arg {
        name: "arg0"
        type: DT_INT32
      }
      output_arg {
        name: "pyfunc"
        type: DT_INT64
      }
      description: "Wrapper for passing nested structures to and from tf.data functions."
      is_stateful: true
    }
    node_def {
      name: "PyFunc"
      op: "PyFunc"
      device: "/device:CPU:0"
      attr {
        key: "Tin"
        value {
          list {
          }
        }
      }
      attr {
        key: "Tout"
        value {
          list {
            type: DT_INT64
          }
        }
      }
      attr {
        key: "token"
        value {
          s: "pyfunc_12"
        }
      }
    }
    ret {
      key: "pyfunc"
      value: "PyFunc:output:0"
    }
  }
  function {
    signature {
      name: "Dataset_flat_map_flat_map_fn_5649"
      input_arg {
        name: "arg0"
        type: DT_INT32
      }
      output_arg {
        name: "generatordataset"
        type: DT_VARIANT
      }
      description: "Wrapper for passing nested structures to and from tf.data functions."
      is_stateful: true
    }
    node_def {
      name: "GeneratorDataset"
      op: "GeneratorDataset"
      input: "arg0"
      device: "/device:CPU:0"
      attr {
        key: "Tfinalize_func_args"
        value {
          list {
          }
        }
      }
      attr {
        key: "Tinit_func_args"
        value {
          list {
            type: DT_INT32
          }
        }
      }
      attr {
        key: "Tnext_func_args"
        value {
          list {
          }
        }
      }
      attr {
        key: "finalize_func"
        value {
          func {
            name: "Dataset_from_generator_finalize_fn_5661"
          }
        }
      }
      attr {
        key: "init_func"
        value {
          func {
            name: "Dataset_from_generator_get_iterator_id_fn_5652"
          }
        }
      }
      attr {
        key: "next_func"
        value {
          func {
            name: "Dataset_from_generator_generator_next_fn_5656"
          }
        }
      }
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: 784
              }
            }
            shape {
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_FLOAT
            type: DT_INT32
          }
        }
      }
    }
    ret {
      key: "generatordataset"
      value: "GeneratorDataset:handle:0"
    }
  }
  function {
    signature {
      name: "Dataset_from_generator_finalize_fn_5661"
      input_arg {
        name: "arg0"
        type: DT_INT64
      }
      output_arg {
        name: "pyfunc"
        type: DT_INT64
      }
      description: "Wrapper for passing nested structures to and from tf.data functions."
      is_stateful: true
    }
    node_def {
      name: "PyFunc"
      op: "PyFunc"
      input: "arg0"
      device: "/device:CPU:0"
      attr {
        key: "Tin"
        value {
          list {
            type: DT_INT64
          }
        }
      }
      attr {
        key: "Tout"
        value {
          list {
            type: DT_INT64
          }
        }
      }
      attr {
        key: "token"
        value {
          s: "pyfunc_14"
        }
      }
    }
    ret {
      key: "pyfunc"
      value: "PyFunc:output:0"
    }
  }
  function {
    signature {
      name: "_make_dataset_KR9E5YonATk"
      output_arg {
        name: "modeldataset"
        type: DT_VARIANT
      }
      description: "Factory function for a dataset."
      is_stateful: true
    }
    node_def {
      name: "optimizations"
      op: "Const"
      device: "/device:CPU:0"
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 3
              }
            }
            string_val: "map_and_batch_fusion"
            string_val: "noop_elimination"
            string_val: "shuffle_and_repeat_fusion"
          }
        }
      }
    }
    node_def {
      name: "TensorDataset/tensors/component_0"
      op: "Const"
      device: "/device:CPU:0"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 0
          }
        }
      }
    }
    node_def {
      name: "TensorDataset"
      op: "TensorDataset"
      input: "TensorDataset/tensors/component_0:output:0"
      device: "/device:CPU:0"
      attr {
        key: "Toutput_types"
        value {
          list {
            type: DT_INT32
          }
        }
      }
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node_def {
      name: "FlatMapDataset"
      op: "FlatMapDataset"
      input: "TensorDataset:handle:0"
      device: "/device:CPU:0"
      attr {
        key: "Targuments"
        value {
          list {
          }
        }
      }
      attr {
        key: "f"
        value {
          func {
            name: "Dataset_flat_map_flat_map_fn_5649"
          }
        }
      }
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: 784
              }
            }
            shape {
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_FLOAT
            type: DT_INT32
          }
        }
      }
    }
    node_def {
      name: "ShuffleDataset/buffer_size"
      op: "Const"
      device: "/device:CPU:0"
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
            }
            int64_val: 320
          }
        }
      }
    }
    node_def {
      name: "ShuffleDataset/seed"
      op: "Const"
      device: "/device:CPU:0"
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
            }
            int64_val: 3
          }
        }
      }
    }
    node_def {
      name: "ShuffleDataset/seed_1"
      op: "Const"
      device: "/device:CPU:0"
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
            }
            int64_val: 3
          }
        }
      }
    }
    node_def {
      name: "ShuffleDataset/seed2/Equal/y"
      op: "Const"
      device: "/device:CPU:0"
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
            }
            int64_val: 0
          }
        }
      }
    }
    node_def {
      name: "ShuffleDataset/seed2/Equal"
      op: "Equal"
      input: "ShuffleDataset/seed_1:output:0"
      input: "ShuffleDataset/seed2/Equal/y:output:0"
      device: "/device:CPU:0"
      attr {
        key: "T"
        value {
          type: DT_INT64
        }
      }
    }
    node_def {
      name: "ShuffleDataset/seed2/Const"
      op: "Const"
      device: "/device:CPU:0"
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
            }
            int64_val: 3
          }
        }
      }
    }
    node_def {
      name: "ShuffleDataset/seed2/Equal_1/y"
      op: "Const"
      device: "/device:CPU:0"
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
            }
            int64_val: 0
          }
        }
      }
    }
    node_def {
      name: "ShuffleDataset/seed2/Equal_1"
      op: "Equal"
      input: "ShuffleDataset/seed2/Const:output:0"
      input: "ShuffleDataset/seed2/Equal_1/y:output:0"
      device: "/device:CPU:0"
      attr {
        key: "T"
        value {
          type: DT_INT64
        }
      }
    }
    node_def {
      name: "ShuffleDataset/seed2/LogicalAnd"
      op: "LogicalAnd"
      input: "ShuffleDataset/seed2/Equal:z:0"
      input: "ShuffleDataset/seed2/Equal_1:z:0"
      device: "/device:CPU:0"
    }
    node_def {
      name: "ShuffleDataset/seed2/Const_1"
      op: "Const"
      device: "/device:CPU:0"
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
            }
            int64_val: 2147483647
          }
        }
      }
    }
    node_def {
      name: "ShuffleDataset/seed2/Const_2"
      op: "Const"
      device: "/device:CPU:0"
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
            }
            int64_val: 3
          }
        }
      }
    }
    node_def {
      name: "ShuffleDataset/seed2"
      op: "Select"
      input: "ShuffleDataset/seed2/LogicalAnd:z:0"
      input: "ShuffleDataset/seed2/Const_1:output:0"
      input: "ShuffleDataset/seed2/Const_2:output:0"
      device: "/device:CPU:0"
      attr {
        key: "T"
        value {
          type: DT_INT64
        }
      }
    }
    node_def {
      name: "ShuffleDataset"
      op: "ShuffleDataset"
      input: "FlatMapDataset:handle:0"
      input: "ShuffleDataset/buffer_size:output:0"
      input: "ShuffleDataset/seed:output:0"
      input: "ShuffleDataset/seed2:output:0"
      device: "/device:CPU:0"
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: 784
              }
            }
            shape {
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_FLOAT
            type: DT_INT32
          }
        }
      }
      attr {
        key: "reshuffle_each_iteration"
        value {
          b: true
        }
      }
    }
    node_def {
      name: "RepeatDataset/count"
      op: "Const"
      device: "/device:CPU:0"
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
            }
            int64_val: -1
          }
        }
      }
    }
    node_def {
      name: "RepeatDataset"
      op: "RepeatDataset"
      input: "ShuffleDataset:handle:0"
      input: "RepeatDataset/count:output:0"
      device: "/device:CPU:0"
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: 784
              }
            }
            shape {
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_FLOAT
            type: DT_INT32
          }
        }
      }
    }
    node_def {
      name: "MapDataset"
      op: "MapDataset"
      input: "RepeatDataset:handle:0"
      device: "/device:CPU:0"
      attr {
        key: "Targuments"
        value {
          list {
          }
        }
      }
      attr {
        key: "f"
        value {
          func {
            name: "Dataset_map_preprocess_image_5677"
          }
        }
      }
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: 28
              }
              dim {
                size: 28
              }
              dim {
                size: 1
              }
            }
            shape {
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_FLOAT
            type: DT_INT32
          }
        }
      }
      attr {
        key: "preserve_cardinality"
        value {
          b: false
        }
      }
      attr {
        key: "use_inter_op_parallelism"
        value {
          b: true
        }
      }
    }
    node_def {
      name: "BatchDatasetV2/batch_size"
      op: "Const"
      device: "/device:CPU:0"
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
            }
            int64_val: 32
          }
        }
      }
    }
    node_def {
      name: "BatchDatasetV2/drop_remainder"
      op: "Const"
      device: "/device:CPU:0"
      attr {
        key: "dtype"
        value {
          type: DT_BOOL
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_BOOL
            tensor_shape {
            }
            bool_val: false
          }
        }
      }
    }
    node_def {
      name: "BatchDatasetV2"
      op: "BatchDatasetV2"
      input: "MapDataset:handle:0"
      input: "BatchDatasetV2/batch_size:output:0"
      input: "BatchDatasetV2/drop_remainder:output:0"
      device: "/device:CPU:0"
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 28
              }
              dim {
                size: 28
              }
              dim {
                size: 1
              }
            }
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_FLOAT
            type: DT_INT32
          }
        }
      }
    }
    node_def {
      name: "OptimizeDataset"
      op: "OptimizeDataset"
      input: "BatchDatasetV2:handle:0"
      input: "optimizations:output:0"
      device: "/device:CPU:0"
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 28
              }
              dim {
                size: 28
              }
              dim {
                size: 1
              }
            }
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_FLOAT
            type: DT_INT32
          }
        }
      }
    }
    node_def {
      name: "ModelDataset"
      op: "ModelDataset"
      input: "OptimizeDataset:handle:0"
      device: "/device:CPU:0"
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 28
              }
              dim {
                size: 28
              }
              dim {
                size: 1
              }
            }
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_FLOAT
            type: DT_INT32
          }
        }
      }
    }
    ret {
      key: "modeldataset"
      value: "ModelDataset:handle:0"
    }
  }
  function {
    signature {
      name: "Dataset_from_generator_generator_next_fn_5656"
      input_arg {
        name: "arg0"
        type: DT_INT64
      }
      output_arg {
        name: "pyfunc"
        type: DT_FLOAT
      }
      output_arg {
        name: "pyfunc_0"
        type: DT_INT32
      }
      description: "Wrapper for passing nested structures to and from tf.data functions."
      is_stateful: true
    }
    node_def {
      name: "PyFunc"
      op: "PyFunc"
      input: "arg0"
      device: "/device:CPU:0"
      attr {
        key: "Tin"
        value {
          list {
            type: DT_INT64
          }
        }
      }
      attr {
        key: "Tout"
        value {
          list {
            type: DT_FLOAT
            type: DT_INT32
          }
        }
      }
      attr {
        key: "token"
        value {
          s: "pyfunc_13"
        }
      }
    }
    ret {
      key: "pyfunc"
      value: "PyFunc:output:0"
    }
    ret {
      key: "pyfunc_0"
      value: "PyFunc:output:1"
    }
  }
}
versions {
  producer: 27
  min_consumer: 12
}
